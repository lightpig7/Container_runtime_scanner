<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="422f5c82-1bd6-4613-aeaa-864f6db5fcf6" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/internal/data/types.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/checkpoint/list.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/checkpoint/options.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/common/id_response.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/commit.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/container.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/create_request.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/errors.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/exec.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/health.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/network_settings.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/options.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/port.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/stats.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/top_response.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/update_response.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/image/delete_response.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/image/image.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/image/image_inspect.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/image/manifest.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/image/summary.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/network/create_response.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/network/endpoint.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/network/ipam.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/registry/search.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/storage/driver_data.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/service_create_response.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/service_update_response.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/system/info.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/system/runtime.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/system/security_opts.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/types_deprecated.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/checkpoint.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/client_interfaces.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_history_opts.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_inspect_opts.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_load_opts.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_save_opts.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/internal/lazyregexp/lazyregexp.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/internal/multierror/multierror.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/moby/docker-image-spec/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/moby/docker-image-spec/specs-go/v1/image.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/auto/sdk/CONTRIBUTING.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/auto/sdk/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/auto/sdk/VERSIONING.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/auto/sdk/doc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/auto/sdk/internal/telemetry/attr.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/auto/sdk/internal/telemetry/doc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/auto/sdk/internal/telemetry/id.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/auto/sdk/internal/telemetry/number.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/auto/sdk/internal/telemetry/resource.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/auto/sdk/internal/telemetry/scope.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/auto/sdk/internal/telemetry/span.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/auto/sdk/internal/telemetry/status.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/auto/sdk/internal/telemetry/traces.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/auto/sdk/internal/telemetry/value.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/auto/sdk/limit.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/auto/sdk/span.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/auto/sdk/tracer.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/auto/sdk/tracer_provider.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/attribute/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/baggage/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/codes/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/dependencies.Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/metric/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/metric/embedded/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/propagation/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/renovate.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.17.0/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.21.0/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.26.0/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.26.0/attribute_group.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.26.0/doc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.26.0/exception.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.26.0/metric.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.26.0/schema.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/auto.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/embedded/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/internal/telemetry/attr.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/internal/telemetry/doc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/internal/telemetry/id.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/internal/telemetry/number.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/internal/telemetry/resource.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/internal/telemetry/scope.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/internal/telemetry/span.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/internal/telemetry/status.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/internal/telemetry/traces.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/internal/telemetry/value.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/noop/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/noop/noop.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/provider.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/span.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/tracer.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/verify_readmes.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/verify_released_changelog.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/audit/check_container_capabilties.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/audit/check_container_capabilties.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/audit/check_container_mounts.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/audit/check_container_mounts.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/audit/is_private_contrainer.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/audit/is_private_contrainer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/audit/main_part.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/audit/main_part.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/audit/version_audit.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/audit/version_audit.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/cluster/scanner/scanner.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/cluster/scanner/scanner.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/data/log/audit.log" beforeDir="false" afterPath="$PROJECT_DIR$/internal/data/log/audit.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/data/nvd-data/versions/all-container-versions.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/data/nvd-data/versions/buildah-versions.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/data/nvd-data/versions/container-versions-summary.csv" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/data/nvd-data/versions/containerd-versions.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/data/nvd-data/versions/cri-o-versions.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/data/nvd-data/versions/cri-versions.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/data/nvd-data/versions/docker-versions.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/data/nvd-data/versions/k8s-versions.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/data/nvd-data/versions/kubernetes-versions.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/data/nvd-data/versions/lxc-versions.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/data/nvd-data/versions/lxd-versions.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/data/nvd-data/versions/moby-versions.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/data/nvd-data/versions/oci-versions.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/data/nvd-data/versions/podman-versions.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/data/nvd-data/versions/runc-versions.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/data/nvd_get.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/data/nvd_get.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/docker/contoller.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/docker/contoller.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/docker/docker_utils.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/docker/docker_utils.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/distribution/LICENSE" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/distribution/reference/helpers_deprecated.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/distribution/reference/normalize_deprecated.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/distribution/reference/reference_deprecated.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/distribution/reference/regexp_deprecated.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/distribution/reference/sort_deprecated.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/AUTHORS" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/AUTHORS" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/common.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/common.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/common_unix.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/common_windows.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/swagger.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/swagger.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/auth.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/configs.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/change_response_deprecated.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/container_top.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/container_update.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/hostconfig.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/hostconfig.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/hostconfig_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/hostconfig_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/hostconfig_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/hostconfig_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/events/events.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/events/events.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/filters/errors.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/filters/errors.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/filters/parse.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/filters/parse.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/graph_driver_data.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/id_response.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/image/opts.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/image/opts.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/image_delete_response_item.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/image_summary.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/mount/mount.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/mount/mount.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/network/network.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/network/network.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/port.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/registry/authconfig.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/registry/authconfig.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/registry/registry.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/registry/registry.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/service_update_response.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/stats.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/container.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/container.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/runtime/gen.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/runtime/gen.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/runtime/plugin.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/runtime/plugin.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/runtime/plugin.proto" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/runtime/plugin.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/secret.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/secret.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/service.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/swarm.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/swarm.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/types.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/types.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/versions/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/volume/cluster_volume.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/volume/cluster_volume.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/volume/options.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/volume/options.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/build_cancel.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/build_cancel.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/build_prune.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/build_prune.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/checkpoint_create.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/checkpoint_create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/checkpoint_delete.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/checkpoint_delete.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/checkpoint_list.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/checkpoint_list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/client_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/client_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/config_create.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/config_create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/config_inspect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/config_inspect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/config_list.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/config_list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/config_remove.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/config_remove.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/config_update.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/config_update.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_attach.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_attach.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_commit.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_commit.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_copy.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_copy.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_create.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_diff.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_diff.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_exec.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_exec.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_export.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_export.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_inspect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_inspect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_kill.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_kill.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_list.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_logs.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_logs.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_pause.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_pause.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_prune.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_prune.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_remove.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_remove.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_rename.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_rename.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_resize.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_resize.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_restart.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_restart.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_start.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_start.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_stats.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_stats.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_stop.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_stop.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_top.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_top.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_unpause.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_unpause.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_update.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_update.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_wait.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_wait.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/disk_usage.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/disk_usage.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/distribution_inspect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/distribution_inspect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/errors.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/errors.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/events.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/events.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/hijack.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/hijack.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_build.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_build.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_create.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_history.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_history.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_import.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_import.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_inspect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_inspect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_list.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_load.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_load.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_prune.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_prune.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_pull.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_pull.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_push.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_push.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_remove.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_remove.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_save.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_save.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_search.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_search.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_tag.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_tag.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/info.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/info.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/interface.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/interface_experimental.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/interface_stable.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/login.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/login.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_connect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_connect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_create.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_disconnect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_disconnect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_inspect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_inspect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_list.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_prune.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_prune.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_remove.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_remove.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/node_inspect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/node_inspect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/node_list.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/node_list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/node_remove.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/node_remove.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/node_update.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/node_update.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/options.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/options.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/ping.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/ping.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_disable.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_disable.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_enable.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_enable.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_inspect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_inspect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_install.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_install.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_list.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_push.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_push.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_remove.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_remove.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_set.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_set.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_upgrade.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_upgrade.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/request.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/request.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/secret_create.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/secret_create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/secret_inspect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/secret_inspect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/secret_list.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/secret_list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/secret_remove.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/secret_remove.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/secret_update.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/secret_update.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_create.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_inspect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_inspect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_list.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_logs.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_logs.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_remove.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_remove.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_update.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_update.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/swarm_get_unlock_key.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/swarm_get_unlock_key.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/swarm_init.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/swarm_init.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/swarm_inspect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/swarm_inspect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/swarm_unlock.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/swarm_unlock.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/task_inspect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/task_inspect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/task_list.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/task_list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/task_logs.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/task_logs.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/transport.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/utils.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/utils.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/version.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/version.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/volume_create.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/volume_create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/volume_inspect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/volume_inspect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/volume_list.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/volume_list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/volume_prune.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/volume_prune.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/volume_remove.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/volume_remove.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/volume_update.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/volume_update.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/errdefs/defs.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/errdefs/defs.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/errdefs/helpers.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/errdefs/helpers.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/errdefs/http_helpers.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/errdefs/http_helpers.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/errdefs/is.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/errdefs/is.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/google/go-cmp/cmp/internal/function/func.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/google/go-cmp/cmp/internal/function/func.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/google/go-cmp/cmp/options.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/google/go-cmp/cmp/options.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/digestset/set.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/.codespellignore" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/.codespellignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/.codespellrc" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/.codespellrc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/.gitmodules" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/.golangci.yml" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/.golangci.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/CHANGELOG.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/CHANGELOG.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/CODEOWNERS" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/CODEOWNERS" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/RELEASING.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/RELEASING.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/VERSIONING.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/VERSIONING.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/attribute/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/attribute/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/attribute/encoder.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/attribute/encoder.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/attribute/filter.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/attribute/filter.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/attribute/iterator.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/attribute/iterator.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/attribute/key.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/attribute/key.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/attribute/kv.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/attribute/kv.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/attribute/set.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/attribute/set.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/attribute/value.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/attribute/value.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/baggage/baggage.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/baggage/baggage.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/baggage/context.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/baggage/context.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/baggage/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/baggage/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/codes/codes.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/codes/codes.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/codes/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/codes/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/error_handler.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/error_handler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/get_main_pkgs.sh" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/get_main_pkgs.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/handler.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/handler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/attribute/attribute.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/attribute/attribute.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/baggage/baggage.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/baggage/baggage.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/baggage/context.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/baggage/context.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/gen.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/gen.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/global/handler.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/global/handler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/global/instruments.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/global/instruments.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/global/internal_logging.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/global/internal_logging.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/global/meter.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/global/meter.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/global/propagator.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/global/propagator.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/global/state.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/global/state.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/global/trace.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/global/trace.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/rawhelpers.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal/rawhelpers.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal_logging.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/internal_logging.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/metric.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/metric.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/metric/asyncfloat64.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/metric/asyncfloat64.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/metric/asyncint64.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/metric/asyncint64.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/metric/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/metric/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/metric/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/metric/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/metric/embedded/embedded.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/metric/embedded/embedded.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/metric/instrument.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/metric/instrument.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/metric/meter.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/metric/meter.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/metric/syncfloat64.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/metric/syncfloat64.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/metric/syncint64.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/metric/syncint64.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/propagation.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/propagation.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/propagation/baggage.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/propagation/baggage.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/propagation/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/propagation/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/propagation/propagation.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/propagation/propagation.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/propagation/trace_context.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/propagation/trace_context.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/requirements.txt" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/requirements.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.17.0/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.17.0/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.17.0/event.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.17.0/event.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.17.0/exception.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.17.0/exception.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.17.0/http.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.17.0/http.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.17.0/resource.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.17.0/resource.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.17.0/schema.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.17.0/schema.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.17.0/trace.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.17.0/trace.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.21.0/attribute_group.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.21.0/attribute_group.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.21.0/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.21.0/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.21.0/event.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.21.0/event.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.21.0/exception.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.21.0/exception.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.21.0/resource.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.21.0/resource.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.21.0/schema.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.21.0/schema.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.21.0/trace.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/semconv/v1.21.0/trace.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/context.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/context.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/embedded/embedded.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/embedded/embedded.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/nonrecording.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/nonrecording.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/noop.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/noop.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/trace.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/trace.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/tracestate.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/trace/tracestate.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/verify_examples.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/version.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/version.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/versions.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opentelemetry.io/otel/versions.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/modules.txt" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/modules.txt" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.7.windows-amd64" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="true" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2tRvET5xQRpdF0Cq42qH8oaEx6i" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;Go Build.go build Container_runtime_scanner (1).executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build Container_runtime_scanner.executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build main.go (1).executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build main.go.executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build test.go.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.automatic.dependencies.download&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/soul&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.deploy.options&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="F:\code\GO\Container_runtime_scanner\internal\containerd" />
      <recent name="F:\code\GO\Container_runtime_scanner\internal\data\auxiliary" />
      <recent name="F:\code\GO\Container_runtime_scanner\internal\pentest\exp" />
      <recent name="F:\code\GO\Container_runtime_scanner\internal\pentest" />
      <recent name="F:\code\GO\Container_runtime_scanner" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build Container_runtime_scanner (1)">
    <configuration name="go build Container_runtime_scanner (1)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="Container_runtime_scanner" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="Container_runtime_scanner" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build Container_runtime_scanner" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="Container_runtime_scanner" />
      <target name="Containner_test" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="Container_runtime_scanner" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build nvd_get.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="Container_runtime_scanner" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="Container_runtime_scanner" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/internal/data/nvd_get.go" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.go build Container_runtime_scanner (1)" />
      <item itemvalue="Go Build.go build Container_runtime_scanner" />
      <item itemvalue="Go Build.go build nvd_get.go" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build Container_runtime_scanner (1)" />
        <item itemvalue="Go Build.go build Container_runtime_scanner" />
        <item itemvalue="Go Build.go build nvd_get.go" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-467a64f6063b-ee0e143f3e2b-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-233.11799.286" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
  <component name="VgoProject">
    <environment>
      <map>
        <entry key="GOPROXY" value="https://goproxy.cn,direct" />
      </map>
    </environment>
    <automatic-dependencies-download-enabled>true</automatic-dependencies-download-enabled>
    <settings-migrated>true</settings-migrated>
  </component>
</project>