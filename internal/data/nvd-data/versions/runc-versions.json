[
  {
    "cveId": "CVE-2025-1306",
    "technology": "runc",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:spicethemes:newscrunch:*:*:*:*:*:wordpress:*:*",
    "description": "The Newscrunch theme for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.8.4. This is due to missing or incorrect nonce validation on the newscrunch_install_and_activate_plugin() function. This makes it possible for unauthenticated attackers to upload arbitrary files via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.",
    "publishedDate": "2025-03-04T05:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2025-1307",
    "technology": "runc",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:spicethemes:newscrunch:*:*:*:*:*:wordpress:*:*",
    "description": "The Newscrunch theme for WordPress is vulnerable to arbitrary file uploads due to a missing capability check in the newscrunch_install_and_activate_plugin() function in all versions up to, and including, 1.8.4.1. This makes it possible for authenticated attackers, with Subscriber-level access and above, to upload arbitrary files on the affected site's server which may make remote code execution possible.",
    "publishedDate": "2025-03-04T05:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2024-21626",
    "technology": "runc",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:runc:*:*:*:*:*:*:*:*",
    "description": "runc is a CLI tool for spawning and running containers on Linux according to the OCI specification. In runc 1.1.11 and earlier, due to an internal file descriptor leak, an attacker could cause a newly-spawned container process (from runc exec) to have a working directory in the host filesystem namespace, allowing for a container escape by giving access to the host filesystem (\"attack 2\"). The same attack could be used by a malicious image to allow a container process to gain access to the host filesystem through runc run (\"attack 1\"). Variants of attacks 1 and 2 could be also be used to overwrite semi-arbitrary host binaries, allowing for complete container escapes (\"attack 3a\" and \"attack 3b\"). runc 1.1.12 includes patches for this issue. ",
    "publishedDate": "2024-01-31T22:15Z",
    "cvssScore": 8.6,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2024-45310",
    "technology": "runc",
    "version": "1.1.14",
    "vulnerable": false,
    "cpeUri": "",
    "description": "runc is a CLI tool for spawning and running containers according to the OCI specification. runc 1.1.13 and earlier, as well as 1.2.0-rc2 and earlier, can be tricked into creating empty files or directories in arbitrary locations in the host filesystem by sharing a volume between two containers and exploiting a race with `os.MkdirAll`. While this could be used to create empty files, existing files would not be truncated. An attacker must have the ability to start containers using some kind of custom volume configuration. Containers using user namespaces are still affected, but the scope of places an attacker can create inodes can be significantly reduced. Sufficiently strict LSM policies (SELinux/Apparmor) can also in principle block this attack -- we suspect the industry standard SELinux policy may restrict this attack's scope but the exact scope of protection hasn't been analysed. This is exploitable using runc directly as well as through Docker and Kubernetes. The issue is fixed in runc v1.1.14 and v1.2.0-rc3.\n\nSome workarounds are available. Using user namespaces restricts this attack fairly significantly such that the attacker can only create inodes in directories that the remapped root user/group has write access to. Unless the root user is remapped to an actual\nuser on the host (such as with rootless containers that don't use `/etc/sub[ug]id`), this in practice means that an attacker would only be able to create inodes in world-writable directories. A strict enough SELinux or AppArmor policy could in principle also restrict the scope if a specific label is applied to the runc runtime, though neither the extent to which the standard existing policies block this attack nor what exact policies are needed to sufficiently restrict this attack have been thoroughly tested.",
    "publishedDate": "2024-09-03T19:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-45310",
    "technology": "runc",
    "version": "1.2.0-rc3.",
    "vulnerable": false,
    "cpeUri": "",
    "description": "runc is a CLI tool for spawning and running containers according to the OCI specification. runc 1.1.13 and earlier, as well as 1.2.0-rc2 and earlier, can be tricked into creating empty files or directories in arbitrary locations in the host filesystem by sharing a volume between two containers and exploiting a race with `os.MkdirAll`. While this could be used to create empty files, existing files would not be truncated. An attacker must have the ability to start containers using some kind of custom volume configuration. Containers using user namespaces are still affected, but the scope of places an attacker can create inodes can be significantly reduced. Sufficiently strict LSM policies (SELinux/Apparmor) can also in principle block this attack -- we suspect the industry standard SELinux policy may restrict this attack's scope but the exact scope of protection hasn't been analysed. This is exploitable using runc directly as well as through Docker and Kubernetes. The issue is fixed in runc v1.1.14 and v1.2.0-rc3.\n\nSome workarounds are available. Using user namespaces restricts this attack fairly significantly such that the attacker can only create inodes in directories that the remapped root user/group has write access to. Unless the root user is remapped to an actual\nuser on the host (such as with rootless containers that don't use `/etc/sub[ug]id`), this in practice means that an attacker would only be able to create inodes in world-writable directories. A strict enough SELinux or AppArmor policy could in principle also restrict the scope if a specific label is applied to the runc runtime, though neither the extent to which the standard existing policies block this attack nor what exact policies are needed to sufficiently restrict this attack have been thoroughly tested.",
    "publishedDate": "2024-09-03T19:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-25809",
    "technology": "runc",
    "version": "1.1.5",
    "vulnerable": false,
    "cpeUri": "",
    "description": "runc is a CLI tool for spawning and running containers according to the OCI specification. In affected versions it was found that rootless runc makes `/sys/fs/cgroup` writable in following conditons: 1. when runc is executed inside the user namespace, and the `config.json` does not specify the cgroup namespace to be unshared (e.g.., `(docker|podman|nerdctl) run --cgroupns=host`, with Rootless Docker/Podman/nerdctl) or 2. when runc is executed outside the user namespace, and `/sys` is mounted with `rbind, ro` (e.g., `runc spec --rootless`; this condition is very rare). A container may gain the write access to user-owned cgroup hierarchy `/sys/fs/cgroup/user.slice/...` on the host . Other users's cgroup hierarchies are not affected. Users are advised to upgrade to version 1.1.5. Users unable to upgrade may unshare the cgroup namespace (`(docker|podman|nerdctl) run --cgroupns=private)`. This is the default behavior of Docker/Podman/nerdctl on cgroup v2 hosts. or add `/sys/fs/cgroup` to `maskedPaths`.\n",
    "publishedDate": "2023-03-29T19:15Z",
    "cvssScore": 6.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-25809",
    "technology": "runc",
    "version": "2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "runc is a CLI tool for spawning and running containers according to the OCI specification. In affected versions it was found that rootless runc makes `/sys/fs/cgroup` writable in following conditons: 1. when runc is executed inside the user namespace, and the `config.json` does not specify the cgroup namespace to be unshared (e.g.., `(docker|podman|nerdctl) run --cgroupns=host`, with Rootless Docker/Podman/nerdctl) or 2. when runc is executed outside the user namespace, and `/sys` is mounted with `rbind, ro` (e.g., `runc spec --rootless`; this condition is very rare). A container may gain the write access to user-owned cgroup hierarchy `/sys/fs/cgroup/user.slice/...` on the host . Other users's cgroup hierarchies are not affected. Users are advised to upgrade to version 1.1.5. Users unable to upgrade may unshare the cgroup namespace (`(docker|podman|nerdctl) run --cgroupns=private)`. This is the default behavior of Docker/Podman/nerdctl on cgroup v2 hosts. or add `/sys/fs/cgroup` to `maskedPaths`.\n",
    "publishedDate": "2023-03-29T19:15Z",
    "cvssScore": 6.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-25809",
    "technology": "runc",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:runc:*:*:*:*:*:*:*:*",
    "description": "runc is a CLI tool for spawning and running containers according to the OCI specification. In affected versions it was found that rootless runc makes `/sys/fs/cgroup` writable in following conditons: 1. when runc is executed inside the user namespace, and the `config.json` does not specify the cgroup namespace to be unshared (e.g.., `(docker|podman|nerdctl) run --cgroupns=host`, with Rootless Docker/Podman/nerdctl) or 2. when runc is executed outside the user namespace, and `/sys` is mounted with `rbind, ro` (e.g., `runc spec --rootless`; this condition is very rare). A container may gain the write access to user-owned cgroup hierarchy `/sys/fs/cgroup/user.slice/...` on the host . Other users's cgroup hierarchies are not affected. Users are advised to upgrade to version 1.1.5. Users unable to upgrade may unshare the cgroup namespace (`(docker|podman|nerdctl) run --cgroupns=private)`. This is the default behavior of Docker/Podman/nerdctl on cgroup v2 hosts. or add `/sys/fs/cgroup` to `maskedPaths`.\n",
    "publishedDate": "2023-03-29T19:15Z",
    "cvssScore": 6.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-27561",
    "technology": "runc",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:runc:*:*:*:*:*:*:*:*",
    "description": "runc through 1.1.4 has Incorrect Access Control leading to Escalation of Privileges, related to libcontainer/rootfs_linux.go. To exploit this, an attacker must be able to spawn two containers with custom volume-mount configurations, and be able to run custom images. NOTE: this issue exists because of a CVE-2019-19921 regression.",
    "publishedDate": "2023-03-03T19:15Z",
    "cvssScore": 7,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-28642",
    "technology": "runc",
    "version": "1.1.5",
    "vulnerable": false,
    "cpeUri": "",
    "description": "runc is a CLI tool for spawning and running containers according to the OCI specification. It was found that AppArmor can be bypassed when `/proc` inside the container is symlinked with a specific mount configuration. This issue has been fixed in runc version 1.1.5, by prohibiting symlinked `/proc`. See PR #3785 for details. users are advised to upgrade. Users unable to upgrade should avoid using an untrusted container image.\n\n",
    "publishedDate": "2023-03-29T19:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-28642",
    "technology": "runc",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:runc:*:*:*:*:*:*:*:*",
    "description": "runc is a CLI tool for spawning and running containers according to the OCI specification. It was found that AppArmor can be bypassed when `/proc` inside the container is symlinked with a specific mount configuration. This issue has been fixed in runc version 1.1.5, by prohibiting symlinked `/proc`. See PR #3785 for details. users are advised to upgrade. Users unable to upgrade should avoid using an untrusted container image.\n\n",
    "publishedDate": "2023-03-29T19:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-52430",
    "technology": "runc",
    "version": "1.1.20",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:authcrunch:caddy-security:1.1.20:*:*:*:*:*:*:*",
    "description": "The caddy-security plugin 1.1.20 for Caddy allows reflected XSS via a GET request to a URL that contains an XSS payload and begins with either a /admin or /settings/mfa/delete/ substring.",
    "publishedDate": "2024-02-12T23:15Z",
    "cvssScore": 6.1,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.1.20",
      "startExcluding": "1.1.20"
    }
  },
  {
    "cveId": "CVE-2022-24769",
    "technology": "runc",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:runc:*:*:*:*:*:*:*:*",
    "description": "Moby is an open-source project created by Docker to enable and accelerate software containerization. A bug was found in Moby (Docker Engine) prior to version 20.10.14 where containers were incorrectly started with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during `execve(2)`. Normally, when executable programs have specified permitted file capabilities, otherwise unprivileged users and processes can execute those programs and gain the specified file capabilities up to the bounding set. Due to this bug, containers which included executable programs with inheritable file capabilities allowed otherwise unprivileged users and processes to additionally gain these inheritable file capabilities up to the container's bounding set. Containers which use Linux users and groups to perform privilege separation inside the container are most directly impacted. This bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container's bounding set. This bug has been fixed in Moby (Docker Engine) 20.10.14. Running containers should be stopped, deleted, and recreated for the inheritable capabilities to be reset. This fix changes Moby (Docker Engine) behavior such that containers are started with a more typical Linux environment. As a workaround, the entry point of a container can be modified to use a utility like `capsh(1)` to drop inheritable capabilities prior to the primary process starting.",
    "publishedDate": "2022-03-24T20:15Z",
    "cvssScore": 5.9,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-29162",
    "technology": "runc",
    "version": "1.1.2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "runc is a CLI tool for spawning and running containers on Linux according to the OCI specification. A bug was found in runc prior to version 1.1.2 where `runc exec --cap` created processes with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during execve(2). This bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container's bounding set. This bug has been fixed in runc 1.1.2. This fix changes `runc exec --cap` behavior such that the additional capabilities granted to the process being executed (as specified via `--cap` arguments) do not include inheritable capabilities. In addition, `runc spec` is changed to not set any inheritable capabilities in the created example OCI spec (`config.json`) file.",
    "publishedDate": "2022-05-17T21:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-29162",
    "technology": "runc",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:runc:*:*:*:*:*:*:*:*",
    "description": "runc is a CLI tool for spawning and running containers on Linux according to the OCI specification. A bug was found in runc prior to version 1.1.2 where `runc exec --cap` created processes with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during execve(2). This bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container's bounding set. This bug has been fixed in runc 1.1.2. This fix changes `runc exec --cap` behavior such that the additional capabilities granted to the process being executed (as specified via `--cap` arguments) do not include inheritable capabilities. In addition, `runc spec` is changed to not set any inheritable capabilities in the created example OCI spec (`config.json`) file.",
    "publishedDate": "2022-05-17T21:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-30465",
    "technology": "runc",
    "version": "1.0.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:runc:1.0.0:rc7:*:*:*:*:*:*",
    "description": "runc before 1.0.0-rc95 allows a Container Filesystem Breakout via Directory Traversal. To exploit the vulnerability, an attacker must be able to create multiple containers with a fairly specific mount configuration. The problem occurs via a symlink-exchange attack that relies on a race condition.",
    "publishedDate": "2021-05-27T13:15Z",
    "cvssScore": 8.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.0.0",
      "startExcluding": "1.0.0"
    }
  },
  {
    "cveId": "CVE-2021-30465",
    "technology": "runc",
    "version": "1.0.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:runc:1.0.0:rc6:*:*:*:*:*:*",
    "description": "runc before 1.0.0-rc95 allows a Container Filesystem Breakout via Directory Traversal. To exploit the vulnerability, an attacker must be able to create multiple containers with a fairly specific mount configuration. The problem occurs via a symlink-exchange attack that relies on a race condition.",
    "publishedDate": "2021-05-27T13:15Z",
    "cvssScore": 8.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.0.0",
      "startExcluding": "1.0.0"
    }
  },
  {
    "cveId": "CVE-2021-30465",
    "technology": "runc",
    "version": "1.0.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:runc:1.0.0:rc5:*:*:*:*:*:*",
    "description": "runc before 1.0.0-rc95 allows a Container Filesystem Breakout via Directory Traversal. To exploit the vulnerability, an attacker must be able to create multiple containers with a fairly specific mount configuration. The problem occurs via a symlink-exchange attack that relies on a race condition.",
    "publishedDate": "2021-05-27T13:15Z",
    "cvssScore": 8.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.0.0",
      "startExcluding": "1.0.0"
    }
  },
  {
    "cveId": "CVE-2021-30465",
    "technology": "runc",
    "version": "1.0.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:runc:1.0.0:rc4:*:*:*:*:*:*",
    "description": "runc before 1.0.0-rc95 allows a Container Filesystem Breakout via Directory Traversal. To exploit the vulnerability, an attacker must be able to create multiple containers with a fairly specific mount configuration. The problem occurs via a symlink-exchange attack that relies on a race condition.",
    "publishedDate": "2021-05-27T13:15Z",
    "cvssScore": 8.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.0.0",
      "startExcluding": "1.0.0"
    }
  },
  {
    "cveId": "CVE-2021-30465",
    "technology": "runc",
    "version": "1.0.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:runc:1.0.0:rc3:*:*:*:*:*:*",
    "description": "runc before 1.0.0-rc95 allows a Container Filesystem Breakout via Directory Traversal. To exploit the vulnerability, an attacker must be able to create multiple containers with a fairly specific mount configuration. The problem occurs via a symlink-exchange attack that relies on a race condition.",
    "publishedDate": "2021-05-27T13:15Z",
    "cvssScore": 8.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.0.0",
      "startExcluding": "1.0.0"
    }
  },
  {
    "cveId": "CVE-2021-30465",
    "technology": "runc",
    "version": "1.0.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:runc:1.0.0:rc2:*:*:*:*:*:*",
    "description": "runc before 1.0.0-rc95 allows a Container Filesystem Breakout via Directory Traversal. To exploit the vulnerability, an attacker must be able to create multiple containers with a fairly specific mount configuration. The problem occurs via a symlink-exchange attack that relies on a race condition.",
    "publishedDate": "2021-05-27T13:15Z",
    "cvssScore": 8.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.0.0",
      "startExcluding": "1.0.0"
    }
  },
  {
    "cveId": "CVE-2021-30465",
    "technology": "runc",
    "version": "1.0.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:runc:1.0.0:rc1:*:*:*:*:*:*",
    "description": "runc before 1.0.0-rc95 allows a Container Filesystem Breakout via Directory Traversal. To exploit the vulnerability, an attacker must be able to create multiple containers with a fairly specific mount configuration. The problem occurs via a symlink-exchange attack that relies on a race condition.",
    "publishedDate": "2021-05-27T13:15Z",
    "cvssScore": 8.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.0.0",
      "startExcluding": "1.0.0"
    }
  },
  {
    "cveId": "CVE-2021-30465",
    "technology": "runc",
    "version": "1.0.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:runc:1.0.0:rc8:*:*:*:*:*:*",
    "description": "runc before 1.0.0-rc95 allows a Container Filesystem Breakout via Directory Traversal. To exploit the vulnerability, an attacker must be able to create multiple containers with a fairly specific mount configuration. The problem occurs via a symlink-exchange attack that relies on a race condition.",
    "publishedDate": "2021-05-27T13:15Z",
    "cvssScore": 8.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.0.0",
      "startExcluding": "1.0.0"
    }
  },
  {
    "cveId": "CVE-2021-30465",
    "technology": "runc",
    "version": "1.0.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:runc:1.0.0:rc9:*:*:*:*:*:*",
    "description": "runc before 1.0.0-rc95 allows a Container Filesystem Breakout via Directory Traversal. To exploit the vulnerability, an attacker must be able to create multiple containers with a fairly specific mount configuration. The problem occurs via a symlink-exchange attack that relies on a race condition.",
    "publishedDate": "2021-05-27T13:15Z",
    "cvssScore": 8.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.0.0",
      "startExcluding": "1.0.0"
    }
  },
  {
    "cveId": "CVE-2021-30465",
    "technology": "runc",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:runc:*:*:*:*:*:*:*:*",
    "description": "runc before 1.0.0-rc95 allows a Container Filesystem Breakout via Directory Traversal. To exploit the vulnerability, an attacker must be able to create multiple containers with a fairly specific mount configuration. The problem occurs via a symlink-exchange attack that relies on a race condition.",
    "publishedDate": "2021-05-27T13:15Z",
    "cvssScore": 8.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-30465",
    "technology": "runc",
    "version": "1.0.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:runc:1.0.0:rc94:*:*:*:*:*:*",
    "description": "runc before 1.0.0-rc95 allows a Container Filesystem Breakout via Directory Traversal. To exploit the vulnerability, an attacker must be able to create multiple containers with a fairly specific mount configuration. The problem occurs via a symlink-exchange attack that relies on a race condition.",
    "publishedDate": "2021-05-27T13:15Z",
    "cvssScore": 8.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.0.0",
      "startExcluding": "1.0.0"
    }
  },
  {
    "cveId": "CVE-2021-30465",
    "technology": "runc",
    "version": "1.0.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:runc:1.0.0:rc10:*:*:*:*:*:*",
    "description": "runc before 1.0.0-rc95 allows a Container Filesystem Breakout via Directory Traversal. To exploit the vulnerability, an attacker must be able to create multiple containers with a fairly specific mount configuration. The problem occurs via a symlink-exchange attack that relies on a race condition.",
    "publishedDate": "2021-05-27T13:15Z",
    "cvssScore": 8.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.0.0",
      "startExcluding": "1.0.0"
    }
  },
  {
    "cveId": "CVE-2021-30465",
    "technology": "runc",
    "version": "1.0.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:runc:1.0.0:rc90:*:*:*:*:*:*",
    "description": "runc before 1.0.0-rc95 allows a Container Filesystem Breakout via Directory Traversal. To exploit the vulnerability, an attacker must be able to create multiple containers with a fairly specific mount configuration. The problem occurs via a symlink-exchange attack that relies on a race condition.",
    "publishedDate": "2021-05-27T13:15Z",
    "cvssScore": 8.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.0.0",
      "startExcluding": "1.0.0"
    }
  },
  {
    "cveId": "CVE-2021-30465",
    "technology": "runc",
    "version": "1.0.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:runc:1.0.0:rc91:*:*:*:*:*:*",
    "description": "runc before 1.0.0-rc95 allows a Container Filesystem Breakout via Directory Traversal. To exploit the vulnerability, an attacker must be able to create multiple containers with a fairly specific mount configuration. The problem occurs via a symlink-exchange attack that relies on a race condition.",
    "publishedDate": "2021-05-27T13:15Z",
    "cvssScore": 8.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.0.0",
      "startExcluding": "1.0.0"
    }
  },
  {
    "cveId": "CVE-2021-30465",
    "technology": "runc",
    "version": "1.0.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:runc:1.0.0:rc92:*:*:*:*:*:*",
    "description": "runc before 1.0.0-rc95 allows a Container Filesystem Breakout via Directory Traversal. To exploit the vulnerability, an attacker must be able to create multiple containers with a fairly specific mount configuration. The problem occurs via a symlink-exchange attack that relies on a race condition.",
    "publishedDate": "2021-05-27T13:15Z",
    "cvssScore": 8.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.0.0",
      "startExcluding": "1.0.0"
    }
  },
  {
    "cveId": "CVE-2021-30465",
    "technology": "runc",
    "version": "1.0.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:runc:1.0.0:rc93:*:*:*:*:*:*",
    "description": "runc before 1.0.0-rc95 allows a Container Filesystem Breakout via Directory Traversal. To exploit the vulnerability, an attacker must be able to create multiple containers with a fairly specific mount configuration. The problem occurs via a symlink-exchange attack that relies on a race condition.",
    "publishedDate": "2021-05-27T13:15Z",
    "cvssScore": 8.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.0.0",
      "startExcluding": "1.0.0"
    }
  },
  {
    "cveId": "CVE-2021-43784",
    "technology": "runc",
    "version": "1.0.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "runc is a CLI tool for spawning and running containers on Linux according to the OCI specification. In runc, netlink is used internally as a serialization system for specifying the relevant container configuration to the `C` portion of the code (responsible for the based namespace setup of containers). In all versions of runc prior to 1.0.3, the encoder did not handle the possibility of an integer overflow in the 16-bit length field for the byte array attribute type, meaning that a large enough malicious byte array attribute could result in the length overflowing and the attribute contents being parsed as netlink messages for container configuration. This vulnerability requires the attacker to have some control over the configuration of the container and would allow the attacker to bypass the namespace restrictions of the container by simply adding their own netlink payload which disables all namespaces. The main users impacted are those who allow untrusted images with untrusted configurations to run on their machines (such as with shared cloud infrastructure). runc version 1.0.3 contains a fix for this bug. As a workaround, one may try disallowing untrusted namespace paths from your container. It should be noted that untrusted namespace paths would allow the attacker to disable namespace protections entirely even in the absence of this bug.",
    "publishedDate": "2021-12-06T18:15Z",
    "cvssScore": 5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-43784",
    "technology": "runc",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:runc:*:*:*:*:*:*:*:*",
    "description": "runc is a CLI tool for spawning and running containers on Linux according to the OCI specification. In runc, netlink is used internally as a serialization system for specifying the relevant container configuration to the `C` portion of the code (responsible for the based namespace setup of containers). In all versions of runc prior to 1.0.3, the encoder did not handle the possibility of an integer overflow in the 16-bit length field for the byte array attribute type, meaning that a large enough malicious byte array attribute could result in the length overflowing and the attribute contents being parsed as netlink messages for container configuration. This vulnerability requires the attacker to have some control over the configuration of the container and would allow the attacker to bypass the namespace restrictions of the container by simply adding their own netlink payload which disables all namespaces. The main users impacted are those who allow untrusted images with untrusted configurations to run on their machines (such as with shared cloud infrastructure). runc version 1.0.3 contains a fix for this bug. As a workaround, one may try disallowing untrusted namespace paths from your container. It should be noted that untrusted namespace paths would allow the attacker to disable namespace protections entirely even in the absence of this bug.",
    "publishedDate": "2021-12-06T18:15Z",
    "cvssScore": 5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-14298",
    "technology": "runc",
    "version": "1.13.1-108.git4ef4b30.el7",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The version of docker as released for Red Hat Enterprise Linux 7 Extras via RHBA-2020:0053 advisory included an incorrect version of runc missing the fix for CVE-2019-5736, which was previously fixed via RHSA-2019:0304. This issue could allow a malicious or compromised container to compromise the container host and other containers running on the same host. This issue only affects docker version 1.13.1-108.git4ef4b30.el7, shipped in Red Hat Enterprise Linux 7 Extras. Both earlier and later versions are not affected.",
    "publishedDate": "2020-07-13T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  }
]