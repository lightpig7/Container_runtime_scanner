[
  {
    "cveId": "CVE-2025-23028",
    "technology": "kubernetes",
    "version": "1.14.18",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Cilium is a networking, observability, and security solution with an eBPF-based dataplane. A denial of service vulnerability affects versions 1.14.0 through 1.14.7, 1.15.0 through 1.15.11, and 1.16.0 through 1.16.4. In a Kubernetes cluster where Cilium is configured to proxy DNS traffic, an attacker can crash Cilium agents by sending a crafted DNS response to workloads from outside the cluster. For traffic that is allowed but without using DNS-based policy, the dataplane will continue to pass traffic as configured at the time of the DoS. For workloads that have DNS-based policy configured, existing connections may continue to operate, and new connections made without relying on DNS resolution may continue to be established, but new connections which rely on DNS resolution may be disrupted. Any configuration changes that affect the impacted agent may not be applied until the agent is able to restart. This issue is fixed in Cilium v1.14.18, v1.15.12, and v1.16.5. No known workarounds are available.",
    "publishedDate": "2025-01-22T17:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2025-23028",
    "technology": "kubernetes",
    "version": "1.15.12",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Cilium is a networking, observability, and security solution with an eBPF-based dataplane. A denial of service vulnerability affects versions 1.14.0 through 1.14.7, 1.15.0 through 1.15.11, and 1.16.0 through 1.16.4. In a Kubernetes cluster where Cilium is configured to proxy DNS traffic, an attacker can crash Cilium agents by sending a crafted DNS response to workloads from outside the cluster. For traffic that is allowed but without using DNS-based policy, the dataplane will continue to pass traffic as configured at the time of the DoS. For workloads that have DNS-based policy configured, existing connections may continue to operate, and new connections made without relying on DNS resolution may continue to be established, but new connections which rely on DNS resolution may be disrupted. Any configuration changes that affect the impacted agent may not be applied until the agent is able to restart. This issue is fixed in Cilium v1.14.18, v1.15.12, and v1.16.5. No known workarounds are available.",
    "publishedDate": "2025-01-22T17:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2025-23028",
    "technology": "kubernetes",
    "version": "1.16.5",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Cilium is a networking, observability, and security solution with an eBPF-based dataplane. A denial of service vulnerability affects versions 1.14.0 through 1.14.7, 1.15.0 through 1.15.11, and 1.16.0 through 1.16.4. In a Kubernetes cluster where Cilium is configured to proxy DNS traffic, an attacker can crash Cilium agents by sending a crafted DNS response to workloads from outside the cluster. For traffic that is allowed but without using DNS-based policy, the dataplane will continue to pass traffic as configured at the time of the DoS. For workloads that have DNS-based policy configured, existing connections may continue to operate, and new connections made without relying on DNS resolution may continue to be established, but new connections which rely on DNS resolution may be disrupted. Any configuration changes that affect the impacted agent may not be applied until the agent is able to restart. This issue is fixed in Cilium v1.14.18, v1.15.12, and v1.16.5. No known workarounds are available.",
    "publishedDate": "2025-01-22T17:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2025-23047",
    "technology": "kubernetes",
    "version": "1.14.18",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Cilium is a networking, observability, and security solution with an eBPF-based dataplane. An insecure default `Access-Control-Allow-Origin` header value could lead to sensitive data exposure for users of Cilium versions 1.14.0 through 1.14.7, 1.15.0 through 1.15.11, and 1.16.0 through 1.16.4 who deploy Hubble UI using either Cilium CLI or via the Cilium Helm chart. A user with access to a Hubble UI instance affected by this issue could leak configuration details about the Kubernetes cluster which Hubble UI is monitoring, including node names, IP addresses, and other metadata about workloads and the cluster networking configuration. In order for this vulnerability to be exploited, a victim would have to first visit a malicious page. This issue is fixed in Cilium v1.14.18, v1.15.12, and v1.16.5. As a workaround, users who deploy Hubble UI using the Cilium Helm chart directly can remove the CORS headers from the Helm template as shown in the patch from commit a3489f190ba6e87b5336ee685fb6c80b1270d06d.",
    "publishedDate": "2025-01-22T18:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2025-23047",
    "technology": "kubernetes",
    "version": "1.15.12",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Cilium is a networking, observability, and security solution with an eBPF-based dataplane. An insecure default `Access-Control-Allow-Origin` header value could lead to sensitive data exposure for users of Cilium versions 1.14.0 through 1.14.7, 1.15.0 through 1.15.11, and 1.16.0 through 1.16.4 who deploy Hubble UI using either Cilium CLI or via the Cilium Helm chart. A user with access to a Hubble UI instance affected by this issue could leak configuration details about the Kubernetes cluster which Hubble UI is monitoring, including node names, IP addresses, and other metadata about workloads and the cluster networking configuration. In order for this vulnerability to be exploited, a victim would have to first visit a malicious page. This issue is fixed in Cilium v1.14.18, v1.15.12, and v1.16.5. As a workaround, users who deploy Hubble UI using the Cilium Helm chart directly can remove the CORS headers from the Helm template as shown in the patch from commit a3489f190ba6e87b5336ee685fb6c80b1270d06d.",
    "publishedDate": "2025-01-22T18:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2025-23047",
    "technology": "kubernetes",
    "version": "1.16.5",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Cilium is a networking, observability, and security solution with an eBPF-based dataplane. An insecure default `Access-Control-Allow-Origin` header value could lead to sensitive data exposure for users of Cilium versions 1.14.0 through 1.14.7, 1.15.0 through 1.15.11, and 1.16.0 through 1.16.4 who deploy Hubble UI using either Cilium CLI or via the Cilium Helm chart. A user with access to a Hubble UI instance affected by this issue could leak configuration details about the Kubernetes cluster which Hubble UI is monitoring, including node names, IP addresses, and other metadata about workloads and the cluster networking configuration. In order for this vulnerability to be exploited, a victim would have to first visit a malicious page. This issue is fixed in Cilium v1.14.18, v1.15.12, and v1.16.5. As a workaround, users who deploy Hubble UI using the Cilium Helm chart directly can remove the CORS headers from the Helm template as shown in the patch from commit a3489f190ba6e87b5336ee685fb6c80b1270d06d.",
    "publishedDate": "2025-01-22T18:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2025-23216",
    "technology": "kubernetes",
    "version": "2.13.4",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. A vulnerability was discovered in Argo CD that exposed secret values in error messages and the diff view when an invalid Kubernetes Secret resource was synced from a repository. The vulnerability assumes the user has write access to the repository and can exploit it, either intentionally or unintentionally, by committing an invalid Secret to repository and triggering a Sync. Once exploited, any user with read access to Argo CD can view the exposed secret data. The vulnerability is fixed in v2.13.4, v2.12.10, and v2.11.13.",
    "publishedDate": "2025-01-30T16:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2025-23216",
    "technology": "kubernetes",
    "version": "2.12.10",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. A vulnerability was discovered in Argo CD that exposed secret values in error messages and the diff view when an invalid Kubernetes Secret resource was synced from a repository. The vulnerability assumes the user has write access to the repository and can exploit it, either intentionally or unintentionally, by committing an invalid Secret to repository and triggering a Sync. Once exploited, any user with read access to Argo CD can view the exposed secret data. The vulnerability is fixed in v2.13.4, v2.12.10, and v2.11.13.",
    "publishedDate": "2025-01-30T16:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2025-23216",
    "technology": "kubernetes",
    "version": "2.11.13",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. A vulnerability was discovered in Argo CD that exposed secret values in error messages and the diff view when an invalid Kubernetes Secret resource was synced from a repository. The vulnerability assumes the user has write access to the repository and can exploit it, either intentionally or unintentionally, by committing an invalid Secret to repository and triggering a Sync. Once exploited, any user with read access to Argo CD can view the exposed secret data. The vulnerability is fixed in v2.13.4, v2.12.10, and v2.11.13.",
    "publishedDate": "2025-01-30T16:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2025-24030",
    "technology": "kubernetes",
    "version": "1.2.6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Envoy Gateway is an open source project for managing Envoy Proxy as a standalone or Kubernetes-based application gateway. A user with access to the Kubernetes cluster can use a path traversal attack to execute Envoy Admin interface commands on proxies managed by any version of Envoy Gateway prior to 1.2.6. The admin interface can be used to terminate the Envoy process and extract the Envoy configuration (possibly containing confidential data). Version 1.2.6 fixes the issue. As a workaround, the `EnvoyProxy` API can be used to apply a bootstrap config patch that restricts access strictly to the prometheus stats endpoint. Find below an example of such a bootstrap patch.",
    "publishedDate": "2025-01-23T04:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2025-29778",
    "technology": "kubernetes",
    "version": "1.14.0-alpha.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Kyverno is a policy engine designed for cloud native platform engineering teams. Prior to version 1.14.0-alpha.1, Kyverno ignores subjectRegExp and IssuerRegExp while verifying artifact's sign with keyless mode. It allows the attacker to deploy kubernetes resources with the artifacts that were signed by unexpected certificate. Deploying these unauthorized kubernetes resources can lead to full compromise of kubernetes cluster. Version 1.14.0-alpha.1 contains a patch for the issue.",
    "publishedDate": "2025-03-24T17:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2025-29778",
    "technology": "kubernetes",
    "version": "1.14.0-alpha.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Kyverno is a policy engine designed for cloud native platform engineering teams. Prior to version 1.14.0-alpha.1, Kyverno ignores subjectRegExp and IssuerRegExp while verifying artifact's sign with keyless mode. It allows the attacker to deploy kubernetes resources with the artifacts that were signed by unexpected certificate. Deploying these unauthorized kubernetes resources can lead to full compromise of kubernetes cluster. Version 1.14.0-alpha.1 contains a patch for the issue.",
    "publishedDate": "2025-03-24T17:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2025-29781",
    "technology": "kubernetes",
    "version": "0.9.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The Bare Metal Operator (BMO) implements a Kubernetes API for managing bare metal hosts in Metal3. Baremetal Operator enables users to load Secret from arbitrary namespaces upon deployment of the namespace scoped Custom Resource `BMCEventSubscription`. Prior to versions 0.8.1 and 0.9.1, an adversary Kubernetes account with only namespace level roles (e.g. a tenant controlling a namespace) may create a `BMCEventSubscription` in his authorized namespace and then load Secrets from his unauthorized namespaces to his authorized namespace via the Baremetal Operator, causing Secret Leakage. The patch makes BMO refuse to read Secrets from other namespace than where the corresponding BMH resource is. The patch does not change the `BMCEventSubscription` API in BMO, but stricter validation will fail the request at admission time. It will also prevent the controller reading such Secrets, in case the BMCES CR has already been deployed. The issue exists for all versions of BMO, and is patched in BMO releases v0.9.1 and v0.8.1. Prior upgrading to patched BMO version, duplicate any existing Secret pointed to by `BMCEventSubscription`'s `httpHeadersRef` to the same namespace where the corresponding BMH exists. After upgrade, remove the old Secrets. As a workaround, the operator can configure BMO RBAC to be namespace scoped, instead of cluster scoped, to prevent BMO from accessing Secrets from other namespaces, and/or use `WATCH_NAMESPACE` configuration option to limit BMO to single namespace.",
    "publishedDate": "2025-03-17T22:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2025-29781",
    "technology": "kubernetes",
    "version": "0.8.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The Bare Metal Operator (BMO) implements a Kubernetes API for managing bare metal hosts in Metal3. Baremetal Operator enables users to load Secret from arbitrary namespaces upon deployment of the namespace scoped Custom Resource `BMCEventSubscription`. Prior to versions 0.8.1 and 0.9.1, an adversary Kubernetes account with only namespace level roles (e.g. a tenant controlling a namespace) may create a `BMCEventSubscription` in his authorized namespace and then load Secrets from his unauthorized namespaces to his authorized namespace via the Baremetal Operator, causing Secret Leakage. The patch makes BMO refuse to read Secrets from other namespace than where the corresponding BMH resource is. The patch does not change the `BMCEventSubscription` API in BMO, but stricter validation will fail the request at admission time. It will also prevent the controller reading such Secrets, in case the BMCES CR has already been deployed. The issue exists for all versions of BMO, and is patched in BMO releases v0.9.1 and v0.8.1. Prior upgrading to patched BMO version, duplicate any existing Secret pointed to by `BMCEventSubscription`'s `httpHeadersRef` to the same namespace where the corresponding BMH exists. After upgrade, remove the old Secrets. As a workaround, the operator can configure BMO RBAC to be namespace scoped, instead of cluster scoped, to prevent BMO from accessing Secrets from other namespaces, and/or use `WATCH_NAMESPACE` configuration option to limit BMO to single namespace.",
    "publishedDate": "2025-03-17T22:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-12226",
    "technology": "kubernetes",
    "version": "2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In affected versions of the Octopus Kubernetes worker or agent, sensitive variables could be written to the Kubernetes script pod log in clear-text. This was identified in Version 2 however it was determined that this could also be achieved in Version 1 and the fix was applied to both versions accordingly.",
    "publishedDate": "2025-01-16T07:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-12226",
    "technology": "kubernetes",
    "version": "1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In affected versions of the Octopus Kubernetes worker or agent, sensitive variables could be written to the Kubernetes script pod log in clear-text. This was identified in Version 2 however it was determined that this could also be achieved in Version 1 and the fix was applied to both versions accordingly.",
    "publishedDate": "2025-01-16T07:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-21376",
    "technology": "kubernetes",
    "version": "-",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:microsoft:azure_kubernetes_service:-:*:*:*:*:*:*:*",
    "description": "Microsoft Azure Kubernetes Service Confidential Container Remote Code Execution Vulnerability",
    "publishedDate": "2024-02-13T18:15Z",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2024-21403",
    "technology": "kubernetes",
    "version": "-",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:microsoft:azure_kubernetes_service:-:*:*:*:*:*:*:*",
    "description": "Microsoft Azure Kubernetes Service Confidential Container Elevation of Privilege Vulnerability",
    "publishedDate": "2024-02-13T18:15Z",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2024-21662",
    "technology": "kubernetes",
    "version": "2.8.13",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. Prior to versions 2.8.13, 2.9.9, and 2.10.4, an attacker can effectively bypass the rate limit and brute force protections by exploiting the application's weak cache-based mechanism. This loophole in security can be combined with other vulnerabilities to attack the default admin account. This flaw undermines a patch for CVE-2020-8827 intended to protect against brute-force attacks. The application's brute force protection relies on a cache mechanism that tracks login attempts for each user. This cache is limited to a `defaultMaxCacheSize` of 1000 entries. An attacker can overflow this cache by bombarding it with login attempts for different users, thereby pushing out the admin account's failed attempts and effectively resetting the rate limit for that account. This is a severe vulnerability that enables attackers to perform brute force attacks at an accelerated rate, especially targeting the default admin account. Users should upgrade to version 2.8.13, 2.9.9, or 2.10.4 to receive a patch.",
    "publishedDate": "2024-03-18T19:15Z",
    "cvssScore": 9.1,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-23314",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:f5:big-ip_next_service_proxy_for_kubernetes:*:*:*:*:*:*:*:*",
    "description": "When HTTP/2 is configured on BIG-IP or BIG-IP Next SPK systems, undisclosed responses can cause the Traffic Management Microkernel (TMM) to terminate.  Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated",
    "publishedDate": "2024-02-14T17:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2024-25620",
    "technology": "kubernetes",
    "version": "3.14.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Helm is a tool for managing Charts. Charts are packages of pre-configured Kubernetes resources. When either the Helm client or SDK is used to save a chart whose name within the `Chart.yaml` file includes a relative path change, the chart would be saved outside its expected directory based on the changes in the relative path. The validation and linting did not detect the path changes in the name. This issue has been resolved in Helm v3.14.1. Users unable to upgrade should check all charts used by Helm for path changes in their name as found in the `Chart.yaml` file. This includes dependencies.",
    "publishedDate": "2024-02-15T00:15Z",
    "cvssScore": 6.4,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-26147",
    "technology": "kubernetes",
    "version": "3.14.2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Helm is a package manager for Charts for Kubernetes. Versions prior to 3.14.2 contain an uninitialized variable vulnerability when Helm parses index and plugin yaml files missing expected content. When either an `index.yaml` file or a plugins `plugin.yaml` file were missing all metadata a panic would occur in Helm. In the Helm SDK, this is found when using the `LoadIndexFile` or `DownloadIndexFile` functions in the `repo` package or the `LoadDir` function in the `plugin` package. For the Helm client this impacts functions around adding a repository and all Helm functions if a malicious plugin is added as Helm inspects all known plugins on each invocation. This issue has been resolved in Helm v3.14.2. If a malicious plugin has been added which is causing all Helm client commands to panic, the malicious plugin can be manually removed from the filesystem. If using Helm SDK versions prior to 3.14.2, calls to affected functions can use `recover` to catch the panic.",
    "publishedDate": "2024-02-21T23:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-28175",
    "technology": "kubernetes",
    "version": "1.0.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. Due to the improper URL protocols filtering of links specified in the `link.argocd.argoproj.io` annotations in the application summary component, an attacker can achieve cross-site scripting with elevated permissions. All unpatched versions of Argo CD starting with v1.0.0 are vulnerable to a cross-site scripting (XSS) bug allowing a malicious user to inject a javascript: link in the UI. When clicked by a victim user, the script will execute with the victim's permissions (up to and including admin). This vulnerability allows an attacker to perform arbitrary actions on behalf of the victim via the API, such as creating, modifying, and deleting Kubernetes resources. A patch for this vulnerability has been released in Argo CD versions v2.10.3 v2.9.8, and v2.8.12. There are no completely-safe workarounds besides upgrading. The safest alternative, if upgrading is not possible, would be to create a Kubernetes admission controller to reject any resources with an annotation starting with link.argocd.argoproj.io or reject the resource if the value use an improper URL protocol. This validation will need to be applied in all clusters managed by ArgoCD.\n\n",
    "publishedDate": "2024-03-13T21:16Z",
    "cvssScore": 5.4,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-28175",
    "technology": "kubernetes",
    "version": "2.10.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. Due to the improper URL protocols filtering of links specified in the `link.argocd.argoproj.io` annotations in the application summary component, an attacker can achieve cross-site scripting with elevated permissions. All unpatched versions of Argo CD starting with v1.0.0 are vulnerable to a cross-site scripting (XSS) bug allowing a malicious user to inject a javascript: link in the UI. When clicked by a victim user, the script will execute with the victim's permissions (up to and including admin). This vulnerability allows an attacker to perform arbitrary actions on behalf of the victim via the API, such as creating, modifying, and deleting Kubernetes resources. A patch for this vulnerability has been released in Argo CD versions v2.10.3 v2.9.8, and v2.8.12. There are no completely-safe workarounds besides upgrading. The safest alternative, if upgrading is not possible, would be to create a Kubernetes admission controller to reject any resources with an annotation starting with link.argocd.argoproj.io or reject the resource if the value use an improper URL protocol. This validation will need to be applied in all clusters managed by ArgoCD.\n\n",
    "publishedDate": "2024-03-13T21:16Z",
    "cvssScore": 5.4,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-28175",
    "technology": "kubernetes",
    "version": "2.9.8",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. Due to the improper URL protocols filtering of links specified in the `link.argocd.argoproj.io` annotations in the application summary component, an attacker can achieve cross-site scripting with elevated permissions. All unpatched versions of Argo CD starting with v1.0.0 are vulnerable to a cross-site scripting (XSS) bug allowing a malicious user to inject a javascript: link in the UI. When clicked by a victim user, the script will execute with the victim's permissions (up to and including admin). This vulnerability allows an attacker to perform arbitrary actions on behalf of the victim via the API, such as creating, modifying, and deleting Kubernetes resources. A patch for this vulnerability has been released in Argo CD versions v2.10.3 v2.9.8, and v2.8.12. There are no completely-safe workarounds besides upgrading. The safest alternative, if upgrading is not possible, would be to create a Kubernetes admission controller to reject any resources with an annotation starting with link.argocd.argoproj.io or reject the resource if the value use an improper URL protocol. This validation will need to be applied in all clusters managed by ArgoCD.\n\n",
    "publishedDate": "2024-03-13T21:16Z",
    "cvssScore": 5.4,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-28175",
    "technology": "kubernetes",
    "version": "2.8.12",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. Due to the improper URL protocols filtering of links specified in the `link.argocd.argoproj.io` annotations in the application summary component, an attacker can achieve cross-site scripting with elevated permissions. All unpatched versions of Argo CD starting with v1.0.0 are vulnerable to a cross-site scripting (XSS) bug allowing a malicious user to inject a javascript: link in the UI. When clicked by a victim user, the script will execute with the victim's permissions (up to and including admin). This vulnerability allows an attacker to perform arbitrary actions on behalf of the victim via the API, such as creating, modifying, and deleting Kubernetes resources. A patch for this vulnerability has been released in Argo CD versions v2.10.3 v2.9.8, and v2.8.12. There are no completely-safe workarounds besides upgrading. The safest alternative, if upgrading is not possible, would be to create a Kubernetes admission controller to reject any resources with an annotation starting with link.argocd.argoproj.io or reject the resource if the value use an improper URL protocol. This validation will need to be applied in all clusters managed by ArgoCD.\n\n",
    "publishedDate": "2024-03-13T21:16Z",
    "cvssScore": 5.4,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-29031",
    "technology": "kubernetes",
    "version": "0.7.17",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Meshery is an open source, cloud native manager that enables the design and management of Kubernetes-based infrastructure and applications. A SQL injection vulnerability in Meshery prior to version 0.7.17 allows a remote attacker to obtain sensitive information via the `order` parameter of `GetMeshSyncResources`. Version 0.7.17 contains a patch for this issue.",
    "publishedDate": "2024-03-21T23:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-29031",
    "technology": "kubernetes",
    "version": "0.7.17",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Meshery is an open source, cloud native manager that enables the design and management of Kubernetes-based infrastructure and applications. A SQL injection vulnerability in Meshery prior to version 0.7.17 allows a remote attacker to obtain sensitive information via the `order` parameter of `GetMeshSyncResources`. Version 0.7.17 contains a patch for this issue.",
    "publishedDate": "2024-03-21T23:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-29037",
    "technology": "kubernetes",
    "version": "0.1.143",
    "vulnerable": false,
    "cpeUri": "",
    "description": "datahub-helm provides the Kubernetes Helm charts for deploying Datahub and its dependencies on a Kubernetes cluster. Starting in version 0.1.143 and prior to version 0.2.182, due to configuration issues in the helm chart, if there was a successful initial deployment during a limited window of time, personal access tokens were possibly created with a default secret key. Since the secret key is a static, publicly available value, someone could inspect the algorithm used to generate personal access tokens and generate their own for an instance. Deploying with Metadata Service Authentication enabled would have been difficult during window of releases. If someone circumvented the helm settings and manually set Metadata Service Authentication to be enabled using environment variables directly, this would skip over the autogeneration logic for the Kubernetes Secrets and DataHub GMS would default to the signing key specified statically in the application.yml. Most deployments probably did not attempt to circumvent the helm settings to enable Metadata Service Authentication during this time, so impact is most likely limited. Any deployments with Metadata Service Authentication enabled should ensure that their secret values are properly randomized. Version 0.2.182 contains a patch for this issue. As a workaround, one may reset the token signing key to be a random value, which will invalidate active personal access tokens.",
    "publishedDate": "2024-03-20T21:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-29037",
    "technology": "kubernetes",
    "version": "0.2.182",
    "vulnerable": false,
    "cpeUri": "",
    "description": "datahub-helm provides the Kubernetes Helm charts for deploying Datahub and its dependencies on a Kubernetes cluster. Starting in version 0.1.143 and prior to version 0.2.182, due to configuration issues in the helm chart, if there was a successful initial deployment during a limited window of time, personal access tokens were possibly created with a default secret key. Since the secret key is a static, publicly available value, someone could inspect the algorithm used to generate personal access tokens and generate their own for an instance. Deploying with Metadata Service Authentication enabled would have been difficult during window of releases. If someone circumvented the helm settings and manually set Metadata Service Authentication to be enabled using environment variables directly, this would skip over the autogeneration logic for the Kubernetes Secrets and DataHub GMS would default to the signing key specified statically in the application.yml. Most deployments probably did not attempt to circumvent the helm settings to enable Metadata Service Authentication during this time, so impact is most likely limited. Any deployments with Metadata Service Authentication enabled should ensure that their secret values are properly randomized. Version 0.2.182 contains a patch for this issue. As a workaround, one may reset the token signing key to be a random value, which will invalidate active personal access tokens.",
    "publishedDate": "2024-03-20T21:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-29037",
    "technology": "kubernetes",
    "version": "0.2.182",
    "vulnerable": false,
    "cpeUri": "",
    "description": "datahub-helm provides the Kubernetes Helm charts for deploying Datahub and its dependencies on a Kubernetes cluster. Starting in version 0.1.143 and prior to version 0.2.182, due to configuration issues in the helm chart, if there was a successful initial deployment during a limited window of time, personal access tokens were possibly created with a default secret key. Since the secret key is a static, publicly available value, someone could inspect the algorithm used to generate personal access tokens and generate their own for an instance. Deploying with Metadata Service Authentication enabled would have been difficult during window of releases. If someone circumvented the helm settings and manually set Metadata Service Authentication to be enabled using environment variables directly, this would skip over the autogeneration logic for the Kubernetes Secrets and DataHub GMS would default to the signing key specified statically in the application.yml. Most deployments probably did not attempt to circumvent the helm settings to enable Metadata Service Authentication during this time, so impact is most likely limited. Any deployments with Metadata Service Authentication enabled should ensure that their secret values are properly randomized. Version 0.2.182 contains a patch for this issue. As a workaround, one may reset the token signing key to be a random value, which will invalidate active personal access tokens.",
    "publishedDate": "2024-03-20T21:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-29893",
    "technology": "kubernetes",
    "version": "2.4",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of ArgoCD starting from v2.4 have a bug where the ArgoCD repo-server component is vulnerable to a Denial-of-Service attack vector. Specifically,  it's possible to crash the repo server component through an out of memory error by pointing it to a malicious Helm registry. The loadRepoIndex() function in the ArgoCD's helm package, does not limit the size nor time while fetching the data. It fetches it and creates a byte slice from the retrieved data in one go. If the registry is implemented to push data continuously, the repo server will keep allocating memory until it runs out of it. A patch for this vulnerability has been released in v2.10.3, v2.9.8, and v2.8.12.",
    "publishedDate": "2024-03-29T15:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-29893",
    "technology": "kubernetes",
    "version": "2.10.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of ArgoCD starting from v2.4 have a bug where the ArgoCD repo-server component is vulnerable to a Denial-of-Service attack vector. Specifically,  it's possible to crash the repo server component through an out of memory error by pointing it to a malicious Helm registry. The loadRepoIndex() function in the ArgoCD's helm package, does not limit the size nor time while fetching the data. It fetches it and creates a byte slice from the retrieved data in one go. If the registry is implemented to push data continuously, the repo server will keep allocating memory until it runs out of it. A patch for this vulnerability has been released in v2.10.3, v2.9.8, and v2.8.12.",
    "publishedDate": "2024-03-29T15:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-29893",
    "technology": "kubernetes",
    "version": "2.9.8",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of ArgoCD starting from v2.4 have a bug where the ArgoCD repo-server component is vulnerable to a Denial-of-Service attack vector. Specifically,  it's possible to crash the repo server component through an out of memory error by pointing it to a malicious Helm registry. The loadRepoIndex() function in the ArgoCD's helm package, does not limit the size nor time while fetching the data. It fetches it and creates a byte slice from the retrieved data in one go. If the registry is implemented to push data continuously, the repo server will keep allocating memory until it runs out of it. A patch for this vulnerability has been released in v2.10.3, v2.9.8, and v2.8.12.",
    "publishedDate": "2024-03-29T15:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-29893",
    "technology": "kubernetes",
    "version": "2.8.12",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of ArgoCD starting from v2.4 have a bug where the ArgoCD repo-server component is vulnerable to a Denial-of-Service attack vector. Specifically,  it's possible to crash the repo server component through an out of memory error by pointing it to a malicious Helm registry. The loadRepoIndex() function in the ArgoCD's helm package, does not limit the size nor time while fetching the data. It fetches it and creates a byte slice from the retrieved data in one go. If the registry is implemented to push data continuously, the repo server will keep allocating memory until it runs out of it. A patch for this vulnerability has been released in v2.10.3, v2.9.8, and v2.8.12.",
    "publishedDate": "2024-03-29T15:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-29990",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:microsoft:azure_kubernetes_service_confidential_containers:*:*:*:*:*:*:*:*",
    "description": "Microsoft Azure Kubernetes Service Confidential Container Elevation of Privilege Vulnerability",
    "publishedDate": "2024-04-09T17:16Z",
    "cvssScore": 9,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2024-31216",
    "technology": "kubernetes",
    "version": "1.2.5",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The source-controller is a Kubernetes operator, specialised in artifacts acquisition from external sources such as Git, OCI, Helm repositories and S3-compatible buckets. The source-controller implements the source.toolkit.fluxcd.io API and is a core component of the GitOps toolkit. Prior to version 1.2.5, when source-controller was configured to use an Azure SAS token when connecting to Azure Blob Storage, the token was logged along with the Azure URL when the controller encountered a connection error. An attacker with access to the source-controller logs could use the token to gain access to the Azure Blob Storage until the token expires. This vulnerability was fixed in source-controller v1.2.5. There is no workaround for this vulnerability except for using a different auth mechanism such as Azure Workload Identity.",
    "publishedDate": "2024-05-15T16:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-31216",
    "technology": "kubernetes",
    "version": "1.2.5",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The source-controller is a Kubernetes operator, specialised in artifacts acquisition from external sources such as Git, OCI, Helm repositories and S3-compatible buckets. The source-controller implements the source.toolkit.fluxcd.io API and is a core component of the GitOps toolkit. Prior to version 1.2.5, when source-controller was configured to use an Azure SAS token when connecting to Azure Blob Storage, the token was logged along with the Azure URL when the controller encountered a connection error. An attacker with access to the source-controller logs could use the token to gain access to the Azure Blob Storage until the token expires. This vulnerability was fixed in source-controller v1.2.5. There is no workaround for this vulnerability except for using a different auth mechanism such as Azure Workload Identity.",
    "publishedDate": "2024-05-15T16:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-31391",
    "technology": "kubernetes",
    "version": "0.8.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Insertion of Sensitive Information into Log File vulnerability in the Apache Solr Operator.\n\nThis issue affects all versions of the Apache Solr Operator from 0.3.0 through 0.8.0.\n\nWhen asked to bootstrap Solr security, the operator will enable basic authentication and create several accounts for accessing Solr: including the \"solr\" and \"admin\" accounts for use by end-users, and a \"k8s-oper\" account which the operator uses for its own requests to Solr.\nOne common source of these operator requests is healthchecks: liveness, readiness, and startup probes are all used to determine Solr's health and ability to receive traffic.\nBy default, the operator configures the Solr APIs used for these probes to be exempt from authentication, but users may specifically request that authentication be required on probe endpoints as well.\nWhenever one of these probes would fail, if authentication was in use, the Solr Operator would create a Kubernetes \"event\" containing the username and password of the \"k8s-oper\" account.\n\nWithin the affected version range, this vulnerability affects any solrcloud resource which (1) bootstrapped security through use of the `.solrOptions.security.authenticationType=basic` option, and (2) required authentication be used on probes by setting `.solrOptions.security.probesRequireAuth=true`.\n\nUsers are recommended to upgrade to Solr Operator version 0.8.1, which fixes this issue by ensuring that probes no longer print the credentials used for Solr requests.  Users may also mitigate the vulnerability by disabling authentication on their healthcheck probes using the setting `.solrOptions.security.probesRequireAuth=false`.",
    "publishedDate": "2024-04-12T15:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-33522",
    "technology": "kubernetes",
    "version": "3.27.2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In vulnerable versions of Calico (v3.27.2 and below), Calico Enterprise (v3.19.0-1, v3.18.1, v3.17.3 and below), and Calico Cloud (v19.2.0 and below), an attacker who has local access to the Kubernetes node, can escalate their privileges by exploiting a vulnerability in the Calico CNI install binary. The issue arises from an incorrect SUID (Set User ID) bit configuration in the binary, combined with the ability to control the input binary, allowing an attacker to execute an arbitrary binary with elevated privileges.\n",
    "publishedDate": "2024-04-29T23:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-33522",
    "technology": "kubernetes",
    "version": "3.19.0-1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In vulnerable versions of Calico (v3.27.2 and below), Calico Enterprise (v3.19.0-1, v3.18.1, v3.17.3 and below), and Calico Cloud (v19.2.0 and below), an attacker who has local access to the Kubernetes node, can escalate their privileges by exploiting a vulnerability in the Calico CNI install binary. The issue arises from an incorrect SUID (Set User ID) bit configuration in the binary, combined with the ability to control the input binary, allowing an attacker to execute an arbitrary binary with elevated privileges.\n",
    "publishedDate": "2024-04-29T23:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-33522",
    "technology": "kubernetes",
    "version": "3.18.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In vulnerable versions of Calico (v3.27.2 and below), Calico Enterprise (v3.19.0-1, v3.18.1, v3.17.3 and below), and Calico Cloud (v19.2.0 and below), an attacker who has local access to the Kubernetes node, can escalate their privileges by exploiting a vulnerability in the Calico CNI install binary. The issue arises from an incorrect SUID (Set User ID) bit configuration in the binary, combined with the ability to control the input binary, allowing an attacker to execute an arbitrary binary with elevated privileges.\n",
    "publishedDate": "2024-04-29T23:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-33522",
    "technology": "kubernetes",
    "version": "3.17.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In vulnerable versions of Calico (v3.27.2 and below), Calico Enterprise (v3.19.0-1, v3.18.1, v3.17.3 and below), and Calico Cloud (v19.2.0 and below), an attacker who has local access to the Kubernetes node, can escalate their privileges by exploiting a vulnerability in the Calico CNI install binary. The issue arises from an incorrect SUID (Set User ID) bit configuration in the binary, combined with the ability to control the input binary, allowing an attacker to execute an arbitrary binary with elevated privileges.\n",
    "publishedDate": "2024-04-29T23:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-33522",
    "technology": "kubernetes",
    "version": "19.2.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In vulnerable versions of Calico (v3.27.2 and below), Calico Enterprise (v3.19.0-1, v3.18.1, v3.17.3 and below), and Calico Cloud (v19.2.0 and below), an attacker who has local access to the Kubernetes node, can escalate their privileges by exploiting a vulnerability in the Calico CNI install binary. The issue arises from an incorrect SUID (Set User ID) bit configuration in the binary, combined with the ability to control the input binary, allowing an attacker to execute an arbitrary binary with elevated privileges.\n",
    "publishedDate": "2024-04-29T23:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-35181",
    "technology": "kubernetes",
    "version": "0.7.22",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Meshery is an open source, cloud native manager that enables the design and management of Kubernetes-based infrastructure and applications. A SQL injection vulnerability in Meshery prior to version 0.7.22 may lead to arbitrary file write by using a SQL injection stacked queries payload, and the ATTACH DATABASE command. Additionally, attackers may be able to access and modify any data stored in the database, like performance profiles (which may contain session cookies), Meshery application data, or any Kubernetes configuration added to the system. The Meshery project exposes the function `GetMeshSyncResourcesKinds` at the API URL `/api/system/meshsync/resources/kinds`. The order query parameter is directly used to build a SQL query in `meshync_handler.go`. Version 0.7.22 fixes this issue.",
    "publishedDate": "2024-05-27T19:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-35181",
    "technology": "kubernetes",
    "version": "0.7.22",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Meshery is an open source, cloud native manager that enables the design and management of Kubernetes-based infrastructure and applications. A SQL injection vulnerability in Meshery prior to version 0.7.22 may lead to arbitrary file write by using a SQL injection stacked queries payload, and the ATTACH DATABASE command. Additionally, attackers may be able to access and modify any data stored in the database, like performance profiles (which may contain session cookies), Meshery application data, or any Kubernetes configuration added to the system. The Meshery project exposes the function `GetMeshSyncResourcesKinds` at the API URL `/api/system/meshsync/resources/kinds`. The order query parameter is directly used to build a SQL query in `meshync_handler.go`. Version 0.7.22 fixes this issue.",
    "publishedDate": "2024-05-27T19:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-35182",
    "technology": "kubernetes",
    "version": "0.7.22",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Meshery is an open source, cloud native manager that enables the design and management of Kubernetes-based infrastructure and applications. A SQL injection vulnerability in Meshery prior to version 0.7.22 may lead to arbitrary file write by using a SQL injection stacked queries payload, and the ATTACH DATABASE command. Additionally, attackers may be able to access and modify any data stored in the database, like performance profiles (which may contain session cookies), Meshery application data, or any Kubernetes configuration added to the system. The Meshery project exposes the function `GetAllEvents` at the API URL `/api/v2/events`. The sort query parameter read in `events_streamer.go` is directly used to build a SQL query in `events_persister.go`. Version 0.7.22 fixes this issue by using the `SanitizeOrderInput` function.",
    "publishedDate": "2024-05-27T19:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-35182",
    "technology": "kubernetes",
    "version": "2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Meshery is an open source, cloud native manager that enables the design and management of Kubernetes-based infrastructure and applications. A SQL injection vulnerability in Meshery prior to version 0.7.22 may lead to arbitrary file write by using a SQL injection stacked queries payload, and the ATTACH DATABASE command. Additionally, attackers may be able to access and modify any data stored in the database, like performance profiles (which may contain session cookies), Meshery application data, or any Kubernetes configuration added to the system. The Meshery project exposes the function `GetAllEvents` at the API URL `/api/v2/events`. The sort query parameter read in `events_streamer.go` is directly used to build a SQL query in `events_persister.go`. Version 0.7.22 fixes this issue by using the `SanitizeOrderInput` function.",
    "publishedDate": "2024-05-27T19:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-35182",
    "technology": "kubernetes",
    "version": "0.7.22",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Meshery is an open source, cloud native manager that enables the design and management of Kubernetes-based infrastructure and applications. A SQL injection vulnerability in Meshery prior to version 0.7.22 may lead to arbitrary file write by using a SQL injection stacked queries payload, and the ATTACH DATABASE command. Additionally, attackers may be able to access and modify any data stored in the database, like performance profiles (which may contain session cookies), Meshery application data, or any Kubernetes configuration added to the system. The Meshery project exposes the function `GetAllEvents` at the API URL `/api/v2/events`. The sort query parameter read in `events_streamer.go` is directly used to build a SQL query in `events_persister.go`. Version 0.7.22 fixes this issue by using the `SanitizeOrderInput` function.",
    "publishedDate": "2024-05-27T19:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-37152",
    "technology": "kubernetes",
    "version": "1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. The vulnerability allows unauthorized access to the sensitive settings exposed by  /api/v1/settings endpoint without authentication. All sensitive settings are hidden except passwordPattern. This vulnerability is fixed in 2.11.3, 2.10.12, and 2.9.17.",
    "publishedDate": "2024-06-06T16:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-39690",
    "technology": "kubernetes",
    "version": "0.7.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Capsule is a multi-tenancy and policy-based framework for Kubernetes. In Capsule v0.7.0 and earlier, the tenant-owner can patch any arbitrary namespace that has not been taken over by a tenant (i.e., namespaces without the ownerReference field), thereby gaining control of that namespace.",
    "publishedDate": "2024-08-20T15:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-41164",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:f5:big-ip_next_service_proxy_for_kubernetes:*:*:*:*:*:*:*:*",
    "description": "When TCP profile with Multipath TCP enabled (MPTCP) is configured on a Virtual Server, undisclosed traffic along with conditions beyond the attackers control can cause TMM to terminate.\n\n \n\n\nNote: Software versions which have reached End of Technical Support (EoTS) are not evaluated.",
    "publishedDate": "2024-08-14T15:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2024-41666",
    "technology": "kubernetes",
    "version": "2.6.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. Argo CD has a Web-based terminal that allows users to get a shell inside a running pod, just as they would with kubectl exec. Starting in version 2.6.0, when the administrator enables this function and grants permission to the user `p, role:myrole, exec, create, */*, allow`, even if the user revokes this permission, the user can still perform operations in the container, as long as the user keeps the terminal view open for a long time. Although the token expiration and revocation of the user are fixed, however, the fix does not address the situation of revocation of only user `p, role:myrole, exec, create, */*, allow` permissions, which may still lead to the leakage of sensitive information. A patch for this vulnerability has been released in Argo CD versions 2.11.7, 2.10.16, and 2.9.21.",
    "publishedDate": "2024-07-24T18:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-43803",
    "technology": "kubernetes",
    "version": "0.7.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The Bare Metal Operator (BMO) implements a Kubernetes API for managing bare metal hosts in Metal3. The `BareMetalHost` (BMH) CRD allows the `userData`, `metaData`, and `networkData` for the provisioned host to be specified as links to Kubernetes Secrets. There are fields for both the `Name` and `Namespace` of the Secret, meaning that versions of the baremetal-operator prior to 0.8.0, 0.6.2, and 0.5.2 will read a `Secret` from any namespace. A user with access to create or edit a `BareMetalHost` can thus exfiltrate a `Secret` from another namespace by using it as e.g. the `userData` for provisioning some host (note that this need not be a real host, it could be a VM somewhere).\n\nBMO will only read a key with the name `value` (or `userData`, `metaData`, or `networkData`), so that limits the exposure somewhat. `value` is probably a pretty common key though. Secrets used by _other_ `BareMetalHost`s in different namespaces are always vulnerable. It is probably relatively unusual for anyone other than cluster administrators to have RBAC access to create/edit a `BareMetalHost`. This vulnerability is only meaningful, if the cluster has users other than administrators and users' privileges are limited to their respective namespaces.\n\nThe patch prevents BMO from accepting links to Secrets from other namespaces as BMH input. Any BMH configuration is only read from the same namespace only. The problem is patched in BMO releases v0.7.0, v0.6.2 and v0.5.2 and users should upgrade to those versions. Prior upgrading, duplicate the BMC Secrets to the namespace where the corresponding BMH is. After upgrade, remove the old Secrets. As a workaround, an operator can configure BMO RBAC to be namespace scoped for Secrets, instead of cluster scoped, to prevent BMO from accessing Secrets from other namespaces.",
    "publishedDate": "2024-09-03T19:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-43803",
    "technology": "kubernetes",
    "version": "0.6.2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The Bare Metal Operator (BMO) implements a Kubernetes API for managing bare metal hosts in Metal3. The `BareMetalHost` (BMH) CRD allows the `userData`, `metaData`, and `networkData` for the provisioned host to be specified as links to Kubernetes Secrets. There are fields for both the `Name` and `Namespace` of the Secret, meaning that versions of the baremetal-operator prior to 0.8.0, 0.6.2, and 0.5.2 will read a `Secret` from any namespace. A user with access to create or edit a `BareMetalHost` can thus exfiltrate a `Secret` from another namespace by using it as e.g. the `userData` for provisioning some host (note that this need not be a real host, it could be a VM somewhere).\n\nBMO will only read a key with the name `value` (or `userData`, `metaData`, or `networkData`), so that limits the exposure somewhat. `value` is probably a pretty common key though. Secrets used by _other_ `BareMetalHost`s in different namespaces are always vulnerable. It is probably relatively unusual for anyone other than cluster administrators to have RBAC access to create/edit a `BareMetalHost`. This vulnerability is only meaningful, if the cluster has users other than administrators and users' privileges are limited to their respective namespaces.\n\nThe patch prevents BMO from accepting links to Secrets from other namespaces as BMH input. Any BMH configuration is only read from the same namespace only. The problem is patched in BMO releases v0.7.0, v0.6.2 and v0.5.2 and users should upgrade to those versions. Prior upgrading, duplicate the BMC Secrets to the namespace where the corresponding BMH is. After upgrade, remove the old Secrets. As a workaround, an operator can configure BMO RBAC to be namespace scoped for Secrets, instead of cluster scoped, to prevent BMO from accessing Secrets from other namespaces.",
    "publishedDate": "2024-09-03T19:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-43803",
    "technology": "kubernetes",
    "version": "0.5.2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The Bare Metal Operator (BMO) implements a Kubernetes API for managing bare metal hosts in Metal3. The `BareMetalHost` (BMH) CRD allows the `userData`, `metaData`, and `networkData` for the provisioned host to be specified as links to Kubernetes Secrets. There are fields for both the `Name` and `Namespace` of the Secret, meaning that versions of the baremetal-operator prior to 0.8.0, 0.6.2, and 0.5.2 will read a `Secret` from any namespace. A user with access to create or edit a `BareMetalHost` can thus exfiltrate a `Secret` from another namespace by using it as e.g. the `userData` for provisioning some host (note that this need not be a real host, it could be a VM somewhere).\n\nBMO will only read a key with the name `value` (or `userData`, `metaData`, or `networkData`), so that limits the exposure somewhat. `value` is probably a pretty common key though. Secrets used by _other_ `BareMetalHost`s in different namespaces are always vulnerable. It is probably relatively unusual for anyone other than cluster administrators to have RBAC access to create/edit a `BareMetalHost`. This vulnerability is only meaningful, if the cluster has users other than administrators and users' privileges are limited to their respective namespaces.\n\nThe patch prevents BMO from accepting links to Secrets from other namespaces as BMH input. Any BMH configuration is only read from the same namespace only. The problem is patched in BMO releases v0.7.0, v0.6.2 and v0.5.2 and users should upgrade to those versions. Prior upgrading, duplicate the BMC Secrets to the namespace where the corresponding BMH is. After upgrade, remove the old Secrets. As a workaround, an operator can configure BMO RBAC to be namespace scoped for Secrets, instead of cluster scoped, to prevent BMO from accessing Secrets from other namespaces.",
    "publishedDate": "2024-09-03T19:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-45310",
    "technology": "kubernetes",
    "version": "1.1.14",
    "vulnerable": false,
    "cpeUri": "",
    "description": "runc is a CLI tool for spawning and running containers according to the OCI specification. runc 1.1.13 and earlier, as well as 1.2.0-rc2 and earlier, can be tricked into creating empty files or directories in arbitrary locations in the host filesystem by sharing a volume between two containers and exploiting a race with `os.MkdirAll`. While this could be used to create empty files, existing files would not be truncated. An attacker must have the ability to start containers using some kind of custom volume configuration. Containers using user namespaces are still affected, but the scope of places an attacker can create inodes can be significantly reduced. Sufficiently strict LSM policies (SELinux/Apparmor) can also in principle block this attack -- we suspect the industry standard SELinux policy may restrict this attack's scope but the exact scope of protection hasn't been analysed. This is exploitable using runc directly as well as through Docker and Kubernetes. The issue is fixed in runc v1.1.14 and v1.2.0-rc3.\n\nSome workarounds are available. Using user namespaces restricts this attack fairly significantly such that the attacker can only create inodes in directories that the remapped root user/group has write access to. Unless the root user is remapped to an actual\nuser on the host (such as with rootless containers that don't use `/etc/sub[ug]id`), this in practice means that an attacker would only be able to create inodes in world-writable directories. A strict enough SELinux or AppArmor policy could in principle also restrict the scope if a specific label is applied to the runc runtime, though neither the extent to which the standard existing policies block this attack nor what exact policies are needed to sufficiently restrict this attack have been thoroughly tested.",
    "publishedDate": "2024-09-03T19:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-45310",
    "technology": "kubernetes",
    "version": "1.2.0-rc3.",
    "vulnerable": false,
    "cpeUri": "",
    "description": "runc is a CLI tool for spawning and running containers according to the OCI specification. runc 1.1.13 and earlier, as well as 1.2.0-rc2 and earlier, can be tricked into creating empty files or directories in arbitrary locations in the host filesystem by sharing a volume between two containers and exploiting a race with `os.MkdirAll`. While this could be used to create empty files, existing files would not be truncated. An attacker must have the ability to start containers using some kind of custom volume configuration. Containers using user namespaces are still affected, but the scope of places an attacker can create inodes can be significantly reduced. Sufficiently strict LSM policies (SELinux/Apparmor) can also in principle block this attack -- we suspect the industry standard SELinux policy may restrict this attack's scope but the exact scope of protection hasn't been analysed. This is exploitable using runc directly as well as through Docker and Kubernetes. The issue is fixed in runc v1.1.14 and v1.2.0-rc3.\n\nSome workarounds are available. Using user namespaces restricts this attack fairly significantly such that the attacker can only create inodes in directories that the remapped root user/group has write access to. Unless the root user is remapped to an actual\nuser on the host (such as with rootless containers that don't use `/etc/sub[ug]id`), this in practice means that an attacker would only be able to create inodes in world-writable directories. A strict enough SELinux or AppArmor policy could in principle also restrict the scope if a specific label is applied to the runc runtime, though neither the extent to which the standard existing policies block this attack nor what exact policies are needed to sufficiently restrict this attack have been thoroughly tested.",
    "publishedDate": "2024-09-03T19:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-45794",
    "technology": "kubernetes",
    "version": "0.7.2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "devtron is an open source tool integration platform for Kubernetes. In affected versions an authenticated user (with minimum permission) could utilize and exploit SQL Injection to allow the execution of malicious SQL queries via CreateUser API (/orchestrator/user). This issue has been addressed in version 0.7.2 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "publishedDate": "2024-11-07T18:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-45794",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:devtron:devtron:*:*:*:*:*:kubernetes:*:*",
    "description": "devtron is an open source tool integration platform for Kubernetes. In affected versions an authenticated user (with minimum permission) could utilize and exploit SQL Injection to allow the execution of malicious SQL queries via CreateUser API (/orchestrator/user). This issue has been addressed in version 0.7.2 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "publishedDate": "2024-11-07T18:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2024-47827",
    "technology": "kubernetes",
    "version": "3.6.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:argo_workflows_project:argo_workflows:3.6.0:rc1:*:*:*:kubernetes:*:*",
    "description": "Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. Due to a race condition in a global variable in 3.6.0-rc1, the argo workflows controller can be made to crash on-command by any user with access to execute a workflow. This vulnerability is fixed in 3.6.0-rc2.",
    "publishedDate": "2024-10-28T16:15Z",
    "cvssScore": 4.8,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "3.6.0",
      "startExcluding": "3.6.0"
    }
  },
  {
    "cveId": "CVE-2024-5154",
    "technology": "kubernetes",
    "version": "1.30.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:cri-o:1.30.0:*:*:*:*:*:*:*",
    "description": "A flaw was found in cri-o. A malicious container can create a symbolic link to arbitrary files on the host via directory traversal (“../“). This flaw allows the container to read and write to arbitrary files on the host system.",
    "publishedDate": "2024-06-12T09:15Z",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.30.0",
      "startExcluding": "1.30.0"
    }
  },
  {
    "cveId": "CVE-2024-5154",
    "technology": "kubernetes",
    "version": "1.29.4",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:cri-o:1.29.4:*:*:*:*:*:*:*",
    "description": "A flaw was found in cri-o. A malicious container can create a symbolic link to arbitrary files on the host via directory traversal (“../“). This flaw allows the container to read and write to arbitrary files on the host system.",
    "publishedDate": "2024-06-12T09:15Z",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.29.4",
      "startExcluding": "1.29.4"
    }
  },
  {
    "cveId": "CVE-2024-5154",
    "technology": "kubernetes",
    "version": "1.28.6",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:cri-o:1.28.6:*:*:*:*:*:*:*",
    "description": "A flaw was found in cri-o. A malicious container can create a symbolic link to arbitrary files on the host via directory traversal (“../“). This flaw allows the container to read and write to arbitrary files on the host system.",
    "publishedDate": "2024-06-12T09:15Z",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.28.6",
      "startExcluding": "1.28.6"
    }
  },
  {
    "cveId": "CVE-2024-53095",
    "technology": "kubernetes",
    "version": "4",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: Fix use-after-free of network namespace.\n\nRecently, we got a customer report that CIFS triggers oops while\nreconnecting to a server.  [0]\n\nThe workload runs on Kubernetes, and some pods mount CIFS servers\nin non-root network namespaces.  The problem rarely happened, but\nit was always while the pod was dying.\n\nThe root cause is wrong reference counting for network namespace.\n\nCIFS uses kernel sockets, which do not hold refcnt of the netns that\nthe socket belongs to.  That means CIFS must ensure the socket is\nalways freed before its netns; otherwise, use-after-free happens.\n\nThe repro steps are roughly:\n\n  1. mount CIFS in a non-root netns\n  2. drop packets from the netns\n  3. destroy the netns\n  4. unmount CIFS\n\nWe can reproduce the issue quickly with the script [1] below and see\nthe splat [2] if CONFIG_NET_NS_REFCNT_TRACKER is enabled.\n\nWhen the socket is TCP, it is hard to guarantee the netns lifetime\nwithout holding refcnt due to async timers.\n\nLet's hold netns refcnt for each socket as done for SMC in commit\n9744d2bf1976 (\"smc: Fix use-after-free in tcp_write_timer_handler().\").\n\nNote that we need to move put_net() from cifs_put_tcp_session() to\nclean_demultiplex_info(); otherwise, __sock_create() still could touch a\nfreed netns while cifsd tries to reconnect from cifs_demultiplex_thread().\n\nAlso, maybe_get_net() cannot be put just before __sock_create() because\nthe code is not under RCU and there is a small chance that the same\naddress happened to be reallocated to another netns.\n\n[0]:\nCIFS: VFS: \\\\XXXXXXXXXXX has not responded in 15 seconds. Reconnecting...\nCIFS: Serverclose failed 4 times, giving up\nUnable to handle kernel paging request at virtual address 14de99e461f84a07\nMem abort info:\n  ESR = 0x0000000096000004\n  EC = 0x25: DABT (current EL), IL = 32 bits\n  SET = 0, FnV = 0\n  EA = 0, S1PTW = 0\n  FSC = 0x04: level 0 translation fault\nData abort info:\n  ISV = 0, ISS = 0x00000004\n  CM = 0, WnR = 0\n[14de99e461f84a07] address between user and kernel address ranges\nInternal error: Oops: 0000000096000004 [#1] SMP\nModules linked in: cls_bpf sch_ingress nls_utf8 cifs cifs_arc4 cifs_md4 dns_resolver tcp_diag inet_diag veth xt_state xt_connmark nf_conntrack_netlink xt_nat xt_statistic xt_MASQUERADE xt_mark xt_addrtype ipt_REJECT nf_reject_ipv4 nft_chain_nat nf_nat xt_conntrack nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 xt_comment nft_compat nf_tables nfnetlink overlay nls_ascii nls_cp437 sunrpc vfat fat aes_ce_blk aes_ce_cipher ghash_ce sm4_ce_cipher sm4 sm3_ce sm3 sha3_ce sha512_ce sha512_arm64 sha1_ce ena button sch_fq_codel loop fuse configfs dmi_sysfs sha2_ce sha256_arm64 dm_mirror dm_region_hash dm_log dm_mod dax efivarfs\nCPU: 5 PID: 2690970 Comm: cifsd Not tainted 6.1.103-109.184.amzn2023.aarch64 #1\nHardware name: Amazon EC2 r7g.4xlarge/, BIOS 1.0 11/1/2018\npstate: 00400005 (nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : fib_rules_lookup+0x44/0x238\nlr : __fib_lookup+0x64/0xbc\nsp : ffff8000265db790\nx29: ffff8000265db790 x28: 0000000000000000 x27: 000000000000bd01\nx26: 0000000000000000 x25: ffff000b4baf8000 x24: ffff00047b5e4580\nx23: ffff8000265db7e0 x22: 0000000000000000 x21: ffff00047b5e4500\nx20: ffff0010e3f694f8 x19: 14de99e461f849f7 x18: 0000000000000000\nx17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000\nx14: 0000000000000000 x13: 0000000000000000 x12: 3f92800abd010002\nx11: 0000000000000001 x10: ffff0010e3f69420 x9 : ffff800008a6f294\nx8 : 0000000000000000 x7 : 0000000000000006 x6 : 0000000000000000\nx5 : 0000000000000001 x4 : ffff001924354280 x3 : ffff8000265db7e0\nx2 : 0000000000000000 x1 : ffff0010e3f694f8 x0 : ffff00047b5e4500\nCall trace:\n fib_rules_lookup+0x44/0x238\n __fib_lookup+0x64/0xbc\n ip_route_output_key_hash_rcu+0x2c4/0x398\n ip_route_output_key_hash+0x60/0x8c\n tcp_v4_connect+0x290/0x488\n __inet_stream_connect+0x108/0x3d0\n inet_stream_connect+0x50/0x78\n kernel_connect+0x6c/0xac\n generic_ip_conne\n---truncated---",
    "publishedDate": "2024-11-21T19:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-53095",
    "technology": "kubernetes",
    "version": "6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: Fix use-after-free of network namespace.\n\nRecently, we got a customer report that CIFS triggers oops while\nreconnecting to a server.  [0]\n\nThe workload runs on Kubernetes, and some pods mount CIFS servers\nin non-root network namespaces.  The problem rarely happened, but\nit was always while the pod was dying.\n\nThe root cause is wrong reference counting for network namespace.\n\nCIFS uses kernel sockets, which do not hold refcnt of the netns that\nthe socket belongs to.  That means CIFS must ensure the socket is\nalways freed before its netns; otherwise, use-after-free happens.\n\nThe repro steps are roughly:\n\n  1. mount CIFS in a non-root netns\n  2. drop packets from the netns\n  3. destroy the netns\n  4. unmount CIFS\n\nWe can reproduce the issue quickly with the script [1] below and see\nthe splat [2] if CONFIG_NET_NS_REFCNT_TRACKER is enabled.\n\nWhen the socket is TCP, it is hard to guarantee the netns lifetime\nwithout holding refcnt due to async timers.\n\nLet's hold netns refcnt for each socket as done for SMC in commit\n9744d2bf1976 (\"smc: Fix use-after-free in tcp_write_timer_handler().\").\n\nNote that we need to move put_net() from cifs_put_tcp_session() to\nclean_demultiplex_info(); otherwise, __sock_create() still could touch a\nfreed netns while cifsd tries to reconnect from cifs_demultiplex_thread().\n\nAlso, maybe_get_net() cannot be put just before __sock_create() because\nthe code is not under RCU and there is a small chance that the same\naddress happened to be reallocated to another netns.\n\n[0]:\nCIFS: VFS: \\\\XXXXXXXXXXX has not responded in 15 seconds. Reconnecting...\nCIFS: Serverclose failed 4 times, giving up\nUnable to handle kernel paging request at virtual address 14de99e461f84a07\nMem abort info:\n  ESR = 0x0000000096000004\n  EC = 0x25: DABT (current EL), IL = 32 bits\n  SET = 0, FnV = 0\n  EA = 0, S1PTW = 0\n  FSC = 0x04: level 0 translation fault\nData abort info:\n  ISV = 0, ISS = 0x00000004\n  CM = 0, WnR = 0\n[14de99e461f84a07] address between user and kernel address ranges\nInternal error: Oops: 0000000096000004 [#1] SMP\nModules linked in: cls_bpf sch_ingress nls_utf8 cifs cifs_arc4 cifs_md4 dns_resolver tcp_diag inet_diag veth xt_state xt_connmark nf_conntrack_netlink xt_nat xt_statistic xt_MASQUERADE xt_mark xt_addrtype ipt_REJECT nf_reject_ipv4 nft_chain_nat nf_nat xt_conntrack nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 xt_comment nft_compat nf_tables nfnetlink overlay nls_ascii nls_cp437 sunrpc vfat fat aes_ce_blk aes_ce_cipher ghash_ce sm4_ce_cipher sm4 sm3_ce sm3 sha3_ce sha512_ce sha512_arm64 sha1_ce ena button sch_fq_codel loop fuse configfs dmi_sysfs sha2_ce sha256_arm64 dm_mirror dm_region_hash dm_log dm_mod dax efivarfs\nCPU: 5 PID: 2690970 Comm: cifsd Not tainted 6.1.103-109.184.amzn2023.aarch64 #1\nHardware name: Amazon EC2 r7g.4xlarge/, BIOS 1.0 11/1/2018\npstate: 00400005 (nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : fib_rules_lookup+0x44/0x238\nlr : __fib_lookup+0x64/0xbc\nsp : ffff8000265db790\nx29: ffff8000265db790 x28: 0000000000000000 x27: 000000000000bd01\nx26: 0000000000000000 x25: ffff000b4baf8000 x24: ffff00047b5e4580\nx23: ffff8000265db7e0 x22: 0000000000000000 x21: ffff00047b5e4500\nx20: ffff0010e3f694f8 x19: 14de99e461f849f7 x18: 0000000000000000\nx17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000\nx14: 0000000000000000 x13: 0000000000000000 x12: 3f92800abd010002\nx11: 0000000000000001 x10: ffff0010e3f69420 x9 : ffff800008a6f294\nx8 : 0000000000000000 x7 : 0000000000000006 x6 : 0000000000000000\nx5 : 0000000000000001 x4 : ffff001924354280 x3 : ffff8000265db7e0\nx2 : 0000000000000000 x1 : ffff0010e3f694f8 x0 : ffff00047b5e4500\nCall trace:\n fib_rules_lookup+0x44/0x238\n __fib_lookup+0x64/0xbc\n ip_route_output_key_hash_rcu+0x2c4/0x398\n ip_route_output_key_hash+0x60/0x8c\n tcp_v4_connect+0x290/0x488\n __inet_stream_connect+0x108/0x3d0\n inet_stream_connect+0x50/0x78\n kernel_connect+0x6c/0xac\n generic_ip_conne\n---truncated---",
    "publishedDate": "2024-11-21T19:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-53095",
    "technology": "kubernetes",
    "version": "4",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: Fix use-after-free of network namespace.\n\nRecently, we got a customer report that CIFS triggers oops while\nreconnecting to a server.  [0]\n\nThe workload runs on Kubernetes, and some pods mount CIFS servers\nin non-root network namespaces.  The problem rarely happened, but\nit was always while the pod was dying.\n\nThe root cause is wrong reference counting for network namespace.\n\nCIFS uses kernel sockets, which do not hold refcnt of the netns that\nthe socket belongs to.  That means CIFS must ensure the socket is\nalways freed before its netns; otherwise, use-after-free happens.\n\nThe repro steps are roughly:\n\n  1. mount CIFS in a non-root netns\n  2. drop packets from the netns\n  3. destroy the netns\n  4. unmount CIFS\n\nWe can reproduce the issue quickly with the script [1] below and see\nthe splat [2] if CONFIG_NET_NS_REFCNT_TRACKER is enabled.\n\nWhen the socket is TCP, it is hard to guarantee the netns lifetime\nwithout holding refcnt due to async timers.\n\nLet's hold netns refcnt for each socket as done for SMC in commit\n9744d2bf1976 (\"smc: Fix use-after-free in tcp_write_timer_handler().\").\n\nNote that we need to move put_net() from cifs_put_tcp_session() to\nclean_demultiplex_info(); otherwise, __sock_create() still could touch a\nfreed netns while cifsd tries to reconnect from cifs_demultiplex_thread().\n\nAlso, maybe_get_net() cannot be put just before __sock_create() because\nthe code is not under RCU and there is a small chance that the same\naddress happened to be reallocated to another netns.\n\n[0]:\nCIFS: VFS: \\\\XXXXXXXXXXX has not responded in 15 seconds. Reconnecting...\nCIFS: Serverclose failed 4 times, giving up\nUnable to handle kernel paging request at virtual address 14de99e461f84a07\nMem abort info:\n  ESR = 0x0000000096000004\n  EC = 0x25: DABT (current EL), IL = 32 bits\n  SET = 0, FnV = 0\n  EA = 0, S1PTW = 0\n  FSC = 0x04: level 0 translation fault\nData abort info:\n  ISV = 0, ISS = 0x00000004\n  CM = 0, WnR = 0\n[14de99e461f84a07] address between user and kernel address ranges\nInternal error: Oops: 0000000096000004 [#1] SMP\nModules linked in: cls_bpf sch_ingress nls_utf8 cifs cifs_arc4 cifs_md4 dns_resolver tcp_diag inet_diag veth xt_state xt_connmark nf_conntrack_netlink xt_nat xt_statistic xt_MASQUERADE xt_mark xt_addrtype ipt_REJECT nf_reject_ipv4 nft_chain_nat nf_nat xt_conntrack nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 xt_comment nft_compat nf_tables nfnetlink overlay nls_ascii nls_cp437 sunrpc vfat fat aes_ce_blk aes_ce_cipher ghash_ce sm4_ce_cipher sm4 sm3_ce sm3 sha3_ce sha512_ce sha512_arm64 sha1_ce ena button sch_fq_codel loop fuse configfs dmi_sysfs sha2_ce sha256_arm64 dm_mirror dm_region_hash dm_log dm_mod dax efivarfs\nCPU: 5 PID: 2690970 Comm: cifsd Not tainted 6.1.103-109.184.amzn2023.aarch64 #1\nHardware name: Amazon EC2 r7g.4xlarge/, BIOS 1.0 11/1/2018\npstate: 00400005 (nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : fib_rules_lookup+0x44/0x238\nlr : __fib_lookup+0x64/0xbc\nsp : ffff8000265db790\nx29: ffff8000265db790 x28: 0000000000000000 x27: 000000000000bd01\nx26: 0000000000000000 x25: ffff000b4baf8000 x24: ffff00047b5e4580\nx23: ffff8000265db7e0 x22: 0000000000000000 x21: ffff00047b5e4500\nx20: ffff0010e3f694f8 x19: 14de99e461f849f7 x18: 0000000000000000\nx17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000\nx14: 0000000000000000 x13: 0000000000000000 x12: 3f92800abd010002\nx11: 0000000000000001 x10: ffff0010e3f69420 x9 : ffff800008a6f294\nx8 : 0000000000000000 x7 : 0000000000000006 x6 : 0000000000000000\nx5 : 0000000000000001 x4 : ffff001924354280 x3 : ffff8000265db7e0\nx2 : 0000000000000000 x1 : ffff0010e3f694f8 x0 : ffff00047b5e4500\nCall trace:\n fib_rules_lookup+0x44/0x238\n __fib_lookup+0x64/0xbc\n ip_route_output_key_hash_rcu+0x2c4/0x398\n ip_route_output_key_hash+0x60/0x8c\n tcp_v4_connect+0x290/0x488\n __inet_stream_connect+0x108/0x3d0\n inet_stream_connect+0x50/0x78\n kernel_connect+0x6c/0xac\n generic_ip_conne\n---truncated---",
    "publishedDate": "2024-11-21T19:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-53095",
    "technology": "kubernetes",
    "version": "4",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: Fix use-after-free of network namespace.\n\nRecently, we got a customer report that CIFS triggers oops while\nreconnecting to a server.  [0]\n\nThe workload runs on Kubernetes, and some pods mount CIFS servers\nin non-root network namespaces.  The problem rarely happened, but\nit was always while the pod was dying.\n\nThe root cause is wrong reference counting for network namespace.\n\nCIFS uses kernel sockets, which do not hold refcnt of the netns that\nthe socket belongs to.  That means CIFS must ensure the socket is\nalways freed before its netns; otherwise, use-after-free happens.\n\nThe repro steps are roughly:\n\n  1. mount CIFS in a non-root netns\n  2. drop packets from the netns\n  3. destroy the netns\n  4. unmount CIFS\n\nWe can reproduce the issue quickly with the script [1] below and see\nthe splat [2] if CONFIG_NET_NS_REFCNT_TRACKER is enabled.\n\nWhen the socket is TCP, it is hard to guarantee the netns lifetime\nwithout holding refcnt due to async timers.\n\nLet's hold netns refcnt for each socket as done for SMC in commit\n9744d2bf1976 (\"smc: Fix use-after-free in tcp_write_timer_handler().\").\n\nNote that we need to move put_net() from cifs_put_tcp_session() to\nclean_demultiplex_info(); otherwise, __sock_create() still could touch a\nfreed netns while cifsd tries to reconnect from cifs_demultiplex_thread().\n\nAlso, maybe_get_net() cannot be put just before __sock_create() because\nthe code is not under RCU and there is a small chance that the same\naddress happened to be reallocated to another netns.\n\n[0]:\nCIFS: VFS: \\\\XXXXXXXXXXX has not responded in 15 seconds. Reconnecting...\nCIFS: Serverclose failed 4 times, giving up\nUnable to handle kernel paging request at virtual address 14de99e461f84a07\nMem abort info:\n  ESR = 0x0000000096000004\n  EC = 0x25: DABT (current EL), IL = 32 bits\n  SET = 0, FnV = 0\n  EA = 0, S1PTW = 0\n  FSC = 0x04: level 0 translation fault\nData abort info:\n  ISV = 0, ISS = 0x00000004\n  CM = 0, WnR = 0\n[14de99e461f84a07] address between user and kernel address ranges\nInternal error: Oops: 0000000096000004 [#1] SMP\nModules linked in: cls_bpf sch_ingress nls_utf8 cifs cifs_arc4 cifs_md4 dns_resolver tcp_diag inet_diag veth xt_state xt_connmark nf_conntrack_netlink xt_nat xt_statistic xt_MASQUERADE xt_mark xt_addrtype ipt_REJECT nf_reject_ipv4 nft_chain_nat nf_nat xt_conntrack nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 xt_comment nft_compat nf_tables nfnetlink overlay nls_ascii nls_cp437 sunrpc vfat fat aes_ce_blk aes_ce_cipher ghash_ce sm4_ce_cipher sm4 sm3_ce sm3 sha3_ce sha512_ce sha512_arm64 sha1_ce ena button sch_fq_codel loop fuse configfs dmi_sysfs sha2_ce sha256_arm64 dm_mirror dm_region_hash dm_log dm_mod dax efivarfs\nCPU: 5 PID: 2690970 Comm: cifsd Not tainted 6.1.103-109.184.amzn2023.aarch64 #1\nHardware name: Amazon EC2 r7g.4xlarge/, BIOS 1.0 11/1/2018\npstate: 00400005 (nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : fib_rules_lookup+0x44/0x238\nlr : __fib_lookup+0x64/0xbc\nsp : ffff8000265db790\nx29: ffff8000265db790 x28: 0000000000000000 x27: 000000000000bd01\nx26: 0000000000000000 x25: ffff000b4baf8000 x24: ffff00047b5e4580\nx23: ffff8000265db7e0 x22: 0000000000000000 x21: ffff00047b5e4500\nx20: ffff0010e3f694f8 x19: 14de99e461f849f7 x18: 0000000000000000\nx17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000\nx14: 0000000000000000 x13: 0000000000000000 x12: 3f92800abd010002\nx11: 0000000000000001 x10: ffff0010e3f69420 x9 : ffff800008a6f294\nx8 : 0000000000000000 x7 : 0000000000000006 x6 : 0000000000000000\nx5 : 0000000000000001 x4 : ffff001924354280 x3 : ffff8000265db7e0\nx2 : 0000000000000000 x1 : ffff0010e3f694f8 x0 : ffff00047b5e4500\nCall trace:\n fib_rules_lookup+0x44/0x238\n __fib_lookup+0x64/0xbc\n ip_route_output_key_hash_rcu+0x2c4/0x398\n ip_route_output_key_hash+0x60/0x8c\n tcp_v4_connect+0x290/0x488\n __inet_stream_connect+0x108/0x3d0\n inet_stream_connect+0x50/0x78\n kernel_connect+0x6c/0xac\n generic_ip_conne\n---truncated---",
    "publishedDate": "2024-11-21T19:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-53862",
    "technology": "kubernetes",
    "version": "1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. When using `--auth-mode=client`, Archived Workflows can be retrieved with a fake or spoofed token via the GET Workflow endpoint: `/api/v1/workflows/{namespace}/{name}` or when using `--auth-mode=sso`, all Archived Workflows can be retrieved with a valid token via the GET Workflow endpoint: `/api/v1/workflows/{namespace}/{name}`. No authentication is performed by the Server itself on `client` tokens. Authentication \u0026 authorization is instead delegated to the k8s API server. However, the Workflow Archive does not interact with k8s, and so any token that looks valid will be considered authenticated, even if it is not a k8s token or even if the token has no RBAC for Argo. To handle the lack of pass-through k8s authN/authZ, the Workflow Archive specifically does the equivalent of a `kubectl auth can-i` check for respective methods. In 3.5.7 and 3.5.8, the auth check was accidentally removed on the GET Workflow endpoint's fallback to archived workflows on these lines, allowing archived workflows to be retrieved with a fake token. This vulnerability is fixed in 3.6.2 and 3.5.13.",
    "publishedDate": "2024-12-02T16:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-53862",
    "technology": "kubernetes",
    "version": "1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. When using `--auth-mode=client`, Archived Workflows can be retrieved with a fake or spoofed token via the GET Workflow endpoint: `/api/v1/workflows/{namespace}/{name}` or when using `--auth-mode=sso`, all Archived Workflows can be retrieved with a valid token via the GET Workflow endpoint: `/api/v1/workflows/{namespace}/{name}`. No authentication is performed by the Server itself on `client` tokens. Authentication \u0026 authorization is instead delegated to the k8s API server. However, the Workflow Archive does not interact with k8s, and so any token that looks valid will be considered authenticated, even if it is not a k8s token or even if the token has no RBAC for Argo. To handle the lack of pass-through k8s authN/authZ, the Workflow Archive specifically does the equivalent of a `kubectl auth can-i` check for respective methods. In 3.5.7 and 3.5.8, the auth check was accidentally removed on the GET Workflow endpoint's fallback to archived workflows on these lines, allowing archived workflows to be retrieved with a fake token. This vulnerability is fixed in 3.6.2 and 3.5.13.",
    "publishedDate": "2024-12-02T16:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-56513",
    "technology": "kubernetes",
    "version": "1.12.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Karmada is a Kubernetes management system that allows users to run cloud-native applications across multiple Kubernetes clusters and clouds. Prior to version 1.12.0, the PULL mode clusters registered with the `karmadactl register` command have excessive privileges to access control plane resources. By abusing these permissions, an attacker able to authenticate as the karmada-agent to a karmada cluster would be able to obtain administrative privileges over the entire federation system including all registered member clusters. Since Karmada v1.12.0, command `karmadactl register` restricts the access permissions of pull mode member clusters to control plane resources. This way, an attacker able to authenticate as the karmada-agent cannot control other member clusters in Karmada. As a workaround, one may restrict the access permissions of pull mode member clusters to control plane resources according to Karmada Component Permissions Docs.",
    "publishedDate": "2025-01-03T17:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-56513",
    "technology": "kubernetes",
    "version": "1.12.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Karmada is a Kubernetes management system that allows users to run cloud-native applications across multiple Kubernetes clusters and clouds. Prior to version 1.12.0, the PULL mode clusters registered with the `karmadactl register` command have excessive privileges to access control plane resources. By abusing these permissions, an attacker able to authenticate as the karmada-agent to a karmada cluster would be able to obtain administrative privileges over the entire federation system including all registered member clusters. Since Karmada v1.12.0, command `karmadactl register` restricts the access permissions of pull mode member clusters to control plane resources. This way, an attacker able to authenticate as the karmada-agent cannot control other member clusters in Karmada. As a workaround, one may restrict the access permissions of pull mode member clusters to control plane resources according to Karmada Component Permissions Docs.",
    "publishedDate": "2025-01-03T17:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-56514",
    "technology": "kubernetes",
    "version": "1.12.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Karmada is a Kubernetes management system that allows users to run cloud-native applications across multiple Kubernetes clusters and clouds. Prior to version 1.12.0, both in karmadactl and karmada-operator, it is possible to supply a filesystem path, or an HTTP(s) URL to retrieve the custom resource definitions(CRDs) needed by Karmada. The CRDs are downloaded as a gzipped tarfile and are vulnerable to a TarSlip vulnerability. An attacker able to supply a malicious CRD file into a Karmada initialization could write arbitrary files in arbitrary paths of the filesystem. From Karmada version 1.12.0, when processing custom CRDs files, CRDs archive verification is utilized to enhance file system robustness. A workaround is available. Someone who needs to set flag `--crd` to customize the CRD files required for Karmada initialization when using `karmadactl init` to set up Karmada can manually inspect the CRD files to check whether they contain sequences such as `../` that would alter file paths, to determine if they potentially include malicious files. When using karmada-operator to set up Karmada, one must upgrade one's karmada-operator to one of the fixed versions.",
    "publishedDate": "2025-01-03T17:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-56514",
    "technology": "kubernetes",
    "version": "1.12.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Karmada is a Kubernetes management system that allows users to run cloud-native applications across multiple Kubernetes clusters and clouds. Prior to version 1.12.0, both in karmadactl and karmada-operator, it is possible to supply a filesystem path, or an HTTP(s) URL to retrieve the custom resource definitions(CRDs) needed by Karmada. The CRDs are downloaded as a gzipped tarfile and are vulnerable to a TarSlip vulnerability. An attacker able to supply a malicious CRD file into a Karmada initialization could write arbitrary files in arbitrary paths of the filesystem. From Karmada version 1.12.0, when processing custom CRDs files, CRDs archive verification is utilized to enhance file system robustness. A workaround is available. Someone who needs to set flag `--crd` to customize the CRD files required for Karmada initialization when using `karmadactl init` to set up Karmada can manually inspect the CRD files to check whether they contain sequences such as `../` that would alter file paths, to determine if they potentially include malicious files. When using karmada-operator to set up Karmada, one must upgrade one's karmada-operator to one of the fixed versions.",
    "publishedDate": "2025-01-03T17:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-9486",
    "technology": "kubernetes",
    "version": "0.1.37",
    "vulnerable": false,
    "cpeUri": "",
    "description": "A security issue was discovered in the Kubernetes Image Builder versions \u003c= v0.1.37 where default credentials are enabled during the image build process. Virtual machine images built using the Proxmox provider do not disable these default credentials, and nodes using the resulting images may be accessible via these default credentials. The credentials can be used to gain root access. Kubernetes clusters are only affected if their nodes use VM images created via the Image Builder project with its Proxmox provider.",
    "publishedDate": "2024-10-15T21:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-9486",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:image_builder:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in the Kubernetes Image Builder versions \u003c= v0.1.37 where default credentials are enabled during the image build process. Virtual machine images built using the Proxmox provider do not disable these default credentials, and nodes using the resulting images may be accessible via these default credentials. The credentials can be used to gain root access. Kubernetes clusters are only affected if their nodes use VM images created via the Image Builder project with its Proxmox provider.",
    "publishedDate": "2024-10-15T21:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2024-9594",
    "technology": "kubernetes",
    "version": "0.1.37",
    "vulnerable": false,
    "cpeUri": "",
    "description": "A security issue was discovered in the Kubernetes Image Builder versions \u003c= v0.1.37 where default credentials are enabled during the image build process when using the Nutanix, OVA, QEMU or raw providers. The credentials can be used to gain root access. The credentials are disabled at the conclusion of the image build process. Kubernetes clusters are only affected if their nodes use VM images created via the Image Builder project. Because these images were vulnerable during the image build process, they are affected only if an attacker was able to reach the VM where the image build was happening and used the vulnerability to modify the image at the time the image build was occurring.",
    "publishedDate": "2024-10-15T21:15Z",
    "cvssScore": 8.1,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-9594",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:image_builder:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in the Kubernetes Image Builder versions \u003c= v0.1.37 where default credentials are enabled during the image build process when using the Nutanix, OVA, QEMU or raw providers. The credentials can be used to gain root access. The credentials are disabled at the conclusion of the image build process. Kubernetes clusters are only affected if their nodes use VM images created via the Image Builder project. Because these images were vulnerable during the image build process, they are affected only if an attacker was able to reach the VM where the image build was happening and used the vulnerability to modify the image at the time the image build was occurring.",
    "publishedDate": "2024-10-15T21:15Z",
    "cvssScore": 8.1,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-0436",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:mongodb:atlas_kubernetes_operator:*:*:*:*:*:*:*:*",
    "description": "The affected versions of MongoDB Atlas Kubernetes Operator may print sensitive information like GCP service account keys and API integration secrets while DEBUG mode logging is enabled. This issue affects MongoDB Atlas Kubernetes Operator versions: 1.5.0, 1.6.0, 1.6.1, 1.7.0.\n\nPlease note that this is reported on an EOL version of the product, and users are advised to upgrade to the latest supported version.\nRequired Configuration: \n\nDEBUG logging is not enabled by default, and must be configured by the end-user. To check the log-level of the Operator, review the flags passed in your deployment configuration (eg.  https://github.com/mongodb/mongodb-atlas-kubernetes/blob/main/config/manager/manager.yaml#L27 https://github.com/mongodb/mongodb-atlas-kubernetes/blob/main/config/manager/manager.yaml#L27 )\n\n",
    "publishedDate": "2023-11-07T12:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-0436",
    "technology": "kubernetes",
    "version": "1.5.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:mongodb:atlas_kubernetes_operator:1.5.0:*:*:*:*:*:*:*",
    "description": "The affected versions of MongoDB Atlas Kubernetes Operator may print sensitive information like GCP service account keys and API integration secrets while DEBUG mode logging is enabled. This issue affects MongoDB Atlas Kubernetes Operator versions: 1.5.0, 1.6.0, 1.6.1, 1.7.0.\n\nPlease note that this is reported on an EOL version of the product, and users are advised to upgrade to the latest supported version.\nRequired Configuration: \n\nDEBUG logging is not enabled by default, and must be configured by the end-user. To check the log-level of the Operator, review the flags passed in your deployment configuration (eg.  https://github.com/mongodb/mongodb-atlas-kubernetes/blob/main/config/manager/manager.yaml#L27 https://github.com/mongodb/mongodb-atlas-kubernetes/blob/main/config/manager/manager.yaml#L27 )\n\n",
    "publishedDate": "2023-11-07T12:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.5.0",
      "startExcluding": "1.5.0"
    }
  },
  {
    "cveId": "CVE-2023-1065",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:snyk:kubernetes_monitor:*:*:*:*:*:*:*:*",
    "description": "This vulnerability in the Snyk Kubernetes Monitor can result in irrelevant data being posted to a Snyk Organization, which could in turn obfuscate other, relevant, security issues. It does not expose the user of the integration to any direct security risk and no user data can be leaked. To exploit the vulnerability the attacker does not need to be authenticated to Snyk but does need to know the target's Integration ID (which may or may not be the same as the Organization ID, although this is an unpredictable UUID in either case).",
    "publishedDate": "2023-02-28T19:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-1174",
    "technology": "kubernetes",
    "version": "1.26.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:minikube:1.26.0:*:*:*:*:*:*:*",
    "description": "This vulnerability exposes a network port in minikube running on macOS with Docker driver that could enable unexpected remote access to the minikube container.",
    "publishedDate": "2023-05-24T17:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe_child",
    "versionRange": {
      "startIncluding": "1.26.0",
      "startExcluding": "1.26.0"
    }
  },
  {
    "cveId": "CVE-2023-1174",
    "technology": "kubernetes",
    "version": "1.26.1",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:minikube:1.26.1:*:*:*:*:*:*:*",
    "description": "This vulnerability exposes a network port in minikube running on macOS with Docker driver that could enable unexpected remote access to the minikube container.",
    "publishedDate": "2023-05-24T17:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe_child",
    "versionRange": {
      "startIncluding": "1.26.1",
      "startExcluding": "1.26.1"
    }
  },
  {
    "cveId": "CVE-2023-1174",
    "technology": "kubernetes",
    "version": "1.27.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:minikube:1.27.0:*:*:*:*:*:*:*",
    "description": "This vulnerability exposes a network port in minikube running on macOS with Docker driver that could enable unexpected remote access to the minikube container.",
    "publishedDate": "2023-05-24T17:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe_child",
    "versionRange": {
      "startIncluding": "1.27.0",
      "startExcluding": "1.27.0"
    }
  },
  {
    "cveId": "CVE-2023-1174",
    "technology": "kubernetes",
    "version": "1.27.1",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:minikube:1.27.1:*:*:*:*:*:*:*",
    "description": "This vulnerability exposes a network port in minikube running on macOS with Docker driver that could enable unexpected remote access to the minikube container.",
    "publishedDate": "2023-05-24T17:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe_child",
    "versionRange": {
      "startIncluding": "1.27.1",
      "startExcluding": "1.27.1"
    }
  },
  {
    "cveId": "CVE-2023-1174",
    "technology": "kubernetes",
    "version": "1.28.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:minikube:1.28.0:*:*:*:*:*:*:*",
    "description": "This vulnerability exposes a network port in minikube running on macOS with Docker driver that could enable unexpected remote access to the minikube container.",
    "publishedDate": "2023-05-24T17:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe_child",
    "versionRange": {
      "startIncluding": "1.28.0",
      "startExcluding": "1.28.0"
    }
  },
  {
    "cveId": "CVE-2023-1260",
    "technology": "kubernetes",
    "version": "-",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kube-apiserver:-:*:*:*:*:*:*:*",
    "description": "An authentication bypass vulnerability was discovered in kube-apiserver. This issue could allow a remote, authenticated attacker who has been given permissions \"update, patch\" the \"pods/ephemeralcontainers\" subresource beyond what the default is. They would then need to create a new pod or patch one that they already have access to. This might allow evasion of SCC admission restrictions, thereby gaining control of a privileged pod.",
    "publishedDate": "2023-09-24T01:15Z",
    "cvssScore": 8,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2023-1943",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:operations:*:*:*:*:*:*:*:*",
    "description": "Privilege Escalation in kOps using GCE/GCP Provider in Gossip Mode.\n",
    "publishedDate": "2023-10-12T00:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-1943",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:operations:*:*:*:*:*:*:*:*",
    "description": "Privilege Escalation in kOps using GCE/GCP Provider in Gossip Mode.\n",
    "publishedDate": "2023-10-12T00:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-1944",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:minikube:*:*:*:*:*:*:*:*",
    "description": "This vulnerability enables ssh access to minikube container using a default password.",
    "publishedDate": "2023-05-24T17:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-22478",
    "technology": "kubernetes",
    "version": "1.6.4",
    "vulnerable": false,
    "cpeUri": "",
    "description": "KubePi is a modern Kubernetes panel. The API interfaces with unauthorized entities and may leak sensitive information. This issue has been patched in version 1.6.4. There are currently no known workarounds.",
    "publishedDate": "2023-01-14T01:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-22479",
    "technology": "kubernetes",
    "version": "1.6.4",
    "vulnerable": false,
    "cpeUri": "",
    "description": "KubePi is a modern Kubernetes panel. A session fixation attack allows an attacker to hijack a legitimate user session, versions 1.6.3 and below are susceptible. A patch will be released in version 1.6.4.",
    "publishedDate": "2023-01-10T21:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-22480",
    "technology": "kubernetes",
    "version": "3.16.4",
    "vulnerable": false,
    "cpeUri": "",
    "description": "KubeOperator is an open source Kubernetes distribution focused on helping enterprises plan, deploy and operate production-level K8s clusters. In KubeOperator versions 3.16.3 and below, API interfaces with unauthorized entities and can leak sensitive information. This vulnerability could be used to take over the cluster under certain conditions. This issue has been patched in version 3.16.4.\n",
    "publishedDate": "2023-01-14T01:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-22482",
    "technology": "kubernetes",
    "version": "1.8.2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. Versions of Argo CD starting with v1.8.2 and prior to 2.3.13, 2.4.19, 2.5.6, and 2.6.0-rc-3  are vulnerable to an improper authorization bug causing the API to accept certain invalid tokens. OIDC providers include an `aud` (audience) claim in signed tokens. The value of that claim specifies the intended audience(s) of the token (i.e. the service or services which are meant to accept the token). Argo CD _does_ validate that the token was signed by Argo CD's configured OIDC provider. But Argo CD _does not_ validate the audience claim, so it will accept tokens that are not intended for Argo CD. If Argo CD's configured OIDC provider also serves other audiences (for example, a file storage service), then Argo CD will accept a token intended for one of those other audiences. Argo CD will grant the user privileges based on the token's `groups` claim, even though those groups were not intended to be used by Argo CD. This bug also increases the impact of a stolen token. If an attacker steals a valid token for a different audience, they can use it to access Argo CD. A patch for this vulnerability has been released in versions 2.6.0-rc3, 2.5.6, 2.4.19, and 2.3.13. There are no workarounds.",
    "publishedDate": "2023-01-26T21:18Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-22664",
    "technology": "kubernetes",
    "version": "1.6.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:f5:big-ip_service_proxy:1.6.0:*:*:*:*:kubernetes:*:*",
    "description": "On BIG-IP versions 17.0.x before 17.0.0.2 and 16.1.x before 16.1.3.3, and BIG-IP SPK starting in version 1.6.0, when a client-side HTTP/2 profile and the HTTP MRF Router option are enabled for a virtual server, undisclosed requests can cause an increase in memory resource utilization.  Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n",
    "publishedDate": "2023-02-01T18:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.6.0",
      "startExcluding": "1.6.0"
    }
  },
  {
    "cveId": "CVE-2023-22736",
    "technology": "kubernetes",
    "version": "2.6.0-rc4",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. Versions starting with 2.5.0-rc1 and above, prior to 2.5.8, and version 2.6.0-rc4, are vulnerable to an authorization bypass bug which allows a malicious Argo CD user to deploy Applications outside the configured allowed namespaces. Reconciled Application namespaces are specified as a comma-delimited list of glob patterns. When sharding is enabled on the Application controller, it does not enforce that list of patterns when reconciling Applications. For example, if Application namespaces are configured to be argocd-*, the Application controller may reconcile an Application installed in a namespace called other, even though it does not start with argocd-. Reconciliation of the out-of-bounds Application is only triggered when the Application is updated, so the attacker must be able to cause an update operation on the Application resource. This bug only applies to users who have explicitly enabled the \"apps-in-any-namespace\" feature by setting `application.namespaces` in the argocd-cmd-params-cm ConfigMap or otherwise setting the `--application-namespaces` flags on the Application controller and API server components. The apps-in-any-namespace feature is in beta as of this Security Advisory's publish date. The bug is also limited to Argo CD instances where sharding is enabled by increasing the `replicas` count for the Application controller. Finally, the AppProjects' `sourceNamespaces` field acts as a secondary check against this exploit. To cause reconciliation of an Application in an out-of-bounds namespace, an AppProject must be available which permits Applications in the out-of-bounds namespace. A patch for this vulnerability has been released in versions 2.5.8 and 2.6.0-rc5. As a workaround, running only one replica of the Application controller will prevent exploitation of this bug. Making sure all AppProjects' sourceNamespaces are restricted within the confines of the configured Application namespaces will also prevent exploitation of this bug.",
    "publishedDate": "2023-01-26T21:18Z",
    "cvssScore": 8.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-23555",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:f5:big-ip_service_proxy:*:*:*:*:*:kubernetes:*:*",
    "description": "On BIG-IP Virtual Edition versions 15.1x beginning in 15.1.4 to before 15.1.8 and 14.1.x beginning in 14.1.5 to before 14.1.5.3, and BIG-IP SPK beginning in 1.5.0 to before 1.6.0, when FastL4 profile is configured on a virtual server, undisclosed traffic can cause the Traffic Management Microkernel (TMM) to terminate.  Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n",
    "publishedDate": "2023-02-01T18:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-2431",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubelet that allows pods to bypass the seccomp profile enforcement. Pods that use localhost type for seccomp profile but specify an empty profile field, are affected by this issue. In this scenario, this vulnerability allows the pod to run in unconfined (seccomp disabled) mode. This bug affects Kubelet.",
    "publishedDate": "2023-06-16T08:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-2431",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubelet that allows pods to bypass the seccomp profile enforcement. Pods that use localhost type for seccomp profile but specify an empty profile field, are affected by this issue. In this scenario, this vulnerability allows the pod to run in unconfined (seccomp disabled) mode. This bug affects Kubelet.",
    "publishedDate": "2023-06-16T08:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-2431",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubelet that allows pods to bypass the seccomp profile enforcement. Pods that use localhost type for seccomp profile but specify an empty profile field, are affected by this issue. In this scenario, this vulnerability allows the pod to run in unconfined (seccomp disabled) mode. This bug affects Kubelet.",
    "publishedDate": "2023-06-16T08:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-2431",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubelet that allows pods to bypass the seccomp profile enforcement. Pods that use localhost type for seccomp profile but specify an empty profile field, are affected by this issue. In this scenario, this vulnerability allows the pod to run in unconfined (seccomp disabled) mode. This bug affects Kubelet.",
    "publishedDate": "2023-06-16T08:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-24425",
    "technology": "kubernetes",
    "version": "128",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Jenkins Kubernetes Credentials Provider Plugin 1.208.v128ee9800c04 and earlier does not set the appropriate context for Kubernetes credentials lookup, allowing attackers with Item/Configure permission to access and potentially capture Kubernetes credentials they are not entitled to.",
    "publishedDate": "2023-01-26T21:18Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-24425",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:jenkins:kubernetes_credentials_provider:*:*:*:*:*:jenkins:*:*",
    "description": "Jenkins Kubernetes Credentials Provider Plugin 1.208.v128ee9800c04 and earlier does not set the appropriate context for Kubernetes credentials lookup, allowing attackers with Item/Configure permission to access and potentially capture Kubernetes credentials they are not entitled to.",
    "publishedDate": "2023-01-26T21:18Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-24594",
    "technology": "kubernetes",
    "version": "1.5.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:f5:big-ip_next_service_proxy_for_kubernetes:1.5.0:*:*:*:*:*:*:*",
    "description": "\nWhen an SSL profile is configured on a Virtual Server, undisclosed traffic can cause an increase in CPU or SSL accelerator resource utilization.  \n\nNote: Software versions which have reached End of Technical Support (EoTS) are not evaluated.",
    "publishedDate": "2023-05-03T15:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.5.0",
      "startExcluding": "1.5.0"
    }
  },
  {
    "cveId": "CVE-2023-25163",
    "technology": "kubernetes",
    "version": "2.6.0-rc1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of Argo CD starting with v2.6.0-rc1 have an output sanitization bug which leaks repository access credentials in error messages. These error messages are visible to the user, and they are logged. The error message is visible when a user attempts to create or update an Application via the Argo CD API (and therefor the UI or CLI). The user must have `applications, create` or `applications, update` RBAC access to reach the code which may produce the error. The user is not guaranteed to be able to trigger the error message. They may attempt to spam the API with requests to trigger a rate limit error from the upstream repository. If the user has `repositories, update` access, they may edit an existing repository to introduce a URL typo or otherwise force an error message. But if they have that level of access, they are probably intended to have access to the credentials anyway. A patch for this vulnerability has been released in version 2.6.1. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "publishedDate": "2023-02-08T21:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-25163",
    "technology": "kubernetes",
    "version": "2.6.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of Argo CD starting with v2.6.0-rc1 have an output sanitization bug which leaks repository access credentials in error messages. These error messages are visible to the user, and they are logged. The error message is visible when a user attempts to create or update an Application via the Argo CD API (and therefor the UI or CLI). The user must have `applications, create` or `applications, update` RBAC access to reach the code which may produce the error. The user is not guaranteed to be able to trigger the error message. They may attempt to spam the API with requests to trigger a rate limit error from the upstream repository. If the user has `repositories, update` access, they may edit an existing repository to introduce a URL typo or otherwise force an error message. But if they have that level of access, they are probably intended to have access to the credentials anyway. A patch for this vulnerability has been released in version 2.6.1. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "publishedDate": "2023-02-08T21:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-25165",
    "technology": "kubernetes",
    "version": "3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Helm is a tool that streamlines installing and managing Kubernetes applications.`getHostByName` is a Helm template function introduced in Helm v3. The function is able to accept a hostname and return an IP address for that hostname. To get the IP address the function performs a DNS lookup. The DNS lookup happens when used with `helm install|upgrade|template` or when the Helm SDK is used to render a chart. Information passed into the chart can be disclosed to the DNS servers used to lookup the IP address. For example, a malicious chart could inject `getHostByName` into a chart in order to disclose values to a malicious DNS server. The issue has been fixed in Helm 3.11.1. Prior to using a chart with Helm verify the `getHostByName` function is not being used in a template to disclose any information you do not want passed to DNS servers.",
    "publishedDate": "2023-02-08T20:15Z",
    "cvssScore": 4.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-26484",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubevirt:kubevirt:*:*:*:*:*:kubernetes:*:*",
    "description": "KubeVirt is a virtual machine management add-on for Kubernetes. In versions 0.59.0 and prior, if a malicious user has taken over a Kubernetes node where virt-handler (the KubeVirt node-daemon) is running, the virt-handler service account can be used to modify all node specs. This can be misused to lure-in system-level-privileged components which can, for instance, read all secrets on the cluster, or can exec into pods on other nodes. This way, a compromised node can be used to elevate privileges beyond the node until potentially having full privileged access to the whole cluster. The simplest way to exploit this, once a user could compromise a specific node, is to set with the virt-handler service account all other nodes to unschedulable and simply wait until system-critical components with high privileges appear on its node. No patches are available as of time of publication. As a workaround, gatekeeper users can add a webhook which will block the `virt-handler` service account to modify the spec of a node.",
    "publishedDate": "2023-03-15T21:15Z",
    "cvssScore": 8.2,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-2727",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Users may be able to launch containers using images that are restricted by ImagePolicyWebhook when using ephemeral containers. Kubernetes clusters are only affected if the ImagePolicyWebhook admission plugin is used together with ephemeral containers.",
    "publishedDate": "2023-07-03T21:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-2727",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Users may be able to launch containers using images that are restricted by ImagePolicyWebhook when using ephemeral containers. Kubernetes clusters are only affected if the ImagePolicyWebhook admission plugin is used together with ephemeral containers.",
    "publishedDate": "2023-07-03T21:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-2727",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Users may be able to launch containers using images that are restricted by ImagePolicyWebhook when using ephemeral containers. Kubernetes clusters are only affected if the ImagePolicyWebhook admission plugin is used together with ephemeral containers.",
    "publishedDate": "2023-07-03T21:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-2727",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Users may be able to launch containers using images that are restricted by ImagePolicyWebhook when using ephemeral containers. Kubernetes clusters are only affected if the ImagePolicyWebhook admission plugin is used together with ephemeral containers.",
    "publishedDate": "2023-07-03T21:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-2728",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Users may be able to launch containers that bypass the mountable secrets policy enforced by the ServiceAccount admission plugin when using ephemeral containers. The policy ensures pods running with a service account may only reference secrets specified in the service account’s secrets field. Kubernetes clusters are only affected if the ServiceAccount admission plugin and the `kubernetes.io/enforce-mountable-secrets` annotation are used together with ephemeral containers.",
    "publishedDate": "2023-07-03T21:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-2728",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Users may be able to launch containers that bypass the mountable secrets policy enforced by the ServiceAccount admission plugin when using ephemeral containers. The policy ensures pods running with a service account may only reference secrets specified in the service account’s secrets field. Kubernetes clusters are only affected if the ServiceAccount admission plugin and the `kubernetes.io/enforce-mountable-secrets` annotation are used together with ephemeral containers.",
    "publishedDate": "2023-07-03T21:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-2728",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Users may be able to launch containers that bypass the mountable secrets policy enforced by the ServiceAccount admission plugin when using ephemeral containers. The policy ensures pods running with a service account may only reference secrets specified in the service account’s secrets field. Kubernetes clusters are only affected if the ServiceAccount admission plugin and the `kubernetes.io/enforce-mountable-secrets` annotation are used together with ephemeral containers.",
    "publishedDate": "2023-07-03T21:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-2728",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Users may be able to launch containers that bypass the mountable secrets policy enforced by the ServiceAccount admission plugin when using ephemeral containers. The policy ensures pods running with a service account may only reference secrets specified in the service account’s secrets field. Kubernetes clusters are only affected if the ServiceAccount admission plugin and the `kubernetes.io/enforce-mountable-secrets` annotation are used together with ephemeral containers.",
    "publishedDate": "2023-07-03T21:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-27595",
    "technology": "kubernetes",
    "version": "1.13.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Cilium is a networking, observability, and security solution with an eBPF-based dataplane. In version 1.13.0, when Cilium is started, there is a short period when Cilium eBPF programs are not attached to the host. During this period, the host does not implement any of Cilium's featureset. This can cause disruption to newly established connections during this period due to the lack of Load Balancing, or can cause Network Policy bypass due to the lack of Network Policy enforcement during the window. This vulnerability impacts any Cilium-managed endpoints on the node (such as Kubernetes Pods), as well as the host network namespace (including Host Firewall). This vulnerability is fixed in Cilium 1.13.1 or later. Cilium releases 1.12.x, 1.11.x, and earlier are not affected. There are no known workarounds.",
    "publishedDate": "2023-03-17T22:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-28110",
    "technology": "kubernetes",
    "version": "2.28.8",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Jumpserver is a popular open source bastion host, and Koko is a Jumpserver component that is the Go version of coco, refactoring coco's SSH/SFTP service and Web Terminal service. Prior to version 2.28.8, using illegal tokens to connect to a Kubernetes cluster through Koko can result in the execution of dangerous commands that may disrupt the Koko container environment and affect normal usage. The vulnerability has been fixed in v2.28.8.",
    "publishedDate": "2023-03-16T17:15Z",
    "cvssScore": 9.9,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-28110",
    "technology": "kubernetes",
    "version": "2.28.8",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Jumpserver is a popular open source bastion host, and Koko is a Jumpserver component that is the Go version of coco, refactoring coco's SSH/SFTP service and Web Terminal service. Prior to version 2.28.8, using illegal tokens to connect to a Kubernetes cluster through Koko can result in the execution of dangerous commands that may disrupt the Koko container environment and affect normal usage. The vulnerability has been fixed in v2.28.8.",
    "publishedDate": "2023-03-16T17:15Z",
    "cvssScore": 9.9,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-28114",
    "technology": "kubernetes",
    "version": "0.13.2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "`cilium-cli` is the command line interface to install, manage, and troubleshoot Kubernetes clusters running Cilium. Prior to version 0.13.2,`cilium-cli`, when used to configure cluster mesh functionality, can remove the enforcement of user permissions on the `etcd` store used to mirror local cluster information to remote clusters. Users who have set up cluster meshes using the Cilium Helm chart are not affected by this issue.\n\nDue to an incorrect mount point specification, the settings specified by the `initContainer` that configures `etcd` users and their permissions are overwritten when using `cilium-cli` to configure a cluster mesh. An attacker who has already gained access to a valid key and certificate for an `etcd` cluster compromised in this manner could then modify state in that `etcd` cluster.\n\nThis issue is patched in `cilium-cli` 0.13.2. As a workaround, one may use Cilium's Helm charts to create their cluster.",
    "publishedDate": "2023-03-22T19:15Z",
    "cvssScore": 4.1,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-2878",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:secrets-store-csi-driver:*:*:*:*:*:*:*:*",
    "description": "Kubernetes secrets-store-csi-driver in versions before 1.3.3 discloses service account tokens in logs.",
    "publishedDate": "2023-06-07T15:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-29018",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linuxfoundation:openfeature:*:*:*:*:*:kubernetes:*:*",
    "description": "The OpenFeature Operator allows users to expose feature flags to applications. Assuming the pre-existence of a vulnerability that allows for arbitrary code execution, an attacker could leverage the lax permissions configured on `open-feature-operator-controller-manager` to escalate the privileges of any SA in the cluster. The increased privileges could be used to modify cluster state, leading to DoS, or read sensitive data, including secrets. Version 0.2.32 mitigates this issue by restricting the resources the `open-feature-operator-controller-manager` can modify.",
    "publishedDate": "2023-04-14T19:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-29332",
    "technology": "kubernetes",
    "version": "-",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:microsoft:azure_kubernetes_service:-:*:*:*:*:*:*:*",
    "description": "Microsoft Azure Kubernetes Service Elevation of Privilege Vulnerability",
    "publishedDate": "2023-09-12T17:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2023-3027",
    "technology": "kubernetes",
    "version": "2.6",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:redhat:advanced_cluster_management_for_kubernetes:2.6:*:*:*:*:*:*:*",
    "description": "The grc-policy-propagator allows security escalation within the cluster. The propagator allows policies which contain some dynamically obtained values (instead of the policy apply a static manifest on a managed cluster) of taking advantage of cluster scoped access in a created policy. This feature does not restrict properly to lookup content from the namespace where the policy was created.",
    "publishedDate": "2023-06-05T22:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.6",
      "startExcluding": "2.6"
    }
  },
  {
    "cveId": "CVE-2023-3027",
    "technology": "kubernetes",
    "version": "2.7",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:redhat:advanced_cluster_management_for_kubernetes:2.7:*:*:*:*:*:*:*",
    "description": "The grc-policy-propagator allows security escalation within the cluster. The propagator allows policies which contain some dynamically obtained values (instead of the policy apply a static manifest on a managed cluster) of taking advantage of cluster scoped access in a created policy. This feature does not restrict properly to lookup content from the namespace where the policy was created.",
    "publishedDate": "2023-06-05T22:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.7",
      "startExcluding": "2.7"
    }
  },
  {
    "cveId": "CVE-2023-3027",
    "technology": "kubernetes",
    "version": "2.5",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:redhat:advanced_cluster_management_for_kubernetes:2.5:*:*:*:*:*:*:*",
    "description": "The grc-policy-propagator allows security escalation within the cluster. The propagator allows policies which contain some dynamically obtained values (instead of the policy apply a static manifest on a managed cluster) of taking advantage of cluster scoped access in a created policy. This feature does not restrict properly to lookup content from the namespace where the policy was created.",
    "publishedDate": "2023-06-05T22:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.5",
      "startExcluding": "2.5"
    }
  },
  {
    "cveId": "CVE-2023-30513",
    "technology": "kubernetes",
    "version": "1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Jenkins Kubernetes Plugin 3909.v1f2c633e8590 and earlier does not properly mask (i.e., replace with asterisks) credentials in the build log when push mode for durable task logging is enabled.",
    "publishedDate": "2023-04-12T18:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-30513",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:jenkins:kubernetes:*:*:*:*:*:jenkins:*:*",
    "description": "Jenkins Kubernetes Plugin 3909.v1f2c633e8590 and earlier does not properly mask (i.e., replace with asterisks) credentials in the build log when push mode for durable task logging is enabled.",
    "publishedDate": "2023-04-12T18:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-30617",
    "technology": "kubernetes",
    "version": "0.8.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Kruise provides automated management of large-scale applications on Kubernetes. Starting in version 0.8.0 and prior to versions 1.3.1, 1.4.1, and 1.5.2, an attacker who has gained root privilege of the node that kruise-daemon run can leverage the kruise-daemon pod to list all secrets in the entire cluster. After that, the attacker can leverage the \"captured\" secrets (e.g. the kruise-manager service account token) to gain extra privileges such as pod modification. Versions 1.3.1, 1.4.1, and 1.5.2 fix this issue. A workaround is available. For users that do not require imagepulljob functions, they can modify kruise-daemon-role to drop the cluster level secret get/list privilege.",
    "publishedDate": "2024-01-03T16:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-30622",
    "technology": "kubernetes",
    "version": "0.15.2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Clusternet is a general-purpose system for controlling Kubernetes clusters across different environments. An issue in clusternet prior to version 0.15.2 can be leveraged to lead to a cluster-level privilege escalation. The clusternet has a deployment called `cluster-hub` inside the `clusternet-system` Kubernetes namespace, which runs on worker nodes randomly. The deployment has a service account called `clusternet-hub`, which has a cluster role called `clusternet:hub` via cluster role binding. The `clusternet:hub` cluster role has `\"*\" verbs of \"*.*\"` resources. Thus, if a malicious user can access the worker node which runs the clusternet, they can leverage the service account to do malicious actions to critical system resources. For example, the malicious user can leverage the service account to get ALL secrets in the entire cluster, resulting in cluster-level privilege escalation. Version 0.15.2 contains a fix for this issue.",
    "publishedDate": "2023-04-24T16:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-30622",
    "technology": "kubernetes",
    "version": "0.15.2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Clusternet is a general-purpose system for controlling Kubernetes clusters across different environments. An issue in clusternet prior to version 0.15.2 can be leveraged to lead to a cluster-level privilege escalation. The clusternet has a deployment called `cluster-hub` inside the `clusternet-system` Kubernetes namespace, which runs on worker nodes randomly. The deployment has a service account called `clusternet-hub`, which has a cluster role called `clusternet:hub` via cluster role binding. The `clusternet:hub` cluster role has `\"*\" verbs of \"*.*\"` resources. Thus, if a malicious user can access the worker node which runs the clusternet, they can leverage the service account to do malicious actions to critical system resources. For example, the malicious user can leverage the service account to get ALL secrets in the entire cluster, resulting in cluster-level privilege escalation. Version 0.15.2 contains a fix for this issue.",
    "publishedDate": "2023-04-24T16:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-30840",
    "technology": "kubernetes",
    "version": "0.7.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Fluid is an open source Kubernetes-native distributed dataset orchestrator and accelerator for data-intensive applications. Starting in version 0.7.0 and prior to version 0.8.6, if a malicious user gains control of a Kubernetes node running fluid csi pod (controlled by the `csi-nodeplugin-fluid` node-daemonset), they can leverage the fluid-csi service account to modify specs of all the nodes in the cluster. However, since this service account lacks `list node` permissions, the attacker may need to use other techniques to identify vulnerable nodes.\n\nOnce the attacker identifies and modifies the node specs, they can manipulate system-level-privileged components to access all secrets in the cluster or execute pods on other nodes. This allows them to elevate privileges beyond the compromised node and potentially gain full privileged access to the whole cluster.\n\nTo exploit this vulnerability, the attacker can make all other nodes unschedulable (for example, patch node with taints) and wait for system-critical components with high privilege to appear on the compromised node. However, this attack requires two prerequisites: a compromised node and identifying all vulnerable nodes through other means.\n\nVersion 0.8.6 contains a patch for this issue. As a workaround, delete the `csi-nodeplugin-fluid` daemonset in `fluid-system` namespace and avoid using CSI mode to mount FUSE file systems. Alternatively, using sidecar mode to mount FUSE file systems is recommended.",
    "publishedDate": "2023-05-08T18:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-30840",
    "technology": "kubernetes",
    "version": "0.8.6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Fluid is an open source Kubernetes-native distributed dataset orchestrator and accelerator for data-intensive applications. Starting in version 0.7.0 and prior to version 0.8.6, if a malicious user gains control of a Kubernetes node running fluid csi pod (controlled by the `csi-nodeplugin-fluid` node-daemonset), they can leverage the fluid-csi service account to modify specs of all the nodes in the cluster. However, since this service account lacks `list node` permissions, the attacker may need to use other techniques to identify vulnerable nodes.\n\nOnce the attacker identifies and modifies the node specs, they can manipulate system-level-privileged components to access all secrets in the cluster or execute pods on other nodes. This allows them to elevate privileges beyond the compromised node and potentially gain full privileged access to the whole cluster.\n\nTo exploit this vulnerability, the attacker can make all other nodes unschedulable (for example, patch node with taints) and wait for system-critical components with high privilege to appear on the compromised node. However, this attack requires two prerequisites: a compromised node and identifying all vulnerable nodes through other means.\n\nVersion 0.8.6 contains a patch for this issue. As a workaround, delete the `csi-nodeplugin-fluid` daemonset in `fluid-system` namespace and avoid using CSI mode to mount FUSE file systems. Alternatively, using sidecar mode to mount FUSE file systems is recommended.",
    "publishedDate": "2023-05-08T18:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-30840",
    "technology": "kubernetes",
    "version": "0.8.6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Fluid is an open source Kubernetes-native distributed dataset orchestrator and accelerator for data-intensive applications. Starting in version 0.7.0 and prior to version 0.8.6, if a malicious user gains control of a Kubernetes node running fluid csi pod (controlled by the `csi-nodeplugin-fluid` node-daemonset), they can leverage the fluid-csi service account to modify specs of all the nodes in the cluster. However, since this service account lacks `list node` permissions, the attacker may need to use other techniques to identify vulnerable nodes.\n\nOnce the attacker identifies and modifies the node specs, they can manipulate system-level-privileged components to access all secrets in the cluster or execute pods on other nodes. This allows them to elevate privileges beyond the compromised node and potentially gain full privileged access to the whole cluster.\n\nTo exploit this vulnerability, the attacker can make all other nodes unschedulable (for example, patch node with taints) and wait for system-critical components with high privilege to appear on the compromised node. However, this attack requires two prerequisites: a compromised node and identifying all vulnerable nodes through other means.\n\nVersion 0.8.6 contains a patch for this issue. As a workaround, delete the `csi-nodeplugin-fluid` daemonset in `fluid-system` namespace and avoid using CSI mode to mount FUSE file systems. Alternatively, using sidecar mode to mount FUSE file systems is recommended.",
    "publishedDate": "2023-05-08T18:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-30841",
    "technology": "kubernetes",
    "version": "0.3.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Baremetal Operator (BMO) is a bare metal host provisioning integration for Kubernetes. Prior to version 0.3.0, ironic and ironic-inspector deployed within Baremetal Operator using the included `deploy.sh` store their `.htpasswd` files as ConfigMaps instead of Secrets. This causes the plain-text username and hashed password to be readable by anyone having a cluster-wide read-access to the management cluster, or access to the management cluster's Etcd storage. This issue is patched in baremetal-operator PR#1241, and is included in BMO release 0.3.0 onwards. As a workaround, users may modify the kustomizations and redeploy the BMO, or recreate the required ConfigMaps as Secrets per instructions in baremetal-operator PR#1241.",
    "publishedDate": "2023-04-26T19:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-31416",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:elastic:elastic_cloud_on_kubernetes:*:*:*:*:*:*:*:*",
    "description": "Secret token configuration is never applied when using ECK \u003c2.8 with APM Server \u003e=8.0. This could lead to anonymous requests to an APM Server being accepted and the data ingested into this APM deployment.",
    "publishedDate": "2023-10-26T19:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2023-33190",
    "technology": "kubernetes",
    "version": "4.2.1-rc4.",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Sealos is an open source cloud operating system distribution based on the Kubernetes kernel. In versions of Sealos prior to 4.2.1-rc4 an improper configuration of role based access control (RBAC) permissions resulted in an attacker being able to obtain cluster control permissions, which could control the entire cluster deployed with Sealos, as well as hundreds of pods and other resources within the cluster. This issue has been addressed in version 4.2.1-rc4. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "publishedDate": "2023-06-29T19:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-33191",
    "technology": "kubernetes",
    "version": "1.9.4",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Kyverno is a policy engine designed for Kubernetes. Kyverno seccomp control can be circumvented. Users of the podSecurity `validate.podSecurity` subrule in Kyverno 1.9.2 and 1.9.3 are vulnerable. This issue was patched in version 1.9.4.",
    "publishedDate": "2023-05-30T07:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-33234",
    "technology": "kubernetes",
    "version": "5.0.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Arbitrary code execution in Apache Airflow CNCF Kubernetes provider version 5.0.0 allows user to change xcom sidecar image and resources via Airflow connection.\n\nIn order to exploit this weakness, a user would already need elevated permissions (Op or Admin) to change the connection object in this manner.  Operators should upgrade to provider version 7.0.0 which has removed the vulnerability.\n\n",
    "publishedDate": "2023-05-30T11:15Z",
    "cvssScore": 7.2,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-33234",
    "technology": "kubernetes",
    "version": "7.0.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Arbitrary code execution in Apache Airflow CNCF Kubernetes provider version 5.0.0 allows user to change xcom sidecar image and resources via Airflow connection.\n\nIn order to exploit this weakness, a user would already need elevated permissions (Op or Admin) to change the connection object in this manner.  Operators should upgrade to provider version 7.0.0 which has removed the vulnerability.\n\n",
    "publishedDate": "2023-05-30T11:15Z",
    "cvssScore": 7.2,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-33234",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:apache:airflow_cncf_kubernetes:*:*:*:*:*:*:*:*",
    "description": "Arbitrary code execution in Apache Airflow CNCF Kubernetes provider version 5.0.0 allows user to change xcom sidecar image and resources via Airflow connection.\n\nIn order to exploit this weakness, a user would already need elevated permissions (Op or Admin) to change the connection object in this manner.  Operators should upgrade to provider version 7.0.0 which has removed the vulnerability.\n\n",
    "publishedDate": "2023-05-30T11:15Z",
    "cvssScore": 7.2,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-34242",
    "technology": "kubernetes",
    "version": "1.13.4",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Cilium is a networking, observability, and security solution with an eBPF-based dataplane. Prior to version 1.13.4, when Gateway API is enabled in Cilium, the absence of a check on the namespace in which a ReferenceGrant is created could result in Cilium unintentionally gaining visibility of secrets (including certificates) and services across namespaces. An attacker on an affected cluster can leverage this issue to use cluster secrets that should not be visible to them, or communicate with services that they should not have access to. Gateway API functionality is disabled by default. This vulnerability is fixed in Cilium release 1.13.4. As a workaround, restrict the creation of `ReferenceGrant` resources to admin users by using Kubernetes RBAC.",
    "publishedDate": "2023-06-15T20:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-35165",
    "technology": "kubernetes",
    "version": "2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "AWS Cloud Development Kit (AWS CDK) is an open-source software development framework to define cloud infrastructure in code and provision it through AWS CloudFormation. In the packages `aws-cdk-lib` 2.0.0 until 2.80.0 and `@aws-cdk/aws-eks` 1.57.0 until 1.202.0, `eks.Cluster` and `eks.FargateCluster` constructs create two roles, `CreationRole` and `default MastersRole`, that have an overly permissive trust policy. \n \nThe first, referred to as the `CreationRole`, is used by lambda handlers to create the cluster and deploy Kubernetes resources (e.g `KubernetesManifest`, `HelmChart`, ...) onto it. Users with CDK version higher or equal to 1.62.0 (including v2 users) may be affected.\n \nThe second, referred to as the `default MastersRole`, is provisioned only if the `mastersRole` property isn't provided and has permissions to execute `kubectl` commands on the cluster. Users with CDK version higher or equal to 1.57.0 (including v2 users) may be affected.\n\nThe issue has been fixed in `@aws-cdk/aws-eks` v1.202.0 and `aws-cdk-lib` v2.80.0. These versions no longer use the account root principal. Instead, they restrict the trust policy to the specific roles of lambda handlers that need it. There is no workaround available for CreationRole. To avoid creating the `default MastersRole`, use the `mastersRole` property to explicitly provide a role.",
    "publishedDate": "2023-06-23T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-35165",
    "technology": "kubernetes",
    "version": "2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "AWS Cloud Development Kit (AWS CDK) is an open-source software development framework to define cloud infrastructure in code and provision it through AWS CloudFormation. In the packages `aws-cdk-lib` 2.0.0 until 2.80.0 and `@aws-cdk/aws-eks` 1.57.0 until 1.202.0, `eks.Cluster` and `eks.FargateCluster` constructs create two roles, `CreationRole` and `default MastersRole`, that have an overly permissive trust policy. \n \nThe first, referred to as the `CreationRole`, is used by lambda handlers to create the cluster and deploy Kubernetes resources (e.g `KubernetesManifest`, `HelmChart`, ...) onto it. Users with CDK version higher or equal to 1.62.0 (including v2 users) may be affected.\n \nThe second, referred to as the `default MastersRole`, is provisioned only if the `mastersRole` property isn't provided and has permissions to execute `kubectl` commands on the cluster. Users with CDK version higher or equal to 1.57.0 (including v2 users) may be affected.\n\nThe issue has been fixed in `@aws-cdk/aws-eks` v1.202.0 and `aws-cdk-lib` v2.80.0. These versions no longer use the account root principal. Instead, they restrict the trust policy to the specific roles of lambda handlers that need it. There is no workaround available for CreationRole. To avoid creating the `default MastersRole`, use the `mastersRole` property to explicitly provide a role.",
    "publishedDate": "2023-06-23T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-35165",
    "technology": "kubernetes",
    "version": "1.202.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "AWS Cloud Development Kit (AWS CDK) is an open-source software development framework to define cloud infrastructure in code and provision it through AWS CloudFormation. In the packages `aws-cdk-lib` 2.0.0 until 2.80.0 and `@aws-cdk/aws-eks` 1.57.0 until 1.202.0, `eks.Cluster` and `eks.FargateCluster` constructs create two roles, `CreationRole` and `default MastersRole`, that have an overly permissive trust policy. \n \nThe first, referred to as the `CreationRole`, is used by lambda handlers to create the cluster and deploy Kubernetes resources (e.g `KubernetesManifest`, `HelmChart`, ...) onto it. Users with CDK version higher or equal to 1.62.0 (including v2 users) may be affected.\n \nThe second, referred to as the `default MastersRole`, is provisioned only if the `mastersRole` property isn't provided and has permissions to execute `kubectl` commands on the cluster. Users with CDK version higher or equal to 1.57.0 (including v2 users) may be affected.\n\nThe issue has been fixed in `@aws-cdk/aws-eks` v1.202.0 and `aws-cdk-lib` v2.80.0. These versions no longer use the account root principal. Instead, they restrict the trust policy to the specific roles of lambda handlers that need it. There is no workaround available for CreationRole. To avoid creating the `default MastersRole`, use the `mastersRole` property to explicitly provide a role.",
    "publishedDate": "2023-06-23T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-35165",
    "technology": "kubernetes",
    "version": "2.80.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "AWS Cloud Development Kit (AWS CDK) is an open-source software development framework to define cloud infrastructure in code and provision it through AWS CloudFormation. In the packages `aws-cdk-lib` 2.0.0 until 2.80.0 and `@aws-cdk/aws-eks` 1.57.0 until 1.202.0, `eks.Cluster` and `eks.FargateCluster` constructs create two roles, `CreationRole` and `default MastersRole`, that have an overly permissive trust policy. \n \nThe first, referred to as the `CreationRole`, is used by lambda handlers to create the cluster and deploy Kubernetes resources (e.g `KubernetesManifest`, `HelmChart`, ...) onto it. Users with CDK version higher or equal to 1.62.0 (including v2 users) may be affected.\n \nThe second, referred to as the `default MastersRole`, is provisioned only if the `mastersRole` property isn't provided and has permissions to execute `kubectl` commands on the cluster. Users with CDK version higher or equal to 1.57.0 (including v2 users) may be affected.\n\nThe issue has been fixed in `@aws-cdk/aws-eks` v1.202.0 and `aws-cdk-lib` v2.80.0. These versions no longer use the account root principal. Instead, they restrict the trust policy to the specific roles of lambda handlers that need it. There is no workaround available for CreationRole. To avoid creating the `default MastersRole`, use the `mastersRole` property to explicitly provide a role.",
    "publishedDate": "2023-06-23T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-3676",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user\n that can create pods on Windows nodes may be able to escalate to admin \nprivileges on those nodes. Kubernetes clusters are only affected if they\n include Windows nodes.",
    "publishedDate": "2023-10-31T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2023-3676",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user\n that can create pods on Windows nodes may be able to escalate to admin \nprivileges on those nodes. Kubernetes clusters are only affected if they\n include Windows nodes.",
    "publishedDate": "2023-10-31T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2023-3676",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user\n that can create pods on Windows nodes may be able to escalate to admin \nprivileges on those nodes. Kubernetes clusters are only affected if they\n include Windows nodes.",
    "publishedDate": "2023-10-31T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2023-3676",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user\n that can create pods on Windows nodes may be able to escalate to admin \nprivileges on those nodes. Kubernetes clusters are only affected if they\n include Windows nodes.",
    "publishedDate": "2023-10-31T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2023-3676",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user\n that can create pods on Windows nodes may be able to escalate to admin \nprivileges on those nodes. Kubernetes clusters are only affected if they\n include Windows nodes.",
    "publishedDate": "2023-10-31T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2023-37916",
    "technology": "kubernetes",
    "version": "1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "KubePi is an opensource kubernetes management panel. The endpoint /kubepi/api/v1/users/search?pageNum=1\u0026\u0026pageSize=10 leak password hash of any user (including admin). A sufficiently motivated attacker may be able to crack leaded password hashes. This issue has been addressed in version 1.6.5. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "publishedDate": "2023-07-21T21:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-37916",
    "technology": "kubernetes",
    "version": "1.6.5",
    "vulnerable": false,
    "cpeUri": "",
    "description": "KubePi is an opensource kubernetes management panel. The endpoint /kubepi/api/v1/users/search?pageNum=1\u0026\u0026pageSize=10 leak password hash of any user (including admin). A sufficiently motivated attacker may be able to crack leaded password hashes. This issue has been addressed in version 1.6.5. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "publishedDate": "2023-07-21T21:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-37917",
    "technology": "kubernetes",
    "version": "1.6.5",
    "vulnerable": false,
    "cpeUri": "",
    "description": "KubePi is an opensource kubernetes management panel. A normal user has permission to create/update users, they can become admin by editing the `isadmin` value in the request. As a result any user may take administrative control of KubePi. This issue has been addressed in version 1.6.5. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "publishedDate": "2023-07-21T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-3893",
    "technology": "kubernetes",
    "version": "2.0.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:csi_proxy:2.0.0:alpha0:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user that can \ncreate pods on Windows nodes running kubernetes-csi-proxy may be able to\n escalate to admin privileges on those nodes. Kubernetes clusters are \nonly affected if they include Windows nodes running \nkubernetes-csi-proxy.",
    "publishedDate": "2023-11-03T18:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.0.0",
      "startExcluding": "2.0.0"
    }
  },
  {
    "cveId": "CVE-2023-3893",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:csi_proxy:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user that can \ncreate pods on Windows nodes running kubernetes-csi-proxy may be able to\n escalate to admin privileges on those nodes. Kubernetes clusters are \nonly affected if they include Windows nodes running \nkubernetes-csi-proxy.",
    "publishedDate": "2023-11-03T18:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-3955",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user\n that can create pods on Windows nodes may be able to escalate to admin \nprivileges on those nodes. Kubernetes clusters are only affected if they\n include Windows nodes.",
    "publishedDate": "2023-10-31T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2023-3955",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user\n that can create pods on Windows nodes may be able to escalate to admin \nprivileges on those nodes. Kubernetes clusters are only affected if they\n include Windows nodes.",
    "publishedDate": "2023-10-31T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2023-3955",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user\n that can create pods on Windows nodes may be able to escalate to admin \nprivileges on those nodes. Kubernetes clusters are only affected if they\n include Windows nodes.",
    "publishedDate": "2023-10-31T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2023-3955",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user\n that can create pods on Windows nodes may be able to escalate to admin \nprivileges on those nodes. Kubernetes clusters are only affected if they\n include Windows nodes.",
    "publishedDate": "2023-10-31T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2023-3955",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user\n that can create pods on Windows nodes may be able to escalate to admin \nprivileges on those nodes. Kubernetes clusters are only affected if they\n include Windows nodes.",
    "publishedDate": "2023-10-31T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2023-40025",
    "technology": "kubernetes",
    "version": "2.6.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of Argo CD starting from version 2.6.0 have a bug where open web terminal sessions do not expire. This bug allows users to send any websocket messages even if the token has already expired. The most straightforward scenario is when a user opens the terminal view and leaves it open for an extended period. This allows the user to view sensitive information even when they should have been logged out already. A patch for this vulnerability has been released in the following Argo CD versions: 2.6.14, 2.7.12 and 2.8.1.\n",
    "publishedDate": "2023-08-23T20:15Z",
    "cvssScore": 7.1,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-40026",
    "technology": "kubernetes",
    "version": "0.1.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative continuous deployment framework for Kubernetes. In Argo CD versions prior to 2.3 (starting at least in v0.1.0, but likely in any version using Helm before 2.3), using a specifically-crafted Helm file could reference external Helm charts handled by the same repo-server to leak values, or files from the referenced Helm Chart. This was possible because Helm paths were predictable. The vulnerability worked by adding a Helm chart that referenced Helm resources from predictable paths. Because the paths of Helm charts were predictable and available on an instance of repo-server, it was possible to reference and then render the values and resources from other existing Helm charts regardless of permissions. While generally, secrets are not stored in these files, it was nevertheless possible to reference any values from these charts. This issue was fixed in Argo CD 2.3 and subsequent versions by randomizing Helm paths. User's still using Argo CD 2.3 or below are advised to update to a supported version. If this is not possible, disabling Helm chart rendering, or using an additional repo-server for each Helm chart would prevent possible exploitation.",
    "publishedDate": "2023-09-27T21:15Z",
    "cvssScore": 4.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-40534",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:f5:big-ip_next_service_proxy_for_kubernetes:*:*:*:*:*:*:*:*",
    "description": "When a client-side HTTP/2 profile and the HTTP MRF Router option are enabled for a virtual server, and an iRule using the HTTP_REQUEST event or Local Traffic Policy are associated with the virtual server, undisclosed requests can cause TMM to terminate.  Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.",
    "publishedDate": "2023-10-10T13:15Z",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-40584",
    "technology": "kubernetes",
    "version": "2.4",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative continuous deployment for Kubernetes. All versions of ArgoCD starting from v2.4 have a bug where the ArgoCD repo-server component is vulnerable to a Denial-of-Service attack vector. Specifically, the said component extracts a user-controlled tar.gz file without validating the size of its inner files. As a result, a malicious, low-privileged user can send a malicious tar.gz file that exploits this vulnerability to the repo-server, thereby harming the system's functionality and availability. Additionally, the repo-server is susceptible to another vulnerability due to the fact that it does not check the extracted file permissions before attempting to delete them. Consequently, an attacker can craft a malicious tar.gz archive in a way that prevents the deletion of its inner files when the manifest generation process is completed. A patch for this vulnerability has been released in versions 2.6.15, 2.7.14, and 2.8.3. Users are advised to upgrade. The only way to completely resolve the issue is to upgrade, however users unable to upgrade should configure RBAC (Role-Based Access Control) and provide access for configuring applications only to a limited number of administrators. These administrators should utilize trusted and verified Helm charts.",
    "publishedDate": "2023-09-07T23:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-42813",
    "technology": "kubernetes",
    "version": "1.11.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Kyverno is a policy engine designed for Kubernetes. A security vulnerability was found in Kyverno where an attacker could cause denial of service of Kyverno. The vulnerable component in Kyvernos Notary verifier. An attacker would need control over the registry from which Kyverno would fetch attestations. With such a position, the attacker could return a malicious response to Kyverno, when Kyverno would send a request to the registry. The malicious response would cause denial of service of Kyverno, such that other users' admission requests would be blocked from being processed. This is a vulnerability in a new component released in v1.11.0. The only users affected by this are those that have been building Kyverno from source at the main branch which is not encouraged. Users consuming official Kyverno releases are not affected. There are no known cases of this vulnerability being exploited in the wild.",
    "publishedDate": "2023-11-13T21:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-42814",
    "technology": "kubernetes",
    "version": "1.11.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Kyverno is a policy engine designed for Kubernetes. A security vulnerability was found in Kyverno where an attacker could cause denial of service of Kyverno. The vulnerable component in Kyvernos Notary verifier. An attacker would need control over the registry from which Kyverno would fetch attestations. With such a position, the attacker could return a malicious response to Kyverno, when Kyverno would send a request to the registry. The malicious response would cause denial of service of Kyverno, such that other users' admission requests would be blocked from being processed. This is a vulnerability in a new component released in v1.11.0. The only users affected by this are those that have been building Kyverno from source at the main branch which is not encouraged. Users consuming official Kyverno releases are not affected. There are no known cases of this vulnerability being exploited in the wild.\n",
    "publishedDate": "2023-11-13T21:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-42815",
    "technology": "kubernetes",
    "version": "1.11.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Kyverno is a policy engine designed for Kubernetes. A security vulnerability was found in Kyverno where an attacker could cause denial of service of Kyverno. The vulnerability was in Kyvernos Notary verifier. An attacker would need control over the registry from which Kyverno would fetch signatures. With such a position, the attacker could return a malicious response to Kyverno, when Kyverno would send a request to the registry. The malicious response would cause denial of service of Kyverno, such that other users' admission requests would be blocked from being processed. This is a vulnerability in a new component released in v1.11.0. The only users affected by this are those that have been building Kyverno from source at the main branch which is not encouraged. Users consuming official Kyverno releases are not affected. There are no known cases of this vulnerability being exploited in the wild.",
    "publishedDate": "2023-11-13T21:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-42816",
    "technology": "kubernetes",
    "version": "1.11.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Kyverno is a policy engine designed for Kubernetes. A security vulnerability was found in Kyverno where an attacker could cause denial of service of Kyverno. The vulnerability was in Kyvernos Notary verifier. An attacker would need control over the registry from which Kyverno would fetch signatures. With such a position, the attacker could return a malicious response to Kyverno, when Kyverno would send a request to the registry. The malicious response would cause denial of service of Kyverno, such that other users' admission requests would be blocked from being processed. This is a vulnerability in a new component released in v1.11.0. The only users affected by this are those that have been building Kyverno from source at the main branch which is not encouraged. Users consuming official Kyverno releases are not affected. There are no known cases of this vulnerability being exploited in the wild.",
    "publishedDate": "2023-11-13T21:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-44392",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:garden:garden:*:*:*:*:*:kubernetes:*:*",
    "description": "Garden provides automation for Kubernetes development and testing. Prior tov ersions 0.13.17 and 0.12.65, Garden has a dependency on the cryo library, which is vulnerable to code injection due to an insecure implementation of deserialization. Garden stores serialized objects using cryo in the Kubernetes `ConfigMap` resources prefixed with `test-result` and `run-result` to cache Garden test and run results. These `ConfigMaps` are stored either in the `garden-system` namespace or the configured user namespace. When a user invokes the command `garden test` or `garden run` objects stored in the `ConfigMap` are retrieved and deserialized. This can be used by an attacker with access to the Kubernetes cluster to store malicious objects in the `ConfigMap`, which can trigger a remote code execution on the users machine when cryo deserializes the object. In order to exploit this vulnerability, an attacker must have access to the Kubernetes cluster used to deploy garden remote environments. Further, a user must actively invoke either a `garden test` or `garden run` which has previously cached results. The issue has been patched in Garden versions `0.13.17` (Bonsai) and `0.12.65` (Acorn). Only Garden versions prior to these are vulnerable. No known workarounds are available.",
    "publishedDate": "2023-10-09T20:15Z",
    "cvssScore": 9,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-44392",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:garden:garden:*:*:*:*:*:kubernetes:*:*",
    "description": "Garden provides automation for Kubernetes development and testing. Prior tov ersions 0.13.17 and 0.12.65, Garden has a dependency on the cryo library, which is vulnerable to code injection due to an insecure implementation of deserialization. Garden stores serialized objects using cryo in the Kubernetes `ConfigMap` resources prefixed with `test-result` and `run-result` to cache Garden test and run results. These `ConfigMaps` are stored either in the `garden-system` namespace or the configured user namespace. When a user invokes the command `garden test` or `garden run` objects stored in the `ConfigMap` are retrieved and deserialized. This can be used by an attacker with access to the Kubernetes cluster to store malicious objects in the `ConfigMap`, which can trigger a remote code execution on the users machine when cryo deserializes the object. In order to exploit this vulnerability, an attacker must have access to the Kubernetes cluster used to deploy garden remote environments. Further, a user must actively invoke either a `garden test` or `garden run` which has previously cached results. The issue has been patched in Garden versions `0.13.17` (Bonsai) and `0.12.65` (Acorn). Only Garden versions prior to these are vulnerable. No known workarounds are available.",
    "publishedDate": "2023-10-09T20:15Z",
    "cvssScore": 9,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-44487",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:f5:big-ip_next_service_proxy_for_kubernetes:*:*:*:*:*:*:*:*",
    "description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
    "publishedDate": "2023-10-10T14:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-44487",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:microsoft:azure_kubernetes_service:*:*:*:*:*:*:*:*",
    "description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
    "publishedDate": "2023-10-10T14:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-44487",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:projectcontour:contour:*:*:*:*:*:kubernetes:*:*",
    "description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
    "publishedDate": "2023-10-10T14:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-44487",
    "technology": "kubernetes",
    "version": "2.13.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linkerd:linkerd:2.13.0:*:*:*:stable:kubernetes:*:*",
    "description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
    "publishedDate": "2023-10-10T14:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.13.0",
      "startExcluding": "2.13.0"
    }
  },
  {
    "cveId": "CVE-2023-44487",
    "technology": "kubernetes",
    "version": "2.13.1",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linkerd:linkerd:2.13.1:*:*:*:stable:kubernetes:*:*",
    "description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
    "publishedDate": "2023-10-10T14:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.13.1",
      "startExcluding": "2.13.1"
    }
  },
  {
    "cveId": "CVE-2023-44487",
    "technology": "kubernetes",
    "version": "2.14.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linkerd:linkerd:2.14.0:*:*:*:stable:kubernetes:*:*",
    "description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
    "publishedDate": "2023-10-10T14:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.14.0",
      "startExcluding": "2.14.0"
    }
  },
  {
    "cveId": "CVE-2023-44487",
    "technology": "kubernetes",
    "version": "2.14.1",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linkerd:linkerd:2.14.1:*:*:*:stable:kubernetes:*:*",
    "description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
    "publishedDate": "2023-10-10T14:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.14.1",
      "startExcluding": "2.14.1"
    }
  },
  {
    "cveId": "CVE-2023-44487",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:linkerd:linkerd:*:*:*:*:stable:kubernetes:*:*",
    "description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
    "publishedDate": "2023-10-10T14:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-44487",
    "technology": "kubernetes",
    "version": "2.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:redhat:advanced_cluster_management_for_kubernetes:2.0:*:*:*:*:*:*:*",
    "description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
    "publishedDate": "2023-10-10T14:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.0",
      "startExcluding": "2.0"
    }
  },
  {
    "cveId": "CVE-2023-45226",
    "technology": "kubernetes",
    "version": "1.5.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:f5:big-ip_next_service_proxy_for_kubernetes:1.5.0:*:*:*:*:*:*:*",
    "description": "\nThe BIG-IP SPK TMM (Traffic Management Module) f5-debug-sidecar and f5-debug-sshd containers contains hardcoded credentials that may allow an attacker with the ability to intercept traffic to impersonate the SPK Secure Shell (SSH) server on those containers. This is only exposed when ssh debug is enabled.  Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated",
    "publishedDate": "2023-10-10T13:15Z",
    "cvssScore": 7.4,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.5.0",
      "startExcluding": "1.5.0"
    }
  },
  {
    "cveId": "CVE-2023-45886",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:f5:big-ip_next_service_proxy_for_kubernetes:*:*:*:*:*:*:*:*",
    "description": "The BGP daemon (bgpd) in IP Infusion ZebOS through 7.10.6 allow remote attackers to cause a denial of service by sending crafted BGP update messages containing a malformed attribute.",
    "publishedDate": "2023-11-21T06:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-46254",
    "technology": "kubernetes",
    "version": "0.4.5",
    "vulnerable": false,
    "cpeUri": "",
    "description": "capsule-proxy is a reverse proxy for Capsule kubernetes multi-tenancy framework. A bug in the RoleBinding reflector used by `capsule-proxy` gives ServiceAccount tenant owners the right to list Namespaces of other tenants backed by the same owner kind and name. For example consider two tenants `solar` and `wind`. Tenant `solar`, owned by a ServiceAccount named `tenant-owner` in the Namespace `solar`. Tenant `wind`, owned by a ServiceAccount named `tenant-owner` in the Namespace `wind`. The Tenant owner `solar` would be able to list the namespaces of the Tenant `wind` and vice-versa, although this is not correct. The bug introduces an exfiltration vulnerability since allows the listing of Namespace resources of other Tenants, although just in some specific conditions: 1. `capsule-proxy` runs with the `--disable-caching=false` (default value: `false`) and 2. Tenant owners are ServiceAccount, with the same resource name, but in different Namespaces. This vulnerability doesn't allow any privilege escalation on the outer tenant Namespace-scoped resources, since the Kubernetes RBAC is enforcing this. This issue has been addressed in version 0.4.5. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "publishedDate": "2023-11-06T19:15Z",
    "cvssScore": 4.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-48312",
    "technology": "kubernetes",
    "version": "0.4.6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "capsule-proxy is a reverse proxy for the capsule operator project. Affected versions are subject to a privilege escalation vulnerability which is based on a missing check if the user is authenticated based on the `TokenReview` result. All the clusters running with the `anonymous-auth` Kubernetes API Server setting disable (set to `false`) are affected since it would be possible to bypass the token review mechanism, interacting with the upper Kubernetes API Server. This privilege escalation cannot be exploited if you're relying only on client certificates (SSL/TLS). This vulnerability has been addressed in version 0.4.6. Users are advised to upgrade.",
    "publishedDate": "2023-11-24T18:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-48713",
    "technology": "kubernetes",
    "version": "0.39.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Knative Serving builds on Kubernetes to support deploying and serving of applications and functions as serverless containers. An attacker who controls a pod to a degree where they can control the responses from the /metrics endpoint can cause Denial-of-Service of the autoscaler from an unbound memory allocation bug. This is a DoS vulnerability, where a non-privileged Knative user can cause a DoS for the cluster. This issue has been patched in version 0.39.0.",
    "publishedDate": "2023-11-28T04:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-5043",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:ingress-nginx:*:*:*:*:*:*:*:*",
    "description": "Ingress nginx annotation injection causes arbitrary command execution.",
    "publishedDate": "2023-10-25T20:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-5044",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:ingress-nginx:*:*:*:*:*:*:*:*",
    "description": "Code injection via nginx.ingress.kubernetes.io/permanent-redirect annotation.",
    "publishedDate": "2023-10-25T20:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-51699",
    "technology": "kubernetes",
    "version": "0.9.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Fluid is an open source Kubernetes-native Distributed Dataset Orchestrator and Accelerator for data-intensive applications. An OS command injection vulnerability within the Fluid project's JuicefsRuntime can potentially allow an authenticated user, who has the authority to create or update the K8s CRD Dataset/JuicefsRuntime, to execute arbitrary OS commands within the juicefs related containers. This could lead to unauthorized access, modification or deletion of data. Users who're using versions \u003c 0.9.3 with JuicefsRuntime should upgrade to v0.9.3.",
    "publishedDate": "2024-03-15T19:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-51702",
    "technology": "kubernetes",
    "version": "5.2.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Since version 5.2.0, when using deferrable mode with the path of a Kubernetes configuration file for authentication, the Airflow worker serializes this configuration file as a dictionary and sends it to the triggerer by storing it in metadata without any encryption. Additionally, if used with an Airflow version between 2.3.0 and 2.6.0, the configuration dictionary will be logged as plain text in the triggerer service without masking. This allows anyone with access to the metadata or triggerer log to obtain the configuration file and use it to access the Kubernetes cluster.\n\nThis behavior was changed in version 7.0.0, which stopped serializing the file contents and started providing the file path instead to read the contents into the trigger. Users are recommended to upgrade to version 7.0.0, which fixes this issue.",
    "publishedDate": "2024-01-24T13:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-51702",
    "technology": "kubernetes",
    "version": "7.0.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Since version 5.2.0, when using deferrable mode with the path of a Kubernetes configuration file for authentication, the Airflow worker serializes this configuration file as a dictionary and sends it to the triggerer by storing it in metadata without any encryption. Additionally, if used with an Airflow version between 2.3.0 and 2.6.0, the configuration dictionary will be logged as plain text in the triggerer service without masking. This allows anyone with access to the metadata or triggerer log to obtain the configuration file and use it to access the Kubernetes cluster.\n\nThis behavior was changed in version 7.0.0, which stopped serializing the file contents and started providing the file path instead to read the contents into the trigger. Users are recommended to upgrade to version 7.0.0, which fixes this issue.",
    "publishedDate": "2024-01-24T13:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-51702",
    "technology": "kubernetes",
    "version": "7.0.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Since version 5.2.0, when using deferrable mode with the path of a Kubernetes configuration file for authentication, the Airflow worker serializes this configuration file as a dictionary and sends it to the triggerer by storing it in metadata without any encryption. Additionally, if used with an Airflow version between 2.3.0 and 2.6.0, the configuration dictionary will be logged as plain text in the triggerer service without masking. This allows anyone with access to the metadata or triggerer log to obtain the configuration file and use it to access the Kubernetes cluster.\n\nThis behavior was changed in version 7.0.0, which stopped serializing the file contents and started providing the file path instead to read the contents into the trigger. Users are recommended to upgrade to version 7.0.0, which fixes this issue.",
    "publishedDate": "2024-01-24T13:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-51702",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:apache:airflow_cncf_kubernetes:*:*:*:*:*:*:*:*",
    "description": "Since version 5.2.0, when using deferrable mode with the path of a Kubernetes configuration file for authentication, the Airflow worker serializes this configuration file as a dictionary and sends it to the triggerer by storing it in metadata without any encryption. Additionally, if used with an Airflow version between 2.3.0 and 2.6.0, the configuration dictionary will be logged as plain text in the triggerer service without masking. This allows anyone with access to the metadata or triggerer log to obtain the configuration file and use it to access the Kubernetes cluster.\n\nThis behavior was changed in version 7.0.0, which stopped serializing the file contents and started providing the file path instead to read the contents into the trigger. Users are recommended to upgrade to version 7.0.0, which fixes this issue.",
    "publishedDate": "2024-01-24T13:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-5528",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user that can create pods and persistent volumes on Windows nodes may be able to escalate to admin privileges on those nodes. Kubernetes clusters are only affected if they are using an in-tree storage plugin for Windows nodes.",
    "publishedDate": "2023-11-14T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2023-5528",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user that can create pods and persistent volumes on Windows nodes may be able to escalate to admin privileges on those nodes. Kubernetes clusters are only affected if they are using an in-tree storage plugin for Windows nodes.",
    "publishedDate": "2023-11-14T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2023-5528",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user that can create pods and persistent volumes on Windows nodes may be able to escalate to admin privileges on those nodes. Kubernetes clusters are only affected if they are using an in-tree storage plugin for Windows nodes.",
    "publishedDate": "2023-11-14T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2023-5528",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user that can create pods and persistent volumes on Windows nodes may be able to escalate to admin privileges on those nodes. Kubernetes clusters are only affected if they are using an in-tree storage plugin for Windows nodes.",
    "publishedDate": "2023-11-14T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2022-0270",
    "technology": "kubernetes",
    "version": "0.6.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Prior to v0.6.1, bored-agent failed to sanitize incoming kubernetes impersonation headers allowing a user to override assigned user name and groups.",
    "publishedDate": "2022-01-25T20:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-0532",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:cri-o:*:*:*:*:*:*:*:*",
    "description": "An incorrect sysctls validation vulnerability was found in CRI-O 1.18 and earlier. The sysctls from the list of \"safe\" sysctls specified for the cluster will be applied to the host if an attacker is able to create a pod with a hostIPC and hostNetwork kernel namespace.",
    "publishedDate": "2022-02-09T23:15Z",
    "cvssScore": 4.2,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-0567",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ovn:ovn-kubernetes:*:*:*:*:*:*:*:*",
    "description": "A flaw was found in ovn-kubernetes. This flaw allows a system administrator or privileged attacker to create an egress network policy that bypasses existing ingress policies of other pods in a cluster, allowing network traffic to access pods that should not be reachable. This issue results in information disclosure and other attacks on other pods that should not be reachable.",
    "publishedDate": "2022-04-20T16:15Z",
    "cvssScore": 9.1,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-0567",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ovn:ovn-kubernetes:*:*:*:*:*:*:*:*",
    "description": "A flaw was found in ovn-kubernetes. This flaw allows a system administrator or privileged attacker to create an egress network policy that bypasses existing ingress policies of other pods in a cluster, allowing network traffic to access pods that should not be reachable. This issue results in information disclosure and other attacks on other pods that should not be reachable.",
    "publishedDate": "2022-04-20T16:15Z",
    "cvssScore": 9.1,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-0567",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ovn:ovn-kubernetes:*:*:*:*:*:*:*:*",
    "description": "A flaw was found in ovn-kubernetes. This flaw allows a system administrator or privileged attacker to create an egress network policy that bypasses existing ingress policies of other pods in a cluster, allowing network traffic to access pods that should not be reachable. This issue results in information disclosure and other attacks on other pods that should not be reachable.",
    "publishedDate": "2022-04-20T16:15Z",
    "cvssScore": 9.1,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-0567",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ovn:ovn-kubernetes:*:*:*:*:*:*:*:*",
    "description": "A flaw was found in ovn-kubernetes. This flaw allows a system administrator or privileged attacker to create an egress network policy that bypasses existing ingress policies of other pods in a cluster, allowing network traffic to access pods that should not be reachable. This issue results in information disclosure and other attacks on other pods that should not be reachable.",
    "publishedDate": "2022-04-20T16:15Z",
    "cvssScore": 9.1,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-0759",
    "technology": "kubernetes",
    "version": "4.9.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "A flaw was found in all versions of kubeclient up to (but not including) v4.9.3, the Ruby client for Kubernetes REST API, in the way it parsed kubeconfig files. When the kubeconfig file does not configure custom CA to verify certs, kubeclient ends up accepting any certificate (it wrongly returns VERIFY_NONE). Ruby applications that leverage kubeclient to parse kubeconfig files are susceptible to Man-in-the-middle attacks (MITM).",
    "publishedDate": "2022-03-25T19:15Z",
    "cvssScore": 8.1,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-0811",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:cri-o:*:*:*:*:*:*:*:*",
    "description": "A flaw was found in CRI-O in the way it set kernel options for a pod. This issue allows anyone with rights to deploy a pod on a Kubernetes cluster that uses the CRI-O runtime to achieve a container escape and arbitrary code execution as root on the cluster node, where the malicious pod was deployed.",
    "publishedDate": "2022-03-16T15:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-0811",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:cri-o:*:*:*:*:*:*:*:*",
    "description": "A flaw was found in CRI-O in the way it set kernel options for a pod. This issue allows anyone with rights to deploy a pod on a Kubernetes cluster that uses the CRI-O runtime to achieve a container escape and arbitrary code execution as root on the cluster node, where the malicious pod was deployed.",
    "publishedDate": "2022-03-16T15:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-0811",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:cri-o:*:*:*:*:*:*:*:*",
    "description": "A flaw was found in CRI-O in the way it set kernel options for a pod. This issue allows anyone with rights to deploy a pod on a Kubernetes cluster that uses the CRI-O runtime to achieve a container escape and arbitrary code execution as root on the cluster node, where the malicious pod was deployed.",
    "publishedDate": "2022-03-16T15:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-0811",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:cri-o:*:*:*:*:*:*:*:*",
    "description": "A flaw was found in CRI-O in the way it set kernel options for a pod. This issue allows anyone with rights to deploy a pod on a Kubernetes cluster that uses the CRI-O runtime to achieve a container escape and arbitrary code execution as root on the cluster node, where the malicious pod was deployed.",
    "publishedDate": "2022-03-16T15:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-0811",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:cri-o:*:*:*:*:*:*:*:*",
    "description": "A flaw was found in CRI-O in the way it set kernel options for a pod. This issue allows anyone with rights to deploy a pod on a Kubernetes cluster that uses the CRI-O runtime to achieve a container escape and arbitrary code execution as root on the cluster node, where the malicious pod was deployed.",
    "publishedDate": "2022-03-16T15:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-1708",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:cri-o:*:*:*:*:*:*:*:*",
    "description": "A vulnerability was found in CRI-O that causes memory or disk space exhaustion on the node for anyone with access to the Kube API. The ExecSync request runs commands in a container and logs the output of the command. This output is then read by CRI-O after command execution, and it is read in a manner where the entire file corresponding to the output of the command is read in. Thus, if the output of the command is large it is possible to exhaust the memory or the disk space of the node when CRI-O reads the output of the command. The highest threat from this vulnerability is system availability.",
    "publishedDate": "2022-06-07T18:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-1708",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:cri-o:*:*:*:*:*:*:*:*",
    "description": "A vulnerability was found in CRI-O that causes memory or disk space exhaustion on the node for anyone with access to the Kube API. The ExecSync request runs commands in a container and logs the output of the command. This output is then read by CRI-O after command execution, and it is read in a manner where the entire file corresponding to the output of the command is read in. Thus, if the output of the command is large it is possible to exhaust the memory or the disk space of the node when CRI-O reads the output of the command. The highest threat from this vulnerability is system availability.",
    "publishedDate": "2022-06-07T18:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-1708",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:cri-o:*:*:*:*:*:*:*:*",
    "description": "A vulnerability was found in CRI-O that causes memory or disk space exhaustion on the node for anyone with access to the Kube API. The ExecSync request runs commands in a container and logs the output of the command. This output is then read by CRI-O after command execution, and it is read in a manner where the entire file corresponding to the output of the command is read in. Thus, if the output of the command is large it is possible to exhaust the memory or the disk space of the node when CRI-O reads the output of the command. The highest threat from this vulnerability is system availability.",
    "publishedDate": "2022-06-07T18:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-1708",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:cri-o:*:*:*:*:*:*:*:*",
    "description": "A vulnerability was found in CRI-O that causes memory or disk space exhaustion on the node for anyone with access to the Kube API. The ExecSync request runs commands in a container and logs the output of the command. This output is then read by CRI-O after command execution, and it is read in a manner where the entire file corresponding to the output of the command is read in. Thus, if the output of the command is large it is possible to exhaust the memory or the disk space of the node when CRI-O reads the output of the command. The highest threat from this vulnerability is system availability.",
    "publishedDate": "2022-06-07T18:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-1708",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:cri-o:*:*:*:*:*:*:*:*",
    "description": "A vulnerability was found in CRI-O that causes memory or disk space exhaustion on the node for anyone with access to the Kube API. The ExecSync request runs commands in a container and logs the output of the command. This output is then read by CRI-O after command execution, and it is read in a manner where the entire file corresponding to the output of the command is read in. Thus, if the output of the command is large it is possible to exhaust the memory or the disk space of the node when CRI-O reads the output of the command. The highest threat from this vulnerability is system availability.",
    "publishedDate": "2022-06-07T18:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-1708",
    "technology": "kubernetes",
    "version": "1.24.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:cri-o:1.24.0:*:*:*:*:*:*:*",
    "description": "A vulnerability was found in CRI-O that causes memory or disk space exhaustion on the node for anyone with access to the Kube API. The ExecSync request runs commands in a container and logs the output of the command. This output is then read by CRI-O after command execution, and it is read in a manner where the entire file corresponding to the output of the command is read in. Thus, if the output of the command is large it is possible to exhaust the memory or the disk space of the node when CRI-O reads the output of the command. The highest threat from this vulnerability is system availability.",
    "publishedDate": "2022-06-07T18:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.24.0",
      "startExcluding": "1.24.0"
    }
  },
  {
    "cveId": "CVE-2022-1798",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubevirt:kubevirt:*:*:*:*:*:kubernetes:*:*",
    "description": "A path traversal vulnerability in KubeVirt versions up to 0.56 (and 0.55.1) on all platforms allows a user able to configure the kubevirt to read arbitrary files on the host filesystem which are publicly readable or which are readable for UID 107 or GID 107. /proc/self/\u003c\u003e is not accessible.",
    "publishedDate": "2022-09-15T16:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-2238",
    "technology": "kubernetes",
    "version": "2.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:redhat:advanced_cluster_management_for_kubernetes:2.0:*:*:*:*:*:*:*",
    "description": "A vulnerability was found in the search-api container in Red Hat Advanced Cluster Management for Kubernetes when a query in the search filter gets parsed by the backend. This flaw allows an attacker to craft specific strings containing special characters that lead to crashing the pod and affects system availability while restarting.",
    "publishedDate": "2022-09-01T21:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.0",
      "startExcluding": "2.0"
    }
  },
  {
    "cveId": "CVE-2022-22472",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:spectrum_protect_plus_container_backup_and_restore:*:*:*:*:*:kubernetes:*:*",
    "description": "IBM Spectrum Protect Plus Container Backup and Restore (10.1.5 through 10.1.10.2 for Kubernetes and 10.1.7 through 10.1.10.2 for Red Hat OpenShift) could allow a remote attacker to bypass IBM Spectrum Protect Plus role based access control restrictions, caused by improper disclosure of session information. By retrieving the logs of a container an attacker could exploit this vulnerability to bypass login security of the IBM Spectrum Protect Plus server and gain unauthorized access based on the permissions of the IBM Spectrum Protect Plus user to the vulnerable Spectrum Protect Plus server software. IBM X-Force ID: 225340.",
    "publishedDate": "2022-06-30T17:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2022-23508",
    "technology": "kubernetes",
    "version": "0.12.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Weave GitOps is a simple open source developer platform for people who want cloud native applications, without needing Kubernetes expertise.  A vulnerability in GitOps run could allow a local user or process to alter a Kubernetes cluster's resources. GitOps run has a local S3 bucket which it uses for synchronizing files that are later applied against a Kubernetes cluster. Its endpoint had no security controls to block unauthorized access, therefore allowing local users (and processes) on the same machine to see and alter the bucket content. By leveraging this vulnerability, an attacker could pick a workload of their choosing and inject it into the S3 bucket, which resulted in the successful deployment in the target cluster, without the need to provide any credentials to either the S3 bucket nor the target Kubernetes cluster. There are no known workarounds for this issue, please upgrade. This vulnerability has been fixed by commits 75268c4 and 966823b. Users should upgrade to Weave GitOps version \u003e= v0.12.0 released on 08/12/2022.\n\n### Workarounds\nThere is no workaround for this vulnerability.\n\n### References\nDisclosed by Paulo Gomes, Senior Software Engineer, Weaveworks.\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [Weave GitOps repository](https://github.com/weaveworks/weave-gitops)\n- Email us at [support@weave.works](mailto:support@weave.works)\n",
    "publishedDate": "2023-01-09T13:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-23509",
    "technology": "kubernetes",
    "version": "0.12.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Weave GitOps is a simple open source developer platform for people who want cloud native applications, without needing Kubernetes expertise. GitOps run has a local S3 bucket which it uses for synchronizing files that are later applied against a Kubernetes cluster. The communication between GitOps Run and the local S3 bucket is not encrypted. This allows privileged users or process to tap the local traffic to gain information permitting access to the s3 bucket. From that point, it would be possible to alter the bucket content, resulting in changes in the Kubernetes cluster's resources. There are no known workaround(s) for this vulnerability. This vulnerability has been fixed by commits ce2bbff and babd915. Users should upgrade to Weave GitOps version \u003e= v0.12.0 released on 08/12/2022.\n",
    "publishedDate": "2023-01-09T14:15Z",
    "cvssScore": 6,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-23551",
    "technology": "kubernetes",
    "version": "1.8.13",
    "vulnerable": false,
    "cpeUri": "",
    "description": "aad-pod-identity assigns Azure Active Directory identities to Kubernetes applications and has now been deprecated as of 24 October 2022. The NMI component in AAD Pod Identity intercepts and validates token requests based on regex. In this case, a token request made with backslash in the request (example: `/metadata/identity\\oauth2\\token/`) would bypass the NMI validation and be sent to IMDS allowing a pod in the cluster to access identities that it shouldn't have access to. This issue has been fixed and has been included in AAD Pod Identity release version 1.8.13. If using the AKS pod-managed identities add-on, no action is required. The clusters should now be running the version 1.8.13 release.",
    "publishedDate": "2022-12-21T20:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-23551",
    "technology": "kubernetes",
    "version": "1.8.13",
    "vulnerable": false,
    "cpeUri": "",
    "description": "aad-pod-identity assigns Azure Active Directory identities to Kubernetes applications and has now been deprecated as of 24 October 2022. The NMI component in AAD Pod Identity intercepts and validates token requests based on regex. In this case, a token request made with backslash in the request (example: `/metadata/identity\\oauth2\\token/`) would bypass the NMI validation and be sent to IMDS allowing a pod in the cluster to access identities that it shouldn't have access to. This issue has been fixed and has been included in AAD Pod Identity release version 1.8.13. If using the AKS pod-managed identities add-on, no action is required. The clusters should now be running the version 1.8.13 release.",
    "publishedDate": "2022-12-21T20:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-23772",
    "technology": "kubernetes",
    "version": "-",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:netapp:kubernetes_monitoring_operator:-:*:*:*:*:*:*:*",
    "description": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
    "publishedDate": "2022-02-11T01:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2022-23773",
    "technology": "kubernetes",
    "version": "-",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:netapp:kubernetes_monitoring_operator:-:*:*:*:*:*:*:*",
    "description": "cmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.",
    "publishedDate": "2022-02-11T01:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2022-23806",
    "technology": "kubernetes",
    "version": "-",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:netapp:kubernetes_monitoring_operator:-:*:*:*:*:*:*:*",
    "description": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
    "publishedDate": "2022-02-11T01:15Z",
    "cvssScore": 9.1,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2022-2385",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:aws-iam-authenticator:*:*:*:*:*:kubernetes:*:*",
    "description": "A security issue was discovered in aws-iam-authenticator where an allow-listed IAM identity may be able to modify their username and escalate privileges.",
    "publishedDate": "2022-07-12T19:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-24675",
    "technology": "kubernetes",
    "version": "-",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:netapp:kubernetes_monitoring_operator:-:*:*:*:*:*:*:*",
    "description": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
    "publishedDate": "2022-04-20T10:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2022-24730",
    "technology": "kubernetes",
    "version": "1.3.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. Argo CD starting with version 1.3.0 but before versions 2.1.11, 2.2.6, and 2.3.0 is vulnerable to a path traversal bug, compounded by an improper access control bug, allowing a malicious user with read-only repository access to leak sensitive files from Argo CD's repo-server. A malicious Argo CD user who has been granted `get` access for a repository containing a Helm chart can craft an API request to the `/api/v1/repositories/{repo_url}/appdetails` endpoint to leak the contents of out-of-bounds files from the repo-server. The malicious payload would reference an out-of-bounds file, and the contents of that file would be returned as part of the response. Contents from a non-YAML file may be returned as part of an error message. The attacker would have to know or guess the location of the target file. Sensitive files which could be leaked include files from other Applications' source repositories or any secrets which have been mounted as files on the repo-server. This vulnerability is patched in Argo CD versions 2.1.11, 2.2.6, and 2.3.0. The patches prevent path traversal and limit access to users who either A) have been granted Application `create` privileges or B) have been granted Application `get` privileges and are requesting details for a `repo_url` that has already been used for the given Application. There are currently no known workarounds.",
    "publishedDate": "2022-03-23T21:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-24730",
    "technology": "kubernetes",
    "version": "1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. Argo CD starting with version 1.3.0 but before versions 2.1.11, 2.2.6, and 2.3.0 is vulnerable to a path traversal bug, compounded by an improper access control bug, allowing a malicious user with read-only repository access to leak sensitive files from Argo CD's repo-server. A malicious Argo CD user who has been granted `get` access for a repository containing a Helm chart can craft an API request to the `/api/v1/repositories/{repo_url}/appdetails` endpoint to leak the contents of out-of-bounds files from the repo-server. The malicious payload would reference an out-of-bounds file, and the contents of that file would be returned as part of the response. Contents from a non-YAML file may be returned as part of an error message. The attacker would have to know or guess the location of the target file. Sensitive files which could be leaked include files from other Applications' source repositories or any secrets which have been mounted as files on the repo-server. This vulnerability is patched in Argo CD versions 2.1.11, 2.2.6, and 2.3.0. The patches prevent path traversal and limit access to users who either A) have been granted Application `create` privileges or B) have been granted Application `get` privileges and are requesting details for a `repo_url` that has already been used for the given Application. There are currently no known workarounds.",
    "publishedDate": "2022-03-23T21:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-24731",
    "technology": "kubernetes",
    "version": "1.5.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. Argo CD starting with version 1.5.0 but before versions 2.1.11, 2.2.6, and 2.3.0 is vulnerable to a path traversal vulnerability, allowing a malicious user with read/write access to leak sensitive files from Argo CD's repo-server. A malicious Argo CD user who has been granted `create` or `update` access to Applications can leak the contents of any text file on the repo-server. By crafting a malicious Helm chart and using it in an Application, the attacker can retrieve the sensitive file's contents either as part of the generated manifests or in an error message. The attacker would have to know or guess the location of the target file. Sensitive files which could be leaked include files from another Application's source repositories or any secrets which have been mounted as files on the repo-server. This vulnerability is patched in Argo CD versions 2.1.11, 2.2.6, and 2.3.0. The problem can be mitigated by avoiding storing secrets in git, avoiding mounting secrets as files on the repo-server, avoiding decrypting secrets into files on the repo-server, and carefully limiting who can `create` or `update` Applications.",
    "publishedDate": "2022-03-23T21:15Z",
    "cvssScore": 4.9,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-24817",
    "technology": "kubernetes",
    "version": "0.19.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Flux2 is an open and extensible continuous delivery solution for Kubernetes. Flux2 versions between 0.1.0 and 0.29.0, helm-controller 0.1.0 to v0.19.0, and kustomize-controller 0.1.0 to v0.23.0 are vulnerable to Code Injection via malicious Kubeconfig. In multi-tenancy deployments this can also lead to privilege escalation if the controller's service account has elevated permissions. Workarounds include disabling functionality via Validating Admission webhooks by restricting users from setting the `spec.kubeConfig` field in Flux `Kustomization` and `HelmRelease` objects. Additional mitigations include applying restrictive AppArmor and SELinux profiles on the controller’s pod to limit what binaries can be executed. This vulnerability is fixed in kustomize-controller v0.23.0 and helm-controller v0.19.0, both included in flux2 v0.29.0",
    "publishedDate": "2022-05-06T00:15Z",
    "cvssScore": 9.9,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-24817",
    "technology": "kubernetes",
    "version": "0.23.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Flux2 is an open and extensible continuous delivery solution for Kubernetes. Flux2 versions between 0.1.0 and 0.29.0, helm-controller 0.1.0 to v0.19.0, and kustomize-controller 0.1.0 to v0.23.0 are vulnerable to Code Injection via malicious Kubeconfig. In multi-tenancy deployments this can also lead to privilege escalation if the controller's service account has elevated permissions. Workarounds include disabling functionality via Validating Admission webhooks by restricting users from setting the `spec.kubeConfig` field in Flux `Kustomization` and `HelmRelease` objects. Additional mitigations include applying restrictive AppArmor and SELinux profiles on the controller’s pod to limit what binaries can be executed. This vulnerability is fixed in kustomize-controller v0.23.0 and helm-controller v0.19.0, both included in flux2 v0.29.0",
    "publishedDate": "2022-05-06T00:15Z",
    "cvssScore": 9.9,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-24817",
    "technology": "kubernetes",
    "version": "0.23.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Flux2 is an open and extensible continuous delivery solution for Kubernetes. Flux2 versions between 0.1.0 and 0.29.0, helm-controller 0.1.0 to v0.19.0, and kustomize-controller 0.1.0 to v0.23.0 are vulnerable to Code Injection via malicious Kubeconfig. In multi-tenancy deployments this can also lead to privilege escalation if the controller's service account has elevated permissions. Workarounds include disabling functionality via Validating Admission webhooks by restricting users from setting the `spec.kubeConfig` field in Flux `Kustomization` and `HelmRelease` objects. Additional mitigations include applying restrictive AppArmor and SELinux profiles on the controller’s pod to limit what binaries can be executed. This vulnerability is fixed in kustomize-controller v0.23.0 and helm-controller v0.19.0, both included in flux2 v0.29.0",
    "publishedDate": "2022-05-06T00:15Z",
    "cvssScore": 9.9,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-24817",
    "technology": "kubernetes",
    "version": "0.19.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Flux2 is an open and extensible continuous delivery solution for Kubernetes. Flux2 versions between 0.1.0 and 0.29.0, helm-controller 0.1.0 to v0.19.0, and kustomize-controller 0.1.0 to v0.23.0 are vulnerable to Code Injection via malicious Kubeconfig. In multi-tenancy deployments this can also lead to privilege escalation if the controller's service account has elevated permissions. Workarounds include disabling functionality via Validating Admission webhooks by restricting users from setting the `spec.kubeConfig` field in Flux `Kustomization` and `HelmRelease` objects. Additional mitigations include applying restrictive AppArmor and SELinux profiles on the controller’s pod to limit what binaries can be executed. This vulnerability is fixed in kustomize-controller v0.23.0 and helm-controller v0.19.0, both included in flux2 v0.29.0",
    "publishedDate": "2022-05-06T00:15Z",
    "cvssScore": 9.9,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-24817",
    "technology": "kubernetes",
    "version": "0.29.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Flux2 is an open and extensible continuous delivery solution for Kubernetes. Flux2 versions between 0.1.0 and 0.29.0, helm-controller 0.1.0 to v0.19.0, and kustomize-controller 0.1.0 to v0.23.0 are vulnerable to Code Injection via malicious Kubeconfig. In multi-tenancy deployments this can also lead to privilege escalation if the controller's service account has elevated permissions. Workarounds include disabling functionality via Validating Admission webhooks by restricting users from setting the `spec.kubeConfig` field in Flux `Kustomization` and `HelmRelease` objects. Additional mitigations include applying restrictive AppArmor and SELinux profiles on the controller’s pod to limit what binaries can be executed. This vulnerability is fixed in kustomize-controller v0.23.0 and helm-controller v0.19.0, both included in flux2 v0.29.0",
    "publishedDate": "2022-05-06T00:15Z",
    "cvssScore": 9.9,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-24829",
    "technology": "kubernetes",
    "version": "0.12.39",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Garden is an automation platform for Kubernetes development and testing. In versions prior to 0.12.39 multiple endpoints did not require authentication. In some operating modes this allows for an attacker to gain access to the application erroneously. The configuration is leaked through the /api endpoint on the local server that is responsible for serving the Garden dashboard. At the moment, this server is accessible to 0.0.0.0 which makes it accessible to anyone on the same network (or anyone on the internet if they are on a public, static IP). This may lead to the ability to compromise credentials, secrets or environment variables. Users are advised to upgrade to version 0.12.39 as soon as possible. Users unable to upgrade should use a firewall blocking access to port 9777 from all untrusted network machines.",
    "publishedDate": "2022-04-11T20:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-24829",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:garden:garden:*:*:*:*:*:kubernetes:*:*",
    "description": "Garden is an automation platform for Kubernetes development and testing. In versions prior to 0.12.39 multiple endpoints did not require authentication. In some operating modes this allows for an attacker to gain access to the application erroneously. The configuration is leaked through the /api endpoint on the local server that is responsible for serving the Garden dashboard. At the moment, this server is accessible to 0.0.0.0 which makes it accessible to anyone on the same network (or anyone on the internet if they are on a public, static IP). This may lead to the ability to compromise credentials, secrets or environment variables. Users are advised to upgrade to version 0.12.39 as soon as possible. Users unable to upgrade should use a firewall blocking access to port 9777 from all untrusted network machines.",
    "publishedDate": "2022-04-11T20:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-24877",
    "technology": "kubernetes",
    "version": "0.24.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Flux is an open and extensible continuous delivery solution for Kubernetes. Path Traversal in the kustomize-controller via a malicious `kustomization.yaml` allows an attacker to expose sensitive data from the controller’s pod filesystem and possibly privilege escalation in multi-tenancy deployments. Workarounds include automated tooling in the user's CI/CD pipeline to validate `kustomization.yaml` files conform with specific policies. This vulnerability is fixed in kustomize-controller v0.24.0 and included in flux2 v0.29.0.",
    "publishedDate": "2022-05-06T01:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-24877",
    "technology": "kubernetes",
    "version": "0.29.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Flux is an open and extensible continuous delivery solution for Kubernetes. Path Traversal in the kustomize-controller via a malicious `kustomization.yaml` allows an attacker to expose sensitive data from the controller’s pod filesystem and possibly privilege escalation in multi-tenancy deployments. Workarounds include automated tooling in the user's CI/CD pipeline to validate `kustomization.yaml` files conform with specific policies. This vulnerability is fixed in kustomize-controller v0.24.0 and included in flux2 v0.29.0.",
    "publishedDate": "2022-05-06T01:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-24878",
    "technology": "kubernetes",
    "version": "0.24.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Flux is an open and extensible continuous delivery solution for Kubernetes. Path Traversal in the kustomize-controller via a malicious `kustomization.yaml` allows an attacker to cause a Denial of Service at the controller level. Workarounds include automated tooling in the user's CI/CD pipeline to validate `kustomization.yaml` files conform with specific policies. This vulnerability is fixed in kustomize-controller v0.24.0 and included in flux2 v0.29.0. Users are recommended to upgrade.",
    "publishedDate": "2022-05-06T02:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-24878",
    "technology": "kubernetes",
    "version": "0.29.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Flux is an open and extensible continuous delivery solution for Kubernetes. Path Traversal in the kustomize-controller via a malicious `kustomization.yaml` allows an attacker to cause a Denial of Service at the controller level. Workarounds include automated tooling in the user's CI/CD pipeline to validate `kustomization.yaml` files conform with specific policies. This vulnerability is fixed in kustomize-controller v0.24.0 and included in flux2 v0.29.0. Users are recommended to upgrade.",
    "publishedDate": "2022-05-06T02:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-24904",
    "technology": "kubernetes",
    "version": "0.7.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. Argo CD starting with version 0.7.0 and prior to versions 2.1.15m 2.2.9, and 2.3.4 is vulnerable to a symlink following bug allowing a malicious user with repository write access to leak sensitive files from Argo CD's repo-server. A malicious Argo CD user with write access for a repository which is (or may be) used in a directory-type Application may commit a symlink which points to an out-of-bounds file. Sensitive files which could be leaked include manifest files from other Applications' source repositories (potentially decrypted files, if you are using a decryption plugin) or any JSON-formatted secrets which have been mounted as files on the repo-server. A patch for this vulnerability has been released in Argo CD versions 2.3.4, 2.2.9, and 2.1.15. Users of versions 2.3.0 or above who do not have any Jsonnet/directory-type Applications may disable the Jsonnet/directory config management tool as a workaround.",
    "publishedDate": "2022-05-20T14:15Z",
    "cvssScore": 4.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-27191",
    "technology": "kubernetes",
    "version": "2.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:redhat:advanced_cluster_management_for_kubernetes:2.0:*:*:*:*:*:*:*",
    "description": "The golang.org/x/crypto/ssh package before 0.0.0-20220314234659-1baeb1ce4c0b for Go allows an attacker to crash a server in certain circumstances involving AddHostKey.",
    "publishedDate": "2022-03-18T07:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe_child",
    "versionRange": {
      "startIncluding": "2.0",
      "startExcluding": "2.0"
    }
  },
  {
    "cveId": "CVE-2022-27208",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:jenkins:kubernetes_continuous_deploy:*:*:*:*:*:jenkins:*:*",
    "description": "Jenkins Kubernetes Continuous Deploy Plugin 2.3.1 and earlier allows users with Credentials/Create permission to read arbitrary files on the Jenkins controller.",
    "publishedDate": "2022-03-15T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-27209",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:jenkins:kubernetes_continuous_deploy:*:*:*:*:*:jenkins:*:*",
    "description": "A missing permission check in Jenkins Kubernetes Continuous Deploy Plugin 2.3.1 and earlier allows attackers with Overall/Read permission to enumerate credentials IDs of credentials stored in Jenkins.",
    "publishedDate": "2022-03-15T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-27210",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:jenkins:kubernetes_continuous_deploy:*:*:*:*:*:jenkins:*:*",
    "description": "A cross-site request forgery (CSRF) vulnerability in Jenkins Kubernetes Continuous Deploy Plugin 2.3.1 and earlier allows attackers to connect to an attacker-specified SSH server using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.",
    "publishedDate": "2022-03-15T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-27211",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:jenkins:kubernetes_continuous_deploy:*:*:*:*:*:jenkins:*:*",
    "description": "A missing permission check in Jenkins Kubernetes Continuous Deploy Plugin 2.3.1 and earlier allows attackers with Overall/Read permission to connect to an attacker-specified SSH server using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.",
    "publishedDate": "2022-03-15T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-27652",
    "technology": "kubernetes",
    "version": "-",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:cri-o:-:*:*:*:*:*:*:*",
    "description": "A flaw was found in cri-o, where containers were incorrectly started with non-empty default permissions. A vulnerability was found in Moby (Docker Engine) where containers started incorrectly with non-empty inheritable Linux process capabilities. This flaw allows an attacker with access to programs with inheritable file capabilities to elevate those capabilities to the permitted set when execve(2) runs.",
    "publishedDate": "2022-04-18T17:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2022-29164",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:argo_workflows_project:argo_workflows:*:*:*:*:*:kubernetes:*:*",
    "description": "Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. In affected versions an attacker can create a workflow which produces a HTML artifact containing an HTML file that contains a script which uses XHR calls to interact with the Argo Server API. The attacker emails the deep-link to the artifact to their victim. The victim opens the link, the script starts running. As the script has access to the Argo Server API (as the victim), so may read information about the victim’s workflows, or create and delete workflows. Note the attacker must be an insider: they must have access to the same cluster as the victim and must already be able to run their own workflows. The attacker must have an understanding of the victim’s system. We have seen no evidence of this in the wild. We urge all users to upgrade to the fixed versions.",
    "publishedDate": "2022-05-06T00:15Z",
    "cvssScore": 7.1,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-29164",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:argo_workflows_project:argo_workflows:*:*:*:*:*:kubernetes:*:*",
    "description": "Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. In affected versions an attacker can create a workflow which produces a HTML artifact containing an HTML file that contains a script which uses XHR calls to interact with the Argo Server API. The attacker emails the deep-link to the artifact to their victim. The victim opens the link, the script starts running. As the script has access to the Argo Server API (as the victim), so may read information about the victim’s workflows, or create and delete workflows. Note the attacker must be an insider: they must have access to the same cluster as the victim and must already be able to run their own workflows. The attacker must have an understanding of the victim’s system. We have seen no evidence of this in the wild. We urge all users to upgrade to the fixed versions.",
    "publishedDate": "2022-05-06T00:15Z",
    "cvssScore": 7.1,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-29165",
    "technology": "kubernetes",
    "version": "1.4.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. A critical vulnerability has been discovered in Argo CD starting with version 1.4.0 and prior to versions 2.1.15, 2.2.9, and 2.3.4 which would allow unauthenticated users to impersonate as any Argo CD user or role, including the `admin` user, by sending a specifically crafted JSON Web Token (JWT) along with the request. In order for this vulnerability to be exploited, anonymous access to the Argo CD instance must have been enabled. In a default Argo CD installation, anonymous access is disabled. The vulnerability can be exploited to impersonate as any user or role, including the built-in `admin` account regardless of whether it is enabled or disabled. Also, the attacker does not need an account on the Argo CD instance in order to exploit this. If anonymous access to the instance is enabled, an attacker can escalate their privileges, effectively allowing them to gain the same privileges on the cluster as the Argo CD instance, which is cluster admin in a default installation. This will allow the attacker to create, manipulate and delete any resource on the cluster. They may also exfiltrate data by deploying malicious workloads with elevated privileges, thus bypassing any redaction of sensitive data otherwise enforced by the Argo CD API. A patch for this vulnerability has been released in Argo CD versions 2.3.4, 2.2.9, and 2.1.15. As a workaround, one may disable anonymous access, but upgrading to a patched version is preferable.",
    "publishedDate": "2022-05-20T15:15Z",
    "cvssScore": 10,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-29171",
    "technology": "kubernetes",
    "version": "3.38.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Sourcegraph is a fast and featureful code search and navigation engine. Versions before 3.38.0 are vulnerable to Remote Code Execution in the gitserver service. The Gitolite code host integration with Phabricator allows Sourcegraph site admins to specify a `callsignCommand`, which is used to obtain the Phabricator metadata for a Gitolite repository. An administrator who is able to edit or add a Gitolite code host and has administrative access to Sourcegraph’s bundled Grafana instance can change this command arbitrarily and run it remotely. This grants direct access to the infrastructure underlying the Sourcegraph installation. The attack requires: site-admin privileges on the instance of Sourcegraph, Administrative privileges on the bundled Grafana monitoring instance, Knowledge of the gitserver IP address or DNS name (if running in Kubernetes). This can be found through Grafana. The issue is patched in version 3.38.0. You may disable Gitolite code hosts. We still highly encourage upgrading regardless of workarounds.",
    "publishedDate": "2022-05-06T00:15Z",
    "cvssScore": 7.2,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-2995",
    "technology": "kubernetes",
    "version": "1.25.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:cri-o:1.25.0:*:*:*:*:*:*:*",
    "description": "Incorrect handling of the supplementary groups in the CRI-O container engine might lead to sensitive information disclosure or possible data modification if an attacker has direct access to the affected container where supplementary groups are used to set access permissions and is able to execute a binary code in that container.",
    "publishedDate": "2022-09-19T20:15Z",
    "cvssScore": 7.1,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.25.0",
      "startExcluding": "1.25.0"
    }
  },
  {
    "cveId": "CVE-2022-31016",
    "technology": "kubernetes",
    "version": "0.7.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative continuous deployment for Kubernetes. Argo CD versions v0.7.0 and later are vulnerable to an uncontrolled memory consumption bug, allowing an authorized malicious user to crash the repo-server service, resulting in a Denial of Service. The attacker must be an authenticated Argo CD user authorized to deploy Applications from a repository which contains (or can be made to contain) a large file. The fix for this vulnerability is available in versions 2.3.5, 2.2.10, 2.1.16, and later. There are no known workarounds. Users are recommended to upgrade.",
    "publishedDate": "2022-06-25T08:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31034",
    "technology": "kubernetes",
    "version": "0.11.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of Argo CD starting with v0.11.0 are vulnerable to a variety of attacks when an SSO login is initiated from the Argo CD CLI or UI. The vulnerabilities are due to the use of insufficiently random values in parameters in Oauth2/OIDC login flows. In each case, using a relatively-predictable (time-based) seed in a non-cryptographically-secure pseudo-random number generator made the parameter less random than required by the relevant spec or by general best practices. In some cases, using too short a value made the entropy even less sufficient. The attacks on login flows which are meant to be mitigated by these parameters are difficult to accomplish but can have a high impact potentially granting an attacker admin access to Argo CD. Patches for this vulnerability has been released in the following Argo CD versions: v2.4.1, v2.3.5, v2.2.10 and v2.1.16. There are no known workarounds for this vulnerability.",
    "publishedDate": "2022-06-27T19:15Z",
    "cvssScore": 8.1,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31034",
    "technology": "kubernetes",
    "version": "2.4.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of Argo CD starting with v0.11.0 are vulnerable to a variety of attacks when an SSO login is initiated from the Argo CD CLI or UI. The vulnerabilities are due to the use of insufficiently random values in parameters in Oauth2/OIDC login flows. In each case, using a relatively-predictable (time-based) seed in a non-cryptographically-secure pseudo-random number generator made the parameter less random than required by the relevant spec or by general best practices. In some cases, using too short a value made the entropy even less sufficient. The attacks on login flows which are meant to be mitigated by these parameters are difficult to accomplish but can have a high impact potentially granting an attacker admin access to Argo CD. Patches for this vulnerability has been released in the following Argo CD versions: v2.4.1, v2.3.5, v2.2.10 and v2.1.16. There are no known workarounds for this vulnerability.",
    "publishedDate": "2022-06-27T19:15Z",
    "cvssScore": 8.1,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31034",
    "technology": "kubernetes",
    "version": "2.3.5",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of Argo CD starting with v0.11.0 are vulnerable to a variety of attacks when an SSO login is initiated from the Argo CD CLI or UI. The vulnerabilities are due to the use of insufficiently random values in parameters in Oauth2/OIDC login flows. In each case, using a relatively-predictable (time-based) seed in a non-cryptographically-secure pseudo-random number generator made the parameter less random than required by the relevant spec or by general best practices. In some cases, using too short a value made the entropy even less sufficient. The attacks on login flows which are meant to be mitigated by these parameters are difficult to accomplish but can have a high impact potentially granting an attacker admin access to Argo CD. Patches for this vulnerability has been released in the following Argo CD versions: v2.4.1, v2.3.5, v2.2.10 and v2.1.16. There are no known workarounds for this vulnerability.",
    "publishedDate": "2022-06-27T19:15Z",
    "cvssScore": 8.1,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31034",
    "technology": "kubernetes",
    "version": "2.2.10",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of Argo CD starting with v0.11.0 are vulnerable to a variety of attacks when an SSO login is initiated from the Argo CD CLI or UI. The vulnerabilities are due to the use of insufficiently random values in parameters in Oauth2/OIDC login flows. In each case, using a relatively-predictable (time-based) seed in a non-cryptographically-secure pseudo-random number generator made the parameter less random than required by the relevant spec or by general best practices. In some cases, using too short a value made the entropy even less sufficient. The attacks on login flows which are meant to be mitigated by these parameters are difficult to accomplish but can have a high impact potentially granting an attacker admin access to Argo CD. Patches for this vulnerability has been released in the following Argo CD versions: v2.4.1, v2.3.5, v2.2.10 and v2.1.16. There are no known workarounds for this vulnerability.",
    "publishedDate": "2022-06-27T19:15Z",
    "cvssScore": 8.1,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31034",
    "technology": "kubernetes",
    "version": "2.1.16",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of Argo CD starting with v0.11.0 are vulnerable to a variety of attacks when an SSO login is initiated from the Argo CD CLI or UI. The vulnerabilities are due to the use of insufficiently random values in parameters in Oauth2/OIDC login flows. In each case, using a relatively-predictable (time-based) seed in a non-cryptographically-secure pseudo-random number generator made the parameter less random than required by the relevant spec or by general best practices. In some cases, using too short a value made the entropy even less sufficient. The attacks on login flows which are meant to be mitigated by these parameters are difficult to accomplish but can have a high impact potentially granting an attacker admin access to Argo CD. Patches for this vulnerability has been released in the following Argo CD versions: v2.4.1, v2.3.5, v2.2.10 and v2.1.16. There are no known workarounds for this vulnerability.",
    "publishedDate": "2022-06-27T19:15Z",
    "cvssScore": 8.1,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31035",
    "technology": "kubernetes",
    "version": "1.0.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of Argo CD starting with v1.0.0 are vulnerable to a cross-site scripting (XSS) bug allowing a malicious user to inject a `javascript:` link in the UI. When clicked by a victim user, the script will execute with the victim's permissions (up to and including admin). The script would be capable of doing anything which is possible in the UI or via the API, such as creating, modifying, and deleting Kubernetes resources. A patch for this vulnerability has been released in the following Argo CD versions: v2.4.1, v2.3.5, v2.2.10 and v2.1.16. There are no completely-safe workarounds besides upgrading.",
    "publishedDate": "2022-06-27T19:15Z",
    "cvssScore": 5.4,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31035",
    "technology": "kubernetes",
    "version": "2.4.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of Argo CD starting with v1.0.0 are vulnerable to a cross-site scripting (XSS) bug allowing a malicious user to inject a `javascript:` link in the UI. When clicked by a victim user, the script will execute with the victim's permissions (up to and including admin). The script would be capable of doing anything which is possible in the UI or via the API, such as creating, modifying, and deleting Kubernetes resources. A patch for this vulnerability has been released in the following Argo CD versions: v2.4.1, v2.3.5, v2.2.10 and v2.1.16. There are no completely-safe workarounds besides upgrading.",
    "publishedDate": "2022-06-27T19:15Z",
    "cvssScore": 5.4,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31035",
    "technology": "kubernetes",
    "version": "2.3.5",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of Argo CD starting with v1.0.0 are vulnerable to a cross-site scripting (XSS) bug allowing a malicious user to inject a `javascript:` link in the UI. When clicked by a victim user, the script will execute with the victim's permissions (up to and including admin). The script would be capable of doing anything which is possible in the UI or via the API, such as creating, modifying, and deleting Kubernetes resources. A patch for this vulnerability has been released in the following Argo CD versions: v2.4.1, v2.3.5, v2.2.10 and v2.1.16. There are no completely-safe workarounds besides upgrading.",
    "publishedDate": "2022-06-27T19:15Z",
    "cvssScore": 5.4,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31035",
    "technology": "kubernetes",
    "version": "2.2.10",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of Argo CD starting with v1.0.0 are vulnerable to a cross-site scripting (XSS) bug allowing a malicious user to inject a `javascript:` link in the UI. When clicked by a victim user, the script will execute with the victim's permissions (up to and including admin). The script would be capable of doing anything which is possible in the UI or via the API, such as creating, modifying, and deleting Kubernetes resources. A patch for this vulnerability has been released in the following Argo CD versions: v2.4.1, v2.3.5, v2.2.10 and v2.1.16. There are no completely-safe workarounds besides upgrading.",
    "publishedDate": "2022-06-27T19:15Z",
    "cvssScore": 5.4,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31035",
    "technology": "kubernetes",
    "version": "2.1.16",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of Argo CD starting with v1.0.0 are vulnerable to a cross-site scripting (XSS) bug allowing a malicious user to inject a `javascript:` link in the UI. When clicked by a victim user, the script will execute with the victim's permissions (up to and including admin). The script would be capable of doing anything which is possible in the UI or via the API, such as creating, modifying, and deleting Kubernetes resources. A patch for this vulnerability has been released in the following Argo CD versions: v2.4.1, v2.3.5, v2.2.10 and v2.1.16. There are no completely-safe workarounds besides upgrading.",
    "publishedDate": "2022-06-27T19:15Z",
    "cvssScore": 5.4,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31036",
    "technology": "kubernetes",
    "version": "1.3.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of Argo CD starting with v1.3.0 are vulnerable to a symlink following bug allowing a malicious user with repository write access to leak sensitive YAML files from Argo CD's repo-server. A malicious Argo CD user with write access for a repository which is (or may be) used in a Helm-type Application may commit a symlink which points to an out-of-bounds file. If the target file is a valid YAML file, the attacker can read the contents of that file. Sensitive files which could be leaked include manifest files from other Applications' source repositories (potentially decrypted files, if you are using a decryption plugin) or any YAML-formatted secrets which have been mounted as files on the repo-server. Patches for this vulnerability has been released in the following Argo CD versions: v2.4.1, v2.3.5, v2.2.10 and v2.1.16. If you are using a version \u003e=v2.3.0 and do not have any Helm-type Applications you may disable the Helm config management tool as a workaround.",
    "publishedDate": "2022-06-27T20:15Z",
    "cvssScore": 4.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31036",
    "technology": "kubernetes",
    "version": "2.4.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of Argo CD starting with v1.3.0 are vulnerable to a symlink following bug allowing a malicious user with repository write access to leak sensitive YAML files from Argo CD's repo-server. A malicious Argo CD user with write access for a repository which is (or may be) used in a Helm-type Application may commit a symlink which points to an out-of-bounds file. If the target file is a valid YAML file, the attacker can read the contents of that file. Sensitive files which could be leaked include manifest files from other Applications' source repositories (potentially decrypted files, if you are using a decryption plugin) or any YAML-formatted secrets which have been mounted as files on the repo-server. Patches for this vulnerability has been released in the following Argo CD versions: v2.4.1, v2.3.5, v2.2.10 and v2.1.16. If you are using a version \u003e=v2.3.0 and do not have any Helm-type Applications you may disable the Helm config management tool as a workaround.",
    "publishedDate": "2022-06-27T20:15Z",
    "cvssScore": 4.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31036",
    "technology": "kubernetes",
    "version": "2.3.5",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of Argo CD starting with v1.3.0 are vulnerable to a symlink following bug allowing a malicious user with repository write access to leak sensitive YAML files from Argo CD's repo-server. A malicious Argo CD user with write access for a repository which is (or may be) used in a Helm-type Application may commit a symlink which points to an out-of-bounds file. If the target file is a valid YAML file, the attacker can read the contents of that file. Sensitive files which could be leaked include manifest files from other Applications' source repositories (potentially decrypted files, if you are using a decryption plugin) or any YAML-formatted secrets which have been mounted as files on the repo-server. Patches for this vulnerability has been released in the following Argo CD versions: v2.4.1, v2.3.5, v2.2.10 and v2.1.16. If you are using a version \u003e=v2.3.0 and do not have any Helm-type Applications you may disable the Helm config management tool as a workaround.",
    "publishedDate": "2022-06-27T20:15Z",
    "cvssScore": 4.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31036",
    "technology": "kubernetes",
    "version": "2.2.10",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of Argo CD starting with v1.3.0 are vulnerable to a symlink following bug allowing a malicious user with repository write access to leak sensitive YAML files from Argo CD's repo-server. A malicious Argo CD user with write access for a repository which is (or may be) used in a Helm-type Application may commit a symlink which points to an out-of-bounds file. If the target file is a valid YAML file, the attacker can read the contents of that file. Sensitive files which could be leaked include manifest files from other Applications' source repositories (potentially decrypted files, if you are using a decryption plugin) or any YAML-formatted secrets which have been mounted as files on the repo-server. Patches for this vulnerability has been released in the following Argo CD versions: v2.4.1, v2.3.5, v2.2.10 and v2.1.16. If you are using a version \u003e=v2.3.0 and do not have any Helm-type Applications you may disable the Helm config management tool as a workaround.",
    "publishedDate": "2022-06-27T20:15Z",
    "cvssScore": 4.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31036",
    "technology": "kubernetes",
    "version": "2.1.16",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of Argo CD starting with v1.3.0 are vulnerable to a symlink following bug allowing a malicious user with repository write access to leak sensitive YAML files from Argo CD's repo-server. A malicious Argo CD user with write access for a repository which is (or may be) used in a Helm-type Application may commit a symlink which points to an out-of-bounds file. If the target file is a valid YAML file, the attacker can read the contents of that file. Sensitive files which could be leaked include manifest files from other Applications' source repositories (potentially decrypted files, if you are using a decryption plugin) or any YAML-formatted secrets which have been mounted as files on the repo-server. Patches for this vulnerability has been released in the following Argo CD versions: v2.4.1, v2.3.5, v2.2.10 and v2.1.16. If you are using a version \u003e=v2.3.0 and do not have any Helm-type Applications you may disable the Helm config management tool as a workaround.",
    "publishedDate": "2022-06-27T20:15Z",
    "cvssScore": 4.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31036",
    "technology": "kubernetes",
    "version": "2.3.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of Argo CD starting with v1.3.0 are vulnerable to a symlink following bug allowing a malicious user with repository write access to leak sensitive YAML files from Argo CD's repo-server. A malicious Argo CD user with write access for a repository which is (or may be) used in a Helm-type Application may commit a symlink which points to an out-of-bounds file. If the target file is a valid YAML file, the attacker can read the contents of that file. Sensitive files which could be leaked include manifest files from other Applications' source repositories (potentially decrypted files, if you are using a decryption plugin) or any YAML-formatted secrets which have been mounted as files on the repo-server. Patches for this vulnerability has been released in the following Argo CD versions: v2.4.1, v2.3.5, v2.2.10 and v2.1.16. If you are using a version \u003e=v2.3.0 and do not have any Helm-type Applications you may disable the Helm config management tool as a workaround.",
    "publishedDate": "2022-06-27T20:15Z",
    "cvssScore": 4.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31054",
    "technology": "kubernetes",
    "version": "1.7.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo Events is an event-driven workflow automation framework for Kubernetes. Prior to version 1.7.1, several `HandleRoute` endpoints make use of the deprecated `ioutil.ReadAll()`. `ioutil.ReadAll()` reads all the data into memory. As such, an attacker who sends a large request to the Argo Events server will be able to crash it and cause denial of service. A patch for this vulnerability has been released in Argo Events version 1.7.1.",
    "publishedDate": "2022-06-13T20:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31054",
    "technology": "kubernetes",
    "version": "1.7.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo Events is an event-driven workflow automation framework for Kubernetes. Prior to version 1.7.1, several `HandleRoute` endpoints make use of the deprecated `ioutil.ReadAll()`. `ioutil.ReadAll()` reads all the data into memory. As such, an attacker who sends a large request to the Argo Events server will be able to crash it and cause denial of service. A patch for this vulnerability has been released in Argo Events version 1.7.1.",
    "publishedDate": "2022-06-13T20:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31055",
    "technology": "kubernetes",
    "version": "1.6.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "kCTF is a Kubernetes-based infrastructure for capture the flag (CTF) competitions. Prior to version 1.6.0, the kctf cluster set-src-ip-ranges was broken and allowed traffic from any IP. The problem has been patched in v1.6.0. As a workaround, those who want to test challenges privately can mark them as `public: false` and use `kctf chal debug port-forward` to connect.",
    "publishedDate": "2022-06-13T16:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31055",
    "technology": "kubernetes",
    "version": "1.6.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "kCTF is a Kubernetes-based infrastructure for capture the flag (CTF) competitions. Prior to version 1.6.0, the kctf cluster set-src-ip-ranges was broken and allowed traffic from any IP. The problem has been patched in v1.6.0. As a workaround, those who want to test challenges privately can mark them as `public: false` and use `kctf chal debug port-forward` to connect.",
    "publishedDate": "2022-06-13T16:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31098",
    "technology": "kubernetes",
    "version": "0.8.1-rc.6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Weave GitOps is a simple open source developer platform for people who want cloud native applications, without needing Kubernetes expertise. A vulnerability in the logging of Weave GitOps could allow an authenticated remote attacker to view sensitive cluster configurations, aka KubeConfg, of registered Kubernetes clusters, including the service account tokens in plain text from Weave GitOps's pod logs on the management cluster. An unauthorized remote attacker can also view these sensitive configurations from external log storage if enabled by the management cluster. This vulnerability is due to the client factory dumping cluster configurations and their service account tokens when the cluster manager tries to connect to an API server of a registered cluster, and a connection error occurs. An attacker could exploit this vulnerability by either accessing logs of a pod of Weave GitOps, or from external log storage and obtaining all cluster configurations of registered clusters. A successful exploit could allow the attacker to use those cluster configurations to manage the registered Kubernetes clusters. This vulnerability has been fixed by commit 567356f471353fb5c676c77f5abc2a04631d50ca. Users should upgrade to Weave GitOps core version v0.8.1-rc.6 or newer. There is no known workaround for this vulnerability.",
    "publishedDate": "2022-06-27T22:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31105",
    "technology": "kubernetes",
    "version": "0.4.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. Argo CD starting with version 0.4.0 and prior to 2.2.11, 2.3.6, and 2.4.5 is vulnerable to an improper certificate validation bug which could cause Argo CD to trust a malicious (or otherwise untrustworthy) OpenID Connect (OIDC) provider. A patch for this vulnerability has been released in Argo CD versions 2.4.5, 2.3.6, and 2.2.11. There are no complete workarounds, but a partial workaround is available. Those who use an external OIDC provider (not the bundled Dex instance), can mitigate the issue by setting the `oidc.config.rootCA` field in the `argocd-cm` ConfigMap. This mitigation only forces certificate validation when the API server handles login flows. It does not force certificate verification when verifying tokens on API calls.",
    "publishedDate": "2022-07-12T22:15Z",
    "cvssScore": 9.6,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-3162",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Users authorized to list or watch one type of namespaced custom resource cluster-wide can read custom resources of a different type in the same API group without authorization. Clusters are impacted by this vulnerability if all of the following are true: 1. There are 2+ CustomResourceDefinitions sharing the same API group 2. Users have cluster-wide list or watch authorization on one of those custom resources. 3. The same users are not authorized to read another custom resource in the same API group.",
    "publishedDate": "2023-03-01T19:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-3162",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Users authorized to list or watch one type of namespaced custom resource cluster-wide can read custom resources of a different type in the same API group without authorization. Clusters are impacted by this vulnerability if all of the following are true: 1. There are 2+ CustomResourceDefinitions sharing the same API group 2. Users have cluster-wide list or watch authorization on one of those custom resources. 3. The same users are not authorized to read another custom resource in the same API group.",
    "publishedDate": "2023-03-01T19:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-3162",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Users authorized to list or watch one type of namespaced custom resource cluster-wide can read custom resources of a different type in the same API group without authorization. Clusters are impacted by this vulnerability if all of the following are true: 1. There are 2+ CustomResourceDefinitions sharing the same API group 2. Users have cluster-wide list or watch authorization on one of those custom resources. 3. The same users are not authorized to read another custom resource in the same API group.",
    "publishedDate": "2023-03-01T19:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-3162",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Users authorized to list or watch one type of namespaced custom resource cluster-wide can read custom resources of a different type in the same API group without authorization. Clusters are impacted by this vulnerability if all of the following are true: 1. There are 2+ CustomResourceDefinitions sharing the same API group 2. Users have cluster-wide list or watch authorization on one of those custom resources. 3. The same users are not authorized to read another custom resource in the same API group.",
    "publishedDate": "2023-03-01T19:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-31677",
    "technology": "kubernetes",
    "version": "0.19.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "An Insufficient Session Expiration issue was discovered in the Pinniped Supervisor (before v0.19.0). A user authenticating to Kubernetes clusters via the Pinniped Supervisor could potentially use their access token to continue their session beyond what proper use of their refresh token might allow.",
    "publishedDate": "2022-08-29T15:15Z",
    "cvssScore": 5.4,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-3172",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:apiserver:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in kube-apiserver that allows an \naggregated API server to redirect client traffic to any URL.  This could\n lead to the client performing unexpected actions as well as forwarding \nthe client's API server credentials to third parties.",
    "publishedDate": "2023-11-03T20:15Z",
    "cvssScore": 8.2,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-3172",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:apiserver:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in kube-apiserver that allows an \naggregated API server to redirect client traffic to any URL.  This could\n lead to the client performing unexpected actions as well as forwarding \nthe client's API server credentials to third parties.",
    "publishedDate": "2023-11-03T20:15Z",
    "cvssScore": 8.2,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-3172",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:apiserver:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in kube-apiserver that allows an \naggregated API server to redirect client traffic to any URL.  This could\n lead to the client performing unexpected actions as well as forwarding \nthe client's API server credentials to third parties.",
    "publishedDate": "2023-11-03T20:15Z",
    "cvssScore": 8.2,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-3172",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:apiserver:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in kube-apiserver that allows an \naggregated API server to redirect client traffic to any URL.  This could\n lead to the client performing unexpected actions as well as forwarding \nthe client's API server credentials to third parties.",
    "publishedDate": "2023-11-03T20:15Z",
    "cvssScore": 8.2,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-3172",
    "technology": "kubernetes",
    "version": "1.25.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:apiserver:1.25.0:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in kube-apiserver that allows an \naggregated API server to redirect client traffic to any URL.  This could\n lead to the client performing unexpected actions as well as forwarding \nthe client's API server credentials to third parties.",
    "publishedDate": "2023-11-03T20:15Z",
    "cvssScore": 8.2,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.25.0",
      "startExcluding": "1.25.0"
    }
  },
  {
    "cveId": "CVE-2022-3248",
    "technology": "kubernetes",
    "version": "2.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:redhat:advanced_cluster_management_for_kubernetes:2.0:*:*:*:*:*:*:*",
    "description": "A flaw was found in OpenShift API, as admission checks do not enforce \"custom-host\" permissions. This issue could allow an attacker to violate the boundaries, as permissions will not be applied.",
    "publishedDate": "2023-10-05T14:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.0",
      "startExcluding": "2.0"
    }
  },
  {
    "cveId": "CVE-2022-3294",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Users may have access to secure endpoints in the control plane network. Kubernetes clusters are only affected if an untrusted user can modify Node objects and send proxy requests to them. Kubernetes supports node proxying, which allows clients of kube-apiserver to access endpoints of a Kubelet to establish connections to Pods, retrieve container logs, and more. While Kubernetes already validates the proxying address for Nodes, a bug in kube-apiserver made it possible to bypass this validation. Bypassing this validation could allow authenticated requests destined for Nodes to to the API server's private network.",
    "publishedDate": "2023-03-01T19:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-3294",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Users may have access to secure endpoints in the control plane network. Kubernetes clusters are only affected if an untrusted user can modify Node objects and send proxy requests to them. Kubernetes supports node proxying, which allows clients of kube-apiserver to access endpoints of a Kubelet to establish connections to Pods, retrieve container logs, and more. While Kubernetes already validates the proxying address for Nodes, a bug in kube-apiserver made it possible to bypass this validation. Bypassing this validation could allow authenticated requests destined for Nodes to to the API server's private network.",
    "publishedDate": "2023-03-01T19:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-3294",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Users may have access to secure endpoints in the control plane network. Kubernetes clusters are only affected if an untrusted user can modify Node objects and send proxy requests to them. Kubernetes supports node proxying, which allows clients of kube-apiserver to access endpoints of a Kubelet to establish connections to Pods, retrieve container logs, and more. While Kubernetes already validates the proxying address for Nodes, a bug in kube-apiserver made it possible to bypass this validation. Bypassing this validation could allow authenticated requests destined for Nodes to to the API server's private network.",
    "publishedDate": "2023-03-01T19:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-3294",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Users may have access to secure endpoints in the control plane network. Kubernetes clusters are only affected if an untrusted user can modify Node objects and send proxy requests to them. Kubernetes supports node proxying, which allows clients of kube-apiserver to access endpoints of a Kubelet to establish connections to Pods, retrieve container logs, and more. While Kubernetes already validates the proxying address for Nodes, a bug in kube-apiserver made it possible to bypass this validation. Bypassing this validation could allow authenticated requests destined for Nodes to to the API server's private network.",
    "publishedDate": "2023-03-01T19:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-3466",
    "technology": "kubernetes",
    "version": "-",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:cri-o:-:*:*:*:*:*:*:*",
    "description": "The version of cri-o as released for Red Hat OpenShift Container Platform 4.9.48, 4.10.31, and 4.11.6 via RHBA-2022:6316, RHBA-2022:6257, and RHBA-2022:6658, respectively, included an incorrect version of cri-o missing the fix for CVE-2022-27652, which was previously fixed in OCP 4.9.41 and 4.10.12 via RHBA-2022:5433 and RHSA-2022:1600. This issue could allow an attacker with access to programs with inheritable file capabilities to elevate those capabilities to the permitted set when execve(2) runs. For more details, see https://access.redhat.com/security/cve/CVE-2022-27652.",
    "publishedDate": "2023-09-15T14:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2022-35930",
    "technology": "kubernetes",
    "version": "0.2.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "PolicyController is a utility used to enforce supply chain policy in Kubernetes clusters. In versions prior to 0.2.1 PolicyController will report a false positive, resulting in an admission when it should not be admitted when there is at least one attestation with a valid signature and there are NO attestations of the type being verified (--type defaults to \"custom\"). An example image that can be used to test this is `ghcr.io/distroless/static@sha256:dd7614b5a12bc4d617b223c588b4e0c833402b8f4991fb5702ea83afad1986e2`. Users should upgrade to version 0.2.1 to resolve this issue. There are no workarounds for users unable to upgrade.",
    "publishedDate": "2022-08-04T22:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-36049",
    "technology": "kubernetes",
    "version": "0.0.17",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Flux2 is a tool for keeping Kubernetes clusters in sync with sources of configuration, and Flux's helm-controller is a Kubernetes operator that allows one to declaratively manage Helm chart releases. Helm controller is tightly integrated with the Helm SDK. A vulnerability found in the Helm SDK that affects flux2 v0.0.17 until v0.32.0 and helm-controller v0.0.4 until v0.23.0 allows for specific data inputs to cause high memory consumption. In some platforms, this could cause the controller to panic and stop processing reconciliations. In a shared cluster multi-tenancy environment, a tenant could create a HelmRelease that makes the controller panic, denying all other tenants from their Helm releases being reconciled. Patches are available in flux2 v0.32.0 and helm-controller v0.23.0.",
    "publishedDate": "2022-09-07T21:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-36049",
    "technology": "kubernetes",
    "version": "0.32.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Flux2 is a tool for keeping Kubernetes clusters in sync with sources of configuration, and Flux's helm-controller is a Kubernetes operator that allows one to declaratively manage Helm chart releases. Helm controller is tightly integrated with the Helm SDK. A vulnerability found in the Helm SDK that affects flux2 v0.0.17 until v0.32.0 and helm-controller v0.0.4 until v0.23.0 allows for specific data inputs to cause high memory consumption. In some platforms, this could cause the controller to panic and stop processing reconciliations. In a shared cluster multi-tenancy environment, a tenant could create a HelmRelease that makes the controller panic, denying all other tenants from their Helm releases being reconciled. Patches are available in flux2 v0.32.0 and helm-controller v0.23.0.",
    "publishedDate": "2022-09-07T21:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-36049",
    "technology": "kubernetes",
    "version": "0.0.4",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Flux2 is a tool for keeping Kubernetes clusters in sync with sources of configuration, and Flux's helm-controller is a Kubernetes operator that allows one to declaratively manage Helm chart releases. Helm controller is tightly integrated with the Helm SDK. A vulnerability found in the Helm SDK that affects flux2 v0.0.17 until v0.32.0 and helm-controller v0.0.4 until v0.23.0 allows for specific data inputs to cause high memory consumption. In some platforms, this could cause the controller to panic and stop processing reconciliations. In a shared cluster multi-tenancy environment, a tenant could create a HelmRelease that makes the controller panic, denying all other tenants from their Helm releases being reconciled. Patches are available in flux2 v0.32.0 and helm-controller v0.23.0.",
    "publishedDate": "2022-09-07T21:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-36049",
    "technology": "kubernetes",
    "version": "0.23.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Flux2 is a tool for keeping Kubernetes clusters in sync with sources of configuration, and Flux's helm-controller is a Kubernetes operator that allows one to declaratively manage Helm chart releases. Helm controller is tightly integrated with the Helm SDK. A vulnerability found in the Helm SDK that affects flux2 v0.0.17 until v0.32.0 and helm-controller v0.0.4 until v0.23.0 allows for specific data inputs to cause high memory consumption. In some platforms, this could cause the controller to panic and stop processing reconciliations. In a shared cluster multi-tenancy environment, a tenant could create a HelmRelease that makes the controller panic, denying all other tenants from their Helm releases being reconciled. Patches are available in flux2 v0.32.0 and helm-controller v0.23.0.",
    "publishedDate": "2022-09-07T21:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-36049",
    "technology": "kubernetes",
    "version": "0.32.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Flux2 is a tool for keeping Kubernetes clusters in sync with sources of configuration, and Flux's helm-controller is a Kubernetes operator that allows one to declaratively manage Helm chart releases. Helm controller is tightly integrated with the Helm SDK. A vulnerability found in the Helm SDK that affects flux2 v0.0.17 until v0.32.0 and helm-controller v0.0.4 until v0.23.0 allows for specific data inputs to cause high memory consumption. In some platforms, this could cause the controller to panic and stop processing reconciliations. In a shared cluster multi-tenancy environment, a tenant could create a HelmRelease that makes the controller panic, denying all other tenants from their Helm releases being reconciled. Patches are available in flux2 v0.32.0 and helm-controller v0.23.0.",
    "publishedDate": "2022-09-07T21:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-36049",
    "technology": "kubernetes",
    "version": "0.23.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Flux2 is a tool for keeping Kubernetes clusters in sync with sources of configuration, and Flux's helm-controller is a Kubernetes operator that allows one to declaratively manage Helm chart releases. Helm controller is tightly integrated with the Helm SDK. A vulnerability found in the Helm SDK that affects flux2 v0.0.17 until v0.32.0 and helm-controller v0.0.4 until v0.23.0 allows for specific data inputs to cause high memory consumption. In some platforms, this could cause the controller to panic and stop processing reconciliations. In a shared cluster multi-tenancy environment, a tenant could create a HelmRelease that makes the controller panic, denying all other tenants from their Helm releases being reconciled. Patches are available in flux2 v0.32.0 and helm-controller v0.23.0.",
    "publishedDate": "2022-09-07T21:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-37968",
    "technology": "kubernetes",
    "version": "1.5.8",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:microsoft:azure_arc-enabled_kubernetes:1.5.8:*:*:*:*:*:*:*",
    "description": "Microsoft has identified a vulnerability affecting the cluster connect feature of Azure Arc-enabled Kubernetes clusters. This vulnerability could allow an unauthenticated user to elevate their privileges and potentially gain administrative control over the Kubernetes cluster. Additionally, because Azure Stack Edge allows customers to deploy Kubernetes workloads on their devices via Azure Arc, Azure Stack Edge devices are also vulnerable to this vulnerability.",
    "publishedDate": "2022-10-11T19:15Z",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.5.8",
      "startExcluding": "1.5.8"
    }
  },
  {
    "cveId": "CVE-2022-37968",
    "technology": "kubernetes",
    "version": "1.6.19",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:microsoft:azure_arc-enabled_kubernetes:1.6.19:*:*:*:*:*:*:*",
    "description": "Microsoft has identified a vulnerability affecting the cluster connect feature of Azure Arc-enabled Kubernetes clusters. This vulnerability could allow an unauthenticated user to elevate their privileges and potentially gain administrative control over the Kubernetes cluster. Additionally, because Azure Stack Edge allows customers to deploy Kubernetes workloads on their devices via Azure Arc, Azure Stack Edge devices are also vulnerable to this vulnerability.",
    "publishedDate": "2022-10-11T19:15Z",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.6.19",
      "startExcluding": "1.6.19"
    }
  },
  {
    "cveId": "CVE-2022-37968",
    "technology": "kubernetes",
    "version": "1.7.18",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:microsoft:azure_arc-enabled_kubernetes:1.7.18:*:*:*:*:*:*:*",
    "description": "Microsoft has identified a vulnerability affecting the cluster connect feature of Azure Arc-enabled Kubernetes clusters. This vulnerability could allow an unauthenticated user to elevate their privileges and potentially gain administrative control over the Kubernetes cluster. Additionally, because Azure Stack Edge allows customers to deploy Kubernetes workloads on their devices via Azure Arc, Azure Stack Edge devices are also vulnerable to this vulnerability.",
    "publishedDate": "2022-10-11T19:15Z",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.7.18",
      "startExcluding": "1.7.18"
    }
  },
  {
    "cveId": "CVE-2022-37968",
    "technology": "kubernetes",
    "version": "1.8.11",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:microsoft:azure_arc-enabled_kubernetes:1.8.11:*:*:*:*:*:*:*",
    "description": "Microsoft has identified a vulnerability affecting the cluster connect feature of Azure Arc-enabled Kubernetes clusters. This vulnerability could allow an unauthenticated user to elevate their privileges and potentially gain administrative control over the Kubernetes cluster. Additionally, because Azure Stack Edge allows customers to deploy Kubernetes workloads on their devices via Azure Arc, Azure Stack Edge devices are also vulnerable to this vulnerability.",
    "publishedDate": "2022-10-11T19:15Z",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.8.11",
      "startExcluding": "1.8.11"
    }
  },
  {
    "cveId": "CVE-2022-3841",
    "technology": "kubernetes",
    "version": "2.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:redhat:advanced_cluster_management_for_kubernetes:2.0:*:*:*:*:*:*:*",
    "description": "RHACM: unauthenticated SSRF in console API endpoint. A Server-Side Request Forgery (SSRF) vulnerability was found in the console API endpoint from Red Hat Advanced Cluster Management for Kubernetes (RHACM). An attacker could take advantage of this as the console API endpoint is missing an authentication check, allowing unauthenticated users making requests.",
    "publishedDate": "2023-01-13T06:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.0",
      "startExcluding": "2.0"
    }
  },
  {
    "cveId": "CVE-2022-39272",
    "technology": "kubernetes",
    "version": "0.35.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Flux is an open and extensible continuous delivery solution for Kubernetes. Versions prior to 0.35.0 are subject to a Denial of Service. Users that have permissions to change Flux’s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields `.spec.interval` or `.spec.timeout` (and structured variations of these fields), causing the entire object type to stop being processed. This issue is patched in version 0.35.0. As a workaround, Admission controllers can be employed to restrict the values that can be used for fields `.spec.interval` and `.spec.timeout`, however upgrading to the latest versions is still the recommended mitigation.",
    "publishedDate": "2022-10-22T00:15Z",
    "cvssScore": 4.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-4318",
    "technology": "kubernetes",
    "version": "-",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:cri-o:-:*:*:*:*:*:*:*",
    "description": "A vulnerability was found in cri-o. This issue allows the addition of arbitrary lines into /etc/passwd by use of a specially crafted environment variable.",
    "publishedDate": "2023-09-25T20:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2022-46167",
    "technology": "kubernetes",
    "version": "0.1.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Capsule is a multi-tenancy and policy-based framework for Kubernetes. Prior to version 0.1.3, a ServiceAccount deployed in a Tenant Namespace, when granted with `PATCH` capabilities on its own Namespace, is able to edit it and remove the Owner Reference, breaking the reconciliation of the Capsule Operator and removing all the enforcement like Pod Security annotations, Network Policies, Limit Range and Resource Quota items. An attacker could detach the Namespace from a Tenant that is forbidding starting privileged Pods using the Pod Security labels by removing the OwnerReference, removing the enforcement labels, and being able to start privileged containers that would be able to start a generic Kubernetes privilege escalation. Patches have been released for version 0.1.3. No known workarounds are available.\n",
    "publishedDate": "2022-12-02T19:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-46167",
    "technology": "kubernetes",
    "version": "0.1.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Capsule is a multi-tenancy and policy-based framework for Kubernetes. Prior to version 0.1.3, a ServiceAccount deployed in a Tenant Namespace, when granted with `PATCH` capabilities on its own Namespace, is able to edit it and remove the Owner Reference, breaking the reconciliation of the Capsule Operator and removing all the enforcement like Pod Security annotations, Network Policies, Limit Range and Resource Quota items. An attacker could detach the Namespace from a Tenant that is forbidding starting privileged Pods using the Pod Security labels by removing the OwnerReference, removing the enforcement labels, and being able to start privileged containers that would be able to start a generic Kubernetes privilege escalation. Patches have been released for version 0.1.3. No known workarounds are available.\n",
    "publishedDate": "2022-12-02T19:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-4886",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:ingress-nginx:*:*:*:*:*:*:*:*",
    "description": "Ingress-nginx `path` sanitization can be bypassed with `log_format` directive.",
    "publishedDate": "2023-10-25T20:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-1677",
    "technology": "kubernetes",
    "version": "-",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:microsoft:azure_kubernetes_service:-:*:*:*:*:*:*:*",
    "description": "Azure Active Directory Pod Identity Spoofing Vulnerability",
    "publishedDate": "2021-01-12T20:15Z",
    "cvssScore": 2.1,
    "severity": "LOW",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2021-20218",
    "technology": "kubernetes",
    "version": "4.2.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "A flaw was found in the fabric8 kubernetes-client in version 4.2.0 and after. This flaw allows a malicious pod/container to cause applications using the fabric8 kubernetes-client `copy` command to extract files outside the working path. The highest threat from this vulnerability is to integrity and system availability. This has been fixed in kubernetes-client-4.13.2 kubernetes-client-5.0.2 kubernetes-client-4.11.2 kubernetes-client-4.7.2",
    "publishedDate": "2021-03-16T21:15Z",
    "cvssScore": 7.4,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-20218",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:redhat:kubernetes-client:*:*:*:*:*:*:*:*",
    "description": "A flaw was found in the fabric8 kubernetes-client in version 4.2.0 and after. This flaw allows a malicious pod/container to cause applications using the fabric8 kubernetes-client `copy` command to extract files outside the working path. The highest threat from this vulnerability is to integrity and system availability. This has been fixed in kubernetes-client-4.13.2 kubernetes-client-5.0.2 kubernetes-client-4.11.2 kubernetes-client-4.7.2",
    "publishedDate": "2021-03-16T21:15Z",
    "cvssScore": 7.4,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-20218",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:redhat:kubernetes-client:*:*:*:*:*:*:*:*",
    "description": "A flaw was found in the fabric8 kubernetes-client in version 4.2.0 and after. This flaw allows a malicious pod/container to cause applications using the fabric8 kubernetes-client `copy` command to extract files outside the working path. The highest threat from this vulnerability is to integrity and system availability. This has been fixed in kubernetes-client-4.13.2 kubernetes-client-5.0.2 kubernetes-client-4.11.2 kubernetes-client-4.7.2",
    "publishedDate": "2021-03-16T21:15Z",
    "cvssScore": 7.4,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-20218",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:redhat:kubernetes-client:*:*:*:*:*:*:*:*",
    "description": "A flaw was found in the fabric8 kubernetes-client in version 4.2.0 and after. This flaw allows a malicious pod/container to cause applications using the fabric8 kubernetes-client `copy` command to extract files outside the working path. The highest threat from this vulnerability is to integrity and system availability. This has been fixed in kubernetes-client-4.13.2 kubernetes-client-5.0.2 kubernetes-client-4.11.2 kubernetes-client-4.7.2",
    "publishedDate": "2021-03-16T21:15Z",
    "cvssScore": 7.4,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-20218",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:redhat:kubernetes-client:*:*:*:*:*:*:*:*",
    "description": "A flaw was found in the fabric8 kubernetes-client in version 4.2.0 and after. This flaw allows a malicious pod/container to cause applications using the fabric8 kubernetes-client `copy` command to extract files outside the working path. The highest threat from this vulnerability is to integrity and system availability. This has been fixed in kubernetes-client-4.13.2 kubernetes-client-5.0.2 kubernetes-client-4.11.2 kubernetes-client-4.7.2",
    "publishedDate": "2021-03-16T21:15Z",
    "cvssScore": 7.4,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-21243",
    "technology": "kubernetes",
    "version": "4.0.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "OneDev is an all-in-one devops platform. In OneDev before version 4.0.3, a Kubernetes REST endpoint exposes two methods that deserialize untrusted data from the request body. These endpoints do not enforce any authentication or authorization checks. This issue may lead to pre-auth RCE. This issue was fixed in 4.0.3 by not using deserialization at KubernetesResource side.",
    "publishedDate": "2021-01-15T20:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-21303",
    "technology": "kubernetes",
    "version": "3.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Helm is open-source software which is essentially \"The Kubernetes Package Manager\". Helm is a tool for managing Charts. Charts are packages of pre-configured Kubernetes resources. In Helm from version 3.0 and before version 3.5.2, there a few cases where data loaded from potentially untrusted sources was not properly sanitized. When a SemVer in the `version` field of a chart is invalid, in some cases Helm allows the string to be used \"as is\" without sanitizing. Helm fails to properly sanitized some fields present on Helm repository `index.yaml` files. Helm does not properly sanitized some fields in the `plugin.yaml` file for plugins In some cases, Helm does not properly sanitize the fields in the `Chart.yaml` file. By exploiting these attack vectors, core maintainers were able to send deceptive information to a terminal screen running the `helm` command, as well as obscure or alter information on the screen. In some cases, we could send codes that terminals used to execute higher-order logic, like clearing a terminal screen. Further, during evaluation, the Helm maintainers discovered a few other fields that were not properly sanitized when read out of repository index files. This fix remedies all such cases, and once again enforces SemVer2 policies on version fields. All users of the Helm 3 should upgrade to the fixed version 3.5.2 or later. Those who use Helm as a library should verify that they either sanitize this data on their own, or use the proper Helm API calls to sanitize the data.",
    "publishedDate": "2021-02-05T22:15Z",
    "cvssScore": 6.8,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-21303",
    "technology": "kubernetes",
    "version": "3.5.2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Helm is open-source software which is essentially \"The Kubernetes Package Manager\". Helm is a tool for managing Charts. Charts are packages of pre-configured Kubernetes resources. In Helm from version 3.0 and before version 3.5.2, there a few cases where data loaded from potentially untrusted sources was not properly sanitized. When a SemVer in the `version` field of a chart is invalid, in some cases Helm allows the string to be used \"as is\" without sanitizing. Helm fails to properly sanitized some fields present on Helm repository `index.yaml` files. Helm does not properly sanitized some fields in the `plugin.yaml` file for plugins In some cases, Helm does not properly sanitize the fields in the `Chart.yaml` file. By exploiting these attack vectors, core maintainers were able to send deceptive information to a terminal screen running the `helm` command, as well as obscure or alter information on the screen. In some cases, we could send codes that terminals used to execute higher-order logic, like clearing a terminal screen. Further, during evaluation, the Helm maintainers discovered a few other fields that were not properly sanitized when read out of repository index files. This fix remedies all such cases, and once again enforces SemVer2 policies on version fields. All users of the Helm 3 should upgrade to the fixed version 3.5.2 or later. Those who use Helm as a library should verify that they either sanitize this data on their own, or use the proper Helm API calls to sanitize the data.",
    "publishedDate": "2021-02-05T22:15Z",
    "cvssScore": 6.8,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-21303",
    "technology": "kubernetes",
    "version": "3.5.2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Helm is open-source software which is essentially \"The Kubernetes Package Manager\". Helm is a tool for managing Charts. Charts are packages of pre-configured Kubernetes resources. In Helm from version 3.0 and before version 3.5.2, there a few cases where data loaded from potentially untrusted sources was not properly sanitized. When a SemVer in the `version` field of a chart is invalid, in some cases Helm allows the string to be used \"as is\" without sanitizing. Helm fails to properly sanitized some fields present on Helm repository `index.yaml` files. Helm does not properly sanitized some fields in the `plugin.yaml` file for plugins In some cases, Helm does not properly sanitize the fields in the `Chart.yaml` file. By exploiting these attack vectors, core maintainers were able to send deceptive information to a terminal screen running the `helm` command, as well as obscure or alter information on the screen. In some cases, we could send codes that terminals used to execute higher-order logic, like clearing a terminal screen. Further, during evaluation, the Helm maintainers discovered a few other fields that were not properly sanitized when read out of repository index files. This fix remedies all such cases, and once again enforces SemVer2 policies on version fields. All users of the Helm 3 should upgrade to the fixed version 3.5.2 or later. Those who use Helm as a library should verify that they either sanitize this data on their own, or use the proper Helm API calls to sanitize the data.",
    "publishedDate": "2021-02-05T22:15Z",
    "cvssScore": 6.8,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-21661",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:jenkins:kubernetes:*:*:*:*:*:jenkins:*:*",
    "description": "Jenkins Kubernetes CLI Plugin 1.10.0 and earlier does not perform permission checks in several HTTP endpoints, allowing attackers with Overall/Read permission to enumerate credentials IDs of credentials stored in Jenkins.",
    "publishedDate": "2021-06-10T15:15Z",
    "cvssScore": 4.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-24109",
    "technology": "kubernetes",
    "version": "-",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:microsoft:azure_kubernetes_service:-:*:*:*:*:*:*:*",
    "description": "Microsoft Azure Kubernetes Service Elevation of Privilege Vulnerability",
    "publishedDate": "2021-02-25T23:15Z",
    "cvssScore": 6,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2021-25735",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in kube-apiserver that could allow node updates to bypass a Validating Admission Webhook. Clusters are only affected by this vulnerability if they run a Validating Admission Webhook for Nodes that denies admission based at least partially on the old state of the Node object. Validating Admission Webhook does not observe some previous fields.",
    "publishedDate": "2021-09-06T12:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-25735",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in kube-apiserver that could allow node updates to bypass a Validating Admission Webhook. Clusters are only affected by this vulnerability if they run a Validating Admission Webhook for Nodes that denies admission based at least partially on the old state of the Node object. Validating Admission Webhook does not observe some previous fields.",
    "publishedDate": "2021-09-06T12:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-25735",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in kube-apiserver that could allow node updates to bypass a Validating Admission Webhook. Clusters are only affected by this vulnerability if they run a Validating Admission Webhook for Nodes that denies admission based at least partially on the old state of the Node object. Validating Admission Webhook does not observe some previous fields.",
    "publishedDate": "2021-09-06T12:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-25736",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Kube-proxy\n on Windows can unintentionally forward traffic to local processes \nlistening on the same port (“spec.ports[*].port”) as a LoadBalancer \nService when the LoadBalancer controller\n does not set the “status.loadBalancer.ingress[].ip” field. Clusters \nwhere the LoadBalancer controller sets the \n“status.loadBalancer.ingress[].ip” field are unaffected.",
    "publishedDate": "2023-10-30T03:15Z",
    "cvssScore": 6.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2021-25736",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Kube-proxy\n on Windows can unintentionally forward traffic to local processes \nlistening on the same port (“spec.ports[*].port”) as a LoadBalancer \nService when the LoadBalancer controller\n does not set the “status.loadBalancer.ingress[].ip” field. Clusters \nwhere the LoadBalancer controller sets the \n“status.loadBalancer.ingress[].ip” field are unaffected.",
    "publishedDate": "2023-10-30T03:15Z",
    "cvssScore": 6.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2021-25736",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Kube-proxy\n on Windows can unintentionally forward traffic to local processes \nlistening on the same port (“spec.ports[*].port”) as a LoadBalancer \nService when the LoadBalancer controller\n does not set the “status.loadBalancer.ingress[].ip” field. Clusters \nwhere the LoadBalancer controller sets the \n“status.loadBalancer.ingress[].ip” field are unaffected.",
    "publishedDate": "2023-10-30T03:15Z",
    "cvssScore": 6.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2021-25737",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user may be able to redirect pod traffic to private networks on a Node. Kubernetes already prevents creation of Endpoint IPs in the localhost or link-local range, but the same validation was not performed on EndpointSlice IPs.",
    "publishedDate": "2021-09-06T12:15Z",
    "cvssScore": 4.8,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-25737",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user may be able to redirect pod traffic to private networks on a Node. Kubernetes already prevents creation of Endpoint IPs in the localhost or link-local range, but the same validation was not performed on EndpointSlice IPs.",
    "publishedDate": "2021-09-06T12:15Z",
    "cvssScore": 4.8,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-25737",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user may be able to redirect pod traffic to private networks on a Node. Kubernetes already prevents creation of Endpoint IPs in the localhost or link-local range, but the same validation was not performed on EndpointSlice IPs.",
    "publishedDate": "2021-09-06T12:15Z",
    "cvssScore": 4.8,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-25737",
    "technology": "kubernetes",
    "version": "1.21.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:1.21.0:-:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user may be able to redirect pod traffic to private networks on a Node. Kubernetes already prevents creation of Endpoint IPs in the localhost or link-local range, but the same validation was not performed on EndpointSlice IPs.",
    "publishedDate": "2021-09-06T12:15Z",
    "cvssScore": 4.8,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.21.0",
      "startExcluding": "1.21.0"
    }
  },
  {
    "cveId": "CVE-2021-25738",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:java:*:*:*:*:*:*:*:*",
    "description": "Loading specially-crafted yaml with the Kubernetes Java Client library can lead to code execution.",
    "publishedDate": "2021-10-11T19:15Z",
    "cvssScore": 6.7,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-25738",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:java:*:*:*:*:*:*:*:*",
    "description": "Loading specially-crafted yaml with the Kubernetes Java Client library can lead to code execution.",
    "publishedDate": "2021-10-11T19:15Z",
    "cvssScore": 6.7,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-25738",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:java:*:*:*:*:*:*:*:*",
    "description": "Loading specially-crafted yaml with the Kubernetes Java Client library can lead to code execution.",
    "publishedDate": "2021-10-11T19:15Z",
    "cvssScore": 6.7,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-25740",
    "technology": "kubernetes",
    "version": "-",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:-:*:*:*:*:*:*:*",
    "description": "A security issue was discovered with Kubernetes that could enable users to send network traffic to locations they would otherwise not have access to via a confused deputy attack.",
    "publishedDate": "2021-09-20T17:15Z",
    "cvssScore": 3.1,
    "severity": "LOW",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2021-25741",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user may be able to create a container with subpath volume mounts to access files \u0026 directories outside of the volume, including on the host filesystem.",
    "publishedDate": "2021-09-20T17:15Z",
    "cvssScore": 8.1,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-25741",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user may be able to create a container with subpath volume mounts to access files \u0026 directories outside of the volume, including on the host filesystem.",
    "publishedDate": "2021-09-20T17:15Z",
    "cvssScore": 8.1,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-25741",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user may be able to create a container with subpath volume mounts to access files \u0026 directories outside of the volume, including on the host filesystem.",
    "publishedDate": "2021-09-20T17:15Z",
    "cvssScore": 8.1,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-25741",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where a user may be able to create a container with subpath volume mounts to access files \u0026 directories outside of the volume, including on the host filesystem.",
    "publishedDate": "2021-09-20T17:15Z",
    "cvssScore": 8.1,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-25742",
    "technology": "kubernetes",
    "version": "1.0.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:ingress-nginx:1.0.0:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in ingress-nginx where a user that can create or update ingress objects can use the custom snippets feature to obtain all secrets in the cluster.",
    "publishedDate": "2021-10-29T04:15Z",
    "cvssScore": 7.1,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.0.0",
      "startExcluding": "1.0.0"
    }
  },
  {
    "cveId": "CVE-2021-25742",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:ingress-nginx:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in ingress-nginx where a user that can create or update ingress objects can use the custom snippets feature to obtain all secrets in the cluster.",
    "publishedDate": "2021-10-29T04:15Z",
    "cvssScore": 7.1,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-25743",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "kubectl does not neutralize escape, meta or control sequences contained in the raw data it outputs to a terminal. This includes but is not limited to the unstructured string fields in objects such as Events.",
    "publishedDate": "2022-01-07T00:15Z",
    "cvssScore": 3,
    "severity": "LOW",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-25745",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:ingress-nginx:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in ingress-nginx where a user that can create or update ingress objects can use the spec.rules[].http.paths[].path field of an Ingress object (in the networking.k8s.io or extensions API group) to obtain the credentials of the ingress-nginx controller. In the default configuration, that credential has access to all secrets in the cluster.",
    "publishedDate": "2022-05-06T01:15Z",
    "cvssScore": 8.1,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-25746",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:ingress-nginx:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in ingress-nginx where a user that can create or update ingress objects can use .metadata.annotations in an Ingress object (in the networking.k8s.io or extensions API group) to obtain the credentials of the ingress-nginx controller. In the default configuration, that credential has access to all secrets in the cluster.",
    "publishedDate": "2022-05-06T01:15Z",
    "cvssScore": 7.1,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-25748",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:ingress-nginx:*:*:*:*:*:*:*:*",
    "description": "A security issue was discovered in ingress-nginx where a user that can create or update ingress objects can use a newline character to bypass the sanitization of the `spec.rules[].http.paths[].path` field of an Ingress object (in the `networking.k8s.io` or `extensions` API group) to obtain the credentials of the ingress-nginx controller. In the default configuration, that credential has access to all secrets in the cluster.",
    "publishedDate": "2023-05-24T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-25749",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Windows workloads can run as ContainerAdministrator even when those workloads set the runAsNonRoot option to true.",
    "publishedDate": "2023-05-24T17:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-25749",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Windows workloads can run as ContainerAdministrator even when those workloads set the runAsNonRoot option to true.",
    "publishedDate": "2023-05-24T17:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-25749",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Windows workloads can run as ContainerAdministrator even when those workloads set the runAsNonRoot option to true.",
    "publishedDate": "2023-05-24T17:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-25749",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Windows workloads can run as ContainerAdministrator even when those workloads set the runAsNonRoot option to true.",
    "publishedDate": "2023-05-24T17:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-27075",
    "technology": "kubernetes",
    "version": "-",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:microsoft:azure_kubernetes_service:-:*:*:*:*:*:*:*",
    "description": "Azure Virtual Machine Information Disclosure Vulnerability",
    "publishedDate": "2021-03-11T16:15Z",
    "cvssScore": 2.7,
    "severity": "LOW",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2021-28448",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:microsoft:visual_studio_code_kubernetes_tools:*:*:*:*:*:*:*:*",
    "description": "Visual Studio Code Kubernetes Tools Remote Code Execution Vulnerability",
    "publishedDate": "2021-04-13T20:15Z",
    "cvssScore": 6.8,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-31938",
    "technology": "kubernetes",
    "version": "-",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:microsoft:kubernetes_tools:-:*:*:*:*:*:*:*",
    "description": "Microsoft VsCode Kubernetes Tools Extension Elevation of Privilege Vulnerability",
    "publishedDate": "2021-06-08T23:15Z",
    "cvssScore": 6.8,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2021-32783",
    "technology": "kubernetes",
    "version": "1.17.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Contour is a Kubernetes ingress controller using Envoy proxy. In Contour before version 1.17.1 a specially crafted ExternalName type Service may be used to access Envoy's admin interface, which Contour normally prevents from access outside the Envoy container. This can be used to shut down Envoy remotely (a denial of service), or to expose the existence of any Secret that Envoy is using for its configuration, including most notably TLS Keypairs. However, it *cannot* be used to get the *content* of those secrets. Since this attack allows access to the administration interface, a variety of administration options are available, such as shutting down the Envoy or draining traffic. In general, the Envoy admin interface cannot easily be used for making changes to the cluster, in-flight requests, or backend services, but it could be used to shut down or drain Envoy, change traffic routing, or to retrieve secret metadata, as mentioned above. The issue will be addressed in Contour v1.18.0 and a cherry-picked patch release, v1.17.1, has been released to cover users who cannot upgrade at this time. For more details refer to the linked GitHub Security Advisory.",
    "publishedDate": "2021-07-23T22:15Z",
    "cvssScore": 8.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-32783",
    "technology": "kubernetes",
    "version": "1.18.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Contour is a Kubernetes ingress controller using Envoy proxy. In Contour before version 1.17.1 a specially crafted ExternalName type Service may be used to access Envoy's admin interface, which Contour normally prevents from access outside the Envoy container. This can be used to shut down Envoy remotely (a denial of service), or to expose the existence of any Secret that Envoy is using for its configuration, including most notably TLS Keypairs. However, it *cannot* be used to get the *content* of those secrets. Since this attack allows access to the administration interface, a variety of administration options are available, such as shutting down the Envoy or draining traffic. In general, the Envoy admin interface cannot easily be used for making changes to the cluster, in-flight requests, or backend services, but it could be used to shut down or drain Envoy, change traffic routing, or to retrieve secret metadata, as mentioned above. The issue will be addressed in Contour v1.18.0 and a cherry-picked patch release, v1.17.1, has been released to cover users who cannot upgrade at this time. For more details refer to the linked GitHub Security Advisory.",
    "publishedDate": "2021-07-23T22:15Z",
    "cvssScore": 8.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-32783",
    "technology": "kubernetes",
    "version": "1.17.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Contour is a Kubernetes ingress controller using Envoy proxy. In Contour before version 1.17.1 a specially crafted ExternalName type Service may be used to access Envoy's admin interface, which Contour normally prevents from access outside the Envoy container. This can be used to shut down Envoy remotely (a denial of service), or to expose the existence of any Secret that Envoy is using for its configuration, including most notably TLS Keypairs. However, it *cannot* be used to get the *content* of those secrets. Since this attack allows access to the administration interface, a variety of administration options are available, such as shutting down the Envoy or draining traffic. In general, the Envoy admin interface cannot easily be used for making changes to the cluster, in-flight requests, or backend services, but it could be used to shut down or drain Envoy, change traffic routing, or to retrieve secret metadata, as mentioned above. The issue will be addressed in Contour v1.18.0 and a cherry-picked patch release, v1.17.1, has been released to cover users who cannot upgrade at this time. For more details refer to the linked GitHub Security Advisory.",
    "publishedDate": "2021-07-23T22:15Z",
    "cvssScore": 8.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-32783",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:projectcontour:contour:*:*:*:*:*:kubernetes:*:*",
    "description": "Contour is a Kubernetes ingress controller using Envoy proxy. In Contour before version 1.17.1 a specially crafted ExternalName type Service may be used to access Envoy's admin interface, which Contour normally prevents from access outside the Envoy container. This can be used to shut down Envoy remotely (a denial of service), or to expose the existence of any Secret that Envoy is using for its configuration, including most notably TLS Keypairs. However, it *cannot* be used to get the *content* of those secrets. Since this attack allows access to the administration interface, a variety of administration options are available, such as shutting down the Envoy or draining traffic. In general, the Envoy admin interface cannot easily be used for making changes to the cluster, in-flight requests, or backend services, but it could be used to shut down or drain Envoy, change traffic routing, or to retrieve secret metadata, as mentioned above. The issue will be addressed in Contour v1.18.0 and a cherry-picked patch release, v1.17.1, has been released to cover users who cannot upgrade at this time. For more details refer to the linked GitHub Security Advisory.",
    "publishedDate": "2021-07-23T22:15Z",
    "cvssScore": 8.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-3499",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ovn:ovn-kubernetes:*:*:*:*:*:*:*:*",
    "description": "A vulnerability was found in OVN Kubernetes in versions up to and including 0.3.0 where the Egress Firewall does not reliably apply firewall rules when there is multiple DNS rules. It could lead to potentially lose of confidentiality, integrity or availability of a service.",
    "publishedDate": "2021-06-02T16:15Z",
    "cvssScore": 5.6,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-39159",
    "technology": "kubernetes",
    "version": "0.2.0-n653.",
    "vulnerable": false,
    "cpeUri": "",
    "description": "BinderHub is a kubernetes-based cloud service that allows users to share reproducible interactive computing environments from code repositories. In affected versions a remote code execution vulnerability has been identified in BinderHub, where providing BinderHub with maliciously crafted input could execute code in the BinderHub context, with the potential to egress credentials of the BinderHub deployment, including JupyterHub API tokens, kubernetes service accounts, and docker registry credentials. This may provide the ability to manipulate images and other user created pods in the deployment, with the potential to escalate to the host depending on the underlying kubernetes configuration. Users are advised to update to version 0.2.0-n653. If users are unable to update they may disable the git repo provider by specifying the `BinderHub.repo_providers` as a workaround.",
    "publishedDate": "2021-08-25T19:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-41254",
    "technology": "kubernetes",
    "version": "0.15.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "kustomize-controller is a Kubernetes operator, specialized in running continuous delivery pipelines for infrastructure and workloads defined with Kubernetes manifests and assembled with Kustomize. Users that can create Kubernetes Secrets, Service Accounts and Flux Kustomization objects, could execute commands inside the kustomize-controller container by embedding a shell script in a Kubernetes Secret. This can be used to run `kubectl` commands under the Service Account of kustomize-controller, thus allowing an authenticated Kubernetes user to gain cluster admin privileges. In affected versions multitenant environments where non-admin users have permissions to create Flux Kustomization objects are affected by this issue. This vulnerability was fixed in kustomize-controller v0.15.0 (included in flux2 v0.18.0) released on 2021-10-08. Starting with v0.15, the kustomize-controller no longer executes shell commands on the container OS and the `kubectl` binary has been removed from the container image. To prevent the creation of Kubernetes Service Accounts with `secrets` in namespaces owned by tenants, a Kubernetes validation webhook such as Gatekeeper OPA or Kyverno can be used.",
    "publishedDate": "2021-11-12T18:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-41254",
    "technology": "kubernetes",
    "version": "0.18.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "kustomize-controller is a Kubernetes operator, specialized in running continuous delivery pipelines for infrastructure and workloads defined with Kubernetes manifests and assembled with Kustomize. Users that can create Kubernetes Secrets, Service Accounts and Flux Kustomization objects, could execute commands inside the kustomize-controller container by embedding a shell script in a Kubernetes Secret. This can be used to run `kubectl` commands under the Service Account of kustomize-controller, thus allowing an authenticated Kubernetes user to gain cluster admin privileges. In affected versions multitenant environments where non-admin users have permissions to create Flux Kustomization objects are affected by this issue. This vulnerability was fixed in kustomize-controller v0.15.0 (included in flux2 v0.18.0) released on 2021-10-08. Starting with v0.15, the kustomize-controller no longer executes shell commands on the container OS and the `kubectl` binary has been removed from the container image. To prevent the creation of Kubernetes Service Accounts with `secrets` in namespaces owned by tenants, a Kubernetes validation webhook such as Gatekeeper OPA or Kyverno can be used.",
    "publishedDate": "2021-11-12T18:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-41254",
    "technology": "kubernetes",
    "version": "0.15",
    "vulnerable": false,
    "cpeUri": "",
    "description": "kustomize-controller is a Kubernetes operator, specialized in running continuous delivery pipelines for infrastructure and workloads defined with Kubernetes manifests and assembled with Kustomize. Users that can create Kubernetes Secrets, Service Accounts and Flux Kustomization objects, could execute commands inside the kustomize-controller container by embedding a shell script in a Kubernetes Secret. This can be used to run `kubectl` commands under the Service Account of kustomize-controller, thus allowing an authenticated Kubernetes user to gain cluster admin privileges. In affected versions multitenant environments where non-admin users have permissions to create Flux Kustomization objects are affected by this issue. This vulnerability was fixed in kustomize-controller v0.15.0 (included in flux2 v0.18.0) released on 2021-10-08. Starting with v0.15, the kustomize-controller no longer executes shell commands on the container OS and the `kubectl` binary has been removed from the container image. To prevent the creation of Kubernetes Service Accounts with `secrets` in namespaces owned by tenants, a Kubernetes validation webhook such as Gatekeeper OPA or Kyverno can be used.",
    "publishedDate": "2021-11-12T18:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-41266",
    "technology": "kubernetes",
    "version": "0.12.2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Minio console is a graphical user interface for the for MinIO operator. Minio itself is a multi-cloud object storage project. Affected versions are subject to an authentication bypass issue in the Operator Console when an external IDP is enabled. All users on release v0.12.2 and before are affected and are advised to update to 0.12.3 or newer. Users unable to upgrade should add automountServiceAccountToken: false to the operator-console deployment in Kubernetes so no service account token will get mounted inside the pod, then disable the external identity provider authentication by unset the CONSOLE_IDP_URL, CONSOLE_IDP_CLIENT_ID, CONSOLE_IDP_SECRET and CONSOLE_IDP_CALLBACK environment variable and instead use the Kubernetes service account token.",
    "publishedDate": "2021-11-15T21:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-4178",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:redhat:fabric8-kubernetes:*:*:*:*:*:*:*:*",
    "description": "A arbitrary code execution flaw was found in the Fabric 8 Kubernetes client affecting versions 5.0.0-beta-1 and above. Due to an improperly configured YAML parsing, this will allow a local and privileged attacker to supply malicious YAML.",
    "publishedDate": "2022-08-24T16:15Z",
    "cvssScore": 6.7,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-4178",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:redhat:fabric8-kubernetes:*:*:*:*:*:*:*:*",
    "description": "A arbitrary code execution flaw was found in the Fabric 8 Kubernetes client affecting versions 5.0.0-beta-1 and above. Due to an improperly configured YAML parsing, this will allow a local and privileged attacker to supply malicious YAML.",
    "publishedDate": "2022-08-24T16:15Z",
    "cvssScore": 6.7,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-4178",
    "technology": "kubernetes",
    "version": "5.8.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:redhat:fabric8-kubernetes:5.8.0:*:*:*:*:*:*:*",
    "description": "A arbitrary code execution flaw was found in the Fabric 8 Kubernetes client affecting versions 5.0.0-beta-1 and above. Due to an improperly configured YAML parsing, this will allow a local and privileged attacker to supply malicious YAML.",
    "publishedDate": "2022-08-24T16:15Z",
    "cvssScore": 6.7,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "5.8.0",
      "startExcluding": "5.8.0"
    }
  },
  {
    "cveId": "CVE-2021-4178",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:redhat:fabric8-kubernetes:*:*:*:*:*:*:*:*",
    "description": "A arbitrary code execution flaw was found in the Fabric 8 Kubernetes client affecting versions 5.0.0-beta-1 and above. Due to an improperly configured YAML parsing, this will allow a local and privileged attacker to supply malicious YAML.",
    "publishedDate": "2022-08-24T16:15Z",
    "cvssScore": 6.7,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-4178",
    "technology": "kubernetes",
    "version": "5.0.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:redhat:fabric8-kubernetes:5.0.0:beta1:*:*:*:*:*:*",
    "description": "A arbitrary code execution flaw was found in the Fabric 8 Kubernetes client affecting versions 5.0.0-beta-1 and above. Due to an improperly configured YAML parsing, this will allow a local and privileged attacker to supply malicious YAML.",
    "publishedDate": "2022-08-24T16:15Z",
    "cvssScore": 6.7,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "5.0.0",
      "startExcluding": "5.0.0"
    }
  },
  {
    "cveId": "CVE-2021-4178",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:redhat:fabric8-kubernetes:*:*:*:*:*:*:*:*",
    "description": "A arbitrary code execution flaw was found in the Fabric 8 Kubernetes client affecting versions 5.0.0-beta-1 and above. Due to an improperly configured YAML parsing, this will allow a local and privileged attacker to supply malicious YAML.",
    "publishedDate": "2022-08-24T16:15Z",
    "cvssScore": 6.7,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-4178",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:redhat:fabric8-kubernetes:*:*:*:*:*:*:*:*",
    "description": "A arbitrary code execution flaw was found in the Fabric 8 Kubernetes client affecting versions 5.0.0-beta-1 and above. Due to an improperly configured YAML parsing, this will allow a local and privileged attacker to supply malicious YAML.",
    "publishedDate": "2022-08-24T16:15Z",
    "cvssScore": 6.7,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-4178",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:redhat:fabric8-kubernetes:*:*:*:*:*:*:*:*",
    "description": "A arbitrary code execution flaw was found in the Fabric 8 Kubernetes client affecting versions 5.0.0-beta-1 and above. Due to an improperly configured YAML parsing, this will allow a local and privileged attacker to supply malicious YAML.",
    "publishedDate": "2022-08-24T16:15Z",
    "cvssScore": 6.7,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-10749",
    "technology": "kubernetes",
    "version": "0.8.6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "A vulnerability was found in all versions of containernetworking/plugins before version 0.8.6, that allows malicious containers in Kubernetes clusters to perform man-in-the-middle (MitM) attacks. A malicious container can exploit this flaw by sending rogue IPv6 router advertisements to the host or other containers, to redirect traffic to the malicious container.",
    "publishedDate": "2020-06-03T14:15Z",
    "cvssScore": 6,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-10749",
    "technology": "kubernetes",
    "version": "6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "A vulnerability was found in all versions of containernetworking/plugins before version 0.8.6, that allows malicious containers in Kubernetes clusters to perform man-in-the-middle (MitM) attacks. A malicious container can exploit this flaw by sending rogue IPv6 router advertisements to the host or other containers, to redirect traffic to the malicious container.",
    "publishedDate": "2020-06-03T14:15Z",
    "cvssScore": 6,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-11013",
    "technology": "kubernetes",
    "version": "3.1.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Their is an information disclosure vulnerability in Helm from version 3.1.0 and before version 3.2.0. `lookup` is a Helm template function introduced in Helm v3. It is able to lookup resources in the cluster to check for the existence of specific resources and get details about them. This can be used as part of the process to render templates. The documented behavior of `helm template` states that it does not attach to a remote cluster. However, a the recently added `lookup` template function circumvents this restriction and connects to the cluster even during `helm template` and `helm install|update|delete|rollback --dry-run`. The user is not notified of this behavior. Running `helm template` should not make calls to a cluster. This is different from `install`, which is presumed to have access to a cluster in order to load resources into Kubernetes. Helm 2 is unaffected by this vulnerability. A malicious chart author could inject a `lookup` into a chart that, when rendered through `helm template`, performs unannounced lookups against the cluster a user\u0026#39;s `KUBECONFIG` file points to. This information can then be disclosed via the output of `helm template`. This issue has been fixed in Helm 3.2.0",
    "publishedDate": "2020-04-24T20:15Z",
    "cvssScore": 5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-11013",
    "technology": "kubernetes",
    "version": "3.2.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Their is an information disclosure vulnerability in Helm from version 3.1.0 and before version 3.2.0. `lookup` is a Helm template function introduced in Helm v3. It is able to lookup resources in the cluster to check for the existence of specific resources and get details about them. This can be used as part of the process to render templates. The documented behavior of `helm template` states that it does not attach to a remote cluster. However, a the recently added `lookup` template function circumvents this restriction and connects to the cluster even during `helm template` and `helm install|update|delete|rollback --dry-run`. The user is not notified of this behavior. Running `helm template` should not make calls to a cluster. This is different from `install`, which is presumed to have access to a cluster in order to load resources into Kubernetes. Helm 2 is unaffected by this vulnerability. A malicious chart author could inject a `lookup` into a chart that, when rendered through `helm template`, performs unannounced lookups against the cluster a user\u0026#39;s `KUBECONFIG` file points to. This information can then be disclosed via the output of `helm template`. This issue has been fixed in Helm 3.2.0",
    "publishedDate": "2020-04-24T20:15Z",
    "cvssScore": 5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-11013",
    "technology": "kubernetes",
    "version": "3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Their is an information disclosure vulnerability in Helm from version 3.1.0 and before version 3.2.0. `lookup` is a Helm template function introduced in Helm v3. It is able to lookup resources in the cluster to check for the existence of specific resources and get details about them. This can be used as part of the process to render templates. The documented behavior of `helm template` states that it does not attach to a remote cluster. However, a the recently added `lookup` template function circumvents this restriction and connects to the cluster even during `helm template` and `helm install|update|delete|rollback --dry-run`. The user is not notified of this behavior. Running `helm template` should not make calls to a cluster. This is different from `install`, which is presumed to have access to a cluster in order to load resources into Kubernetes. Helm 2 is unaffected by this vulnerability. A malicious chart author could inject a `lookup` into a chart that, when rendered through `helm template`, performs unannounced lookups against the cluster a user\u0026#39;s `KUBECONFIG` file points to. This information can then be disclosed via the output of `helm template`. This issue has been fixed in Helm 3.2.0",
    "publishedDate": "2020-04-24T20:15Z",
    "cvssScore": 5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-13358",
    "technology": "kubernetes",
    "version": "13.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "A vulnerability in the internal Kubernetes agent api in GitLab CE/EE version 13.3 and above allows unauthorized access to private projects. Affected versions are: \u003e=13.4, \u003c13.4.5,\u003e=13.3, \u003c13.3.9,\u003e=13.5, \u003c13.5.2.",
    "publishedDate": "2020-11-17T01:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-14316",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubevirt:kubevirt:*:*:*:*:*:kubernetes:*:*",
    "description": "A flaw was found in kubevirt 0.29 and earlier. Virtual Machine Instances (VMIs) can be used to gain access to the host's filesystem. Successful exploitation allows an attacker to assume the privileges of the VM process on the host system. In worst-case scenarios an attacker can read and modify any file on the system where the VMI is running. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.",
    "publishedDate": "2020-07-29T19:15Z",
    "cvssScore": 9.9,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-15127",
    "technology": "kubernetes",
    "version": "1.7.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In Contour ( Ingress controller for Kubernetes) before version 1.7.0, a bad actor can shut down all instances of Envoy, essentially killing the entire ingress data plane. GET requests to /shutdown on port 8090 of the Envoy pod initiate Envoy's shutdown procedure. The shutdown procedure includes flipping the readiness endpoint to false, which removes Envoy from the routing pool. When running Envoy (For example on the host network, pod spec hostNetwork=true), the shutdown manager's endpoint is accessible to anyone on the network that can reach the Kubernetes node that's running Envoy. There is no authentication in place that prevents a rogue actor on the network from shutting down Envoy via the shutdown manager endpoint. Successful exploitation of this issue will lead to bad actors shutting down all instances of Envoy, essentially killing the entire ingress data plane. This is fixed in version 1.7.0.",
    "publishedDate": "2020-08-05T21:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-15127",
    "technology": "kubernetes",
    "version": "1.7.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In Contour ( Ingress controller for Kubernetes) before version 1.7.0, a bad actor can shut down all instances of Envoy, essentially killing the entire ingress data plane. GET requests to /shutdown on port 8090 of the Envoy pod initiate Envoy's shutdown procedure. The shutdown procedure includes flipping the readiness endpoint to false, which removes Envoy from the routing pool. When running Envoy (For example on the host network, pod spec hostNetwork=true), the shutdown manager's endpoint is accessible to anyone on the network that can reach the Kubernetes node that's running Envoy. There is no authentication in place that prevents a rogue actor on the network from shutting down Envoy via the shutdown manager endpoint. Successful exploitation of this issue will lead to bad actors shutting down all instances of Envoy, essentially killing the entire ingress data plane. This is fixed in version 1.7.0.",
    "publishedDate": "2020-08-05T21:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-15127",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:projectcontour:contour:*:*:*:*:*:kubernetes:*:*",
    "description": "In Contour ( Ingress controller for Kubernetes) before version 1.7.0, a bad actor can shut down all instances of Envoy, essentially killing the entire ingress data plane. GET requests to /shutdown on port 8090 of the Envoy pod initiate Envoy's shutdown procedure. The shutdown procedure includes flipping the readiness endpoint to false, which removes Envoy from the routing pool. When running Envoy (For example on the host network, pod spec hostNetwork=true), the shutdown manager's endpoint is accessible to anyone on the network that can reach the Kubernetes node that's running Envoy. There is no authentication in place that prevents a rogue actor on the network from shutting down Envoy via the shutdown manager endpoint. Successful exploitation of this issue will lead to bad actors shutting down all instances of Envoy, essentially killing the entire ingress data plane. This is fixed in version 1.7.0.",
    "publishedDate": "2020-08-05T21:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-15157",
    "technology": "kubernetes",
    "version": "1.2.14",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In containerd (an industry-standard container runtime) before version 1.2.14 there is a credential leaking vulnerability. If a container image manifest in the OCI Image format or Docker Image V2 Schema 2 format includes a URL for the location of a specific image layer (otherwise known as a “foreign layer”), the default containerd resolver will follow that URL to attempt to download it. In v1.2.x but not 1.3.0 or later, the default containerd resolver will provide its authentication credentials if the server where the URL is located presents an HTTP 401 status code along with registry-specific HTTP headers. If an attacker publishes a public image with a manifest that directs one of the layers to be fetched from a web server they control and they trick a user or system into pulling the image, they can obtain the credentials used for pulling that image. In some cases, this may be the user's username and password for the registry. In other cases, this may be the credentials attached to the cloud virtual instance which can grant access to other cloud resources in the account. The default containerd resolver is used by the cri-containerd plugin (which can be used by Kubernetes), the ctr development tool, and other client programs that have explicitly linked against it. This vulnerability has been fixed in containerd 1.2.14. containerd 1.3 and later are not affected. If you are using containerd 1.3 or later, you are not affected. If you are using cri-containerd in the 1.2 series or prior, you should ensure you only pull images from trusted sources. Other container runtimes built on top of containerd but not using the default resolver (such as Docker) are not affected.",
    "publishedDate": "2020-10-16T17:15Z",
    "cvssScore": 6.1,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-15157",
    "technology": "kubernetes",
    "version": "2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In containerd (an industry-standard container runtime) before version 1.2.14 there is a credential leaking vulnerability. If a container image manifest in the OCI Image format or Docker Image V2 Schema 2 format includes a URL for the location of a specific image layer (otherwise known as a “foreign layer”), the default containerd resolver will follow that URL to attempt to download it. In v1.2.x but not 1.3.0 or later, the default containerd resolver will provide its authentication credentials if the server where the URL is located presents an HTTP 401 status code along with registry-specific HTTP headers. If an attacker publishes a public image with a manifest that directs one of the layers to be fetched from a web server they control and they trick a user or system into pulling the image, they can obtain the credentials used for pulling that image. In some cases, this may be the user's username and password for the registry. In other cases, this may be the credentials attached to the cloud virtual instance which can grant access to other cloud resources in the account. The default containerd resolver is used by the cri-containerd plugin (which can be used by Kubernetes), the ctr development tool, and other client programs that have explicitly linked against it. This vulnerability has been fixed in containerd 1.2.14. containerd 1.3 and later are not affected. If you are using containerd 1.3 or later, you are not affected. If you are using cri-containerd in the 1.2 series or prior, you should ensure you only pull images from trusted sources. Other container runtimes built on top of containerd but not using the default resolver (such as Docker) are not affected.",
    "publishedDate": "2020-10-16T17:15Z",
    "cvssScore": 6.1,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-15157",
    "technology": "kubernetes",
    "version": "1.2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In containerd (an industry-standard container runtime) before version 1.2.14 there is a credential leaking vulnerability. If a container image manifest in the OCI Image format or Docker Image V2 Schema 2 format includes a URL for the location of a specific image layer (otherwise known as a “foreign layer”), the default containerd resolver will follow that URL to attempt to download it. In v1.2.x but not 1.3.0 or later, the default containerd resolver will provide its authentication credentials if the server where the URL is located presents an HTTP 401 status code along with registry-specific HTTP headers. If an attacker publishes a public image with a manifest that directs one of the layers to be fetched from a web server they control and they trick a user or system into pulling the image, they can obtain the credentials used for pulling that image. In some cases, this may be the user's username and password for the registry. In other cases, this may be the credentials attached to the cloud virtual instance which can grant access to other cloud resources in the account. The default containerd resolver is used by the cri-containerd plugin (which can be used by Kubernetes), the ctr development tool, and other client programs that have explicitly linked against it. This vulnerability has been fixed in containerd 1.2.14. containerd 1.3 and later are not affected. If you are using containerd 1.3 or later, you are not affected. If you are using cri-containerd in the 1.2 series or prior, you should ensure you only pull images from trusted sources. Other container runtimes built on top of containerd but not using the default resolver (such as Docker) are not affected.",
    "publishedDate": "2020-10-16T17:15Z",
    "cvssScore": 6.1,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-1701",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubevirt:kubevirt:*:*:*:*:*:kubernetes:*:*",
    "description": "A flaw was found in the KubeVirt main virt-handler versions before 0.26.0 regarding the access permissions of virt-handler. An attacker with access to create VMs could attach any secret within their namespace, allowing them to read the contents of that secret.",
    "publishedDate": "2021-05-27T20:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-1742",
    "technology": "kubernetes",
    "version": "2.3.0-30",
    "vulnerable": false,
    "cpeUri": "",
    "description": "An insecure modification vulnerability flaw was found in containers using nmstate/kubernetes-nmstate-handler. An attacker with access to the container could use this flaw to modify /etc/passwd and escalate their privileges. Versions before kubernetes-nmstate-handler-container-v2.3.0-30 are affected.",
    "publishedDate": "2021-06-07T20:15Z",
    "cvssScore": 7,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-1742",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:nmstate:kubernetes-nmstate:*:*:*:*:*:*:*:*",
    "description": "An insecure modification vulnerability flaw was found in containers using nmstate/kubernetes-nmstate-handler. An attacker with access to the container could use this flaw to modify /etc/passwd and escalate their privileges. Versions before kubernetes-nmstate-handler-container-v2.3.0-30 are affected.",
    "publishedDate": "2021-06-07T20:15Z",
    "cvssScore": 7,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-2121",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:jenkins:google_kubernetes_engine:*:*:*:*:*:jenkins:*:*",
    "description": "Jenkins Google Kubernetes Engine Plugin 0.8.0 and earlier does not configure its YAML parser to prevent the instantiation of arbitrary types, resulting in a remote code execution vulnerability.",
    "publishedDate": "2020-02-12T15:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-2211",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:jenkins:kubernetes_ci:*:*:*:*:*:jenkins:*:*",
    "description": "Jenkins ElasticBox Jenkins Kubernetes CI/CD Plugin 1.3 and earlier does not configure its YAML parser to prevent the instantiation of arbitrary types, resulting in a remote code execution vulnerability.",
    "publishedDate": "2020-07-02T15:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-2307",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:jenkins:kubernetes:*:*:*:*:*:jenkins:*:*",
    "description": "Jenkins Kubernetes Plugin 1.27.3 and earlier allows low-privilege users to access possibly sensitive Jenkins controller environment variables.",
    "publishedDate": "2020-11-04T15:15Z",
    "cvssScore": 4.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-2308",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:jenkins:kubernetes:*:*:*:*:*:jenkins:*:*",
    "description": "A missing permission check in Jenkins Kubernetes Plugin 1.27.3 and earlier allows attackers with Overall/Read permission to list global pod template names.",
    "publishedDate": "2020-11-04T15:15Z",
    "cvssScore": 4.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-2309",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:jenkins:kubernetes:*:*:*:*:*:jenkins:*:*",
    "description": "A missing/An incorrect permission check in Jenkins Kubernetes Plugin 1.27.3 and earlier allows attackers with Overall/Read permission to enumerate credentials IDs of credentials stored in Jenkins.",
    "publishedDate": "2020-11-04T15:15Z",
    "cvssScore": 4.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-25655",
    "technology": "kubernetes",
    "version": "2.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:redhat:advanced_cluster_management_for_kubernetes:2.0:*:*:*:*:*:*:*",
    "description": "An issue was discovered in ManagedClusterView API, that could allow secrets to be disclosed to users without the correct permissions. Views created for an admin user would be made available for a short time to users with only view permission. In this short time window the user with view permission could read cluster secrets that should only be disclosed to admin users.",
    "publishedDate": "2020-11-09T15:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.0",
      "startExcluding": "2.0"
    }
  },
  {
    "cveId": "CVE-2020-25688",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:redhat:advanced_cluster_management_for_kubernetes:*:*:*:*:*:*:*:*",
    "description": "A flaw was found in rhacm versions before 2.0.5 and before 2.1.0. Two internal service APIs were incorrectly provisioned using a test certificate from the source repository. This would result in all installations using the same certificates. If an attacker could observe network traffic internal to a cluster, they could use the private key to decode API requests that should be protected by TLS sessions, potentially obtaining information they would not otherwise be able to. These certificates are not used for service authentication, so no opportunity for impersonation or active MITM attacks were made possible.",
    "publishedDate": "2020-11-23T22:15Z",
    "cvssScore": 3.5,
    "severity": "LOW",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-26278",
    "technology": "kubernetes",
    "version": "2.8.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Weave Net is open source software which creates a virtual network that connects Docker containers across multiple hosts and enables their automatic discovery. Weave Net before version 2.8.0 has a vulnerability in which can allow an attacker to take over any host in the cluster. Weave Net is supplied with a manifest that runs pods on every node in a Kubernetes cluster, which are responsible for managing network connections for all other pods in the cluster. This requires a lot of power over the host, and the manifest sets `privileged: true`, which gives it that power. It also set `hostPID: true`, which gave it the ability to access all other processes on the host, and write anywhere in the root filesystem of the host. This setting was not necessary, and is being removed. You are only vulnerable if you have an additional vulnerability (e.g. a bug in Kubernetes) or misconfiguration that allows an attacker to run code inside the Weave Net pod, No such bug is known at the time of release, and there are no known instances of this being exploited. Weave Net 2.8.0 removes the hostPID setting and moves CNI plugin install to an init container. Users who do not update to 2.8.0 can edit the hostPID line in their existing DaemonSet manifest to say false instead of true, arrange some other way to install CNI plugins (e.g. Ansible) and remove those mounts from the DaemonSet manifest.",
    "publishedDate": "2021-01-20T22:15Z",
    "cvssScore": 8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-35514",
    "technology": "kubernetes",
    "version": "4.7.0-202105111858.p0.",
    "vulnerable": false,
    "cpeUri": "",
    "description": "An insecure modification flaw in the /etc/kubernetes/kubeconfig file was found in OpenShift. This flaw allows an attacker with access to a running container which mounts /etc/kubernetes or has local access to the node, to copy this kubeconfig file and attempt to add their own node to the OpenShift cluster. The highest threat from this vulnerability is to confidentiality, integrity, as well as system availability. This flaw affects versions before openshift4/ose-machine-config-operator v4.7.0-202105111858.p0.",
    "publishedDate": "2021-06-02T14:15Z",
    "cvssScore": 7,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-7010",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:elastic:elastic_cloud_on_kubernetes:*:*:*:*:*:*:*:*",
    "description": "Elastic Cloud on Kubernetes (ECK) versions prior to 1.1.0 generate passwords using a weak random number generator. If an attacker is able to determine when the current Elastic Stack cluster was deployed they may be able to more easily brute force the Elasticsearch credentials generated by ECK.",
    "publishedDate": "2020-06-03T18:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-7922",
    "technology": "kubernetes",
    "version": "1.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "X.509 certificates generated by the MongoDB Enterprise Kubernetes Operator may allow an attacker with access to the Kubernetes cluster improper access to MongoDB instances. Customers who do not use X.509 authentication, and those who do not use the Operator to generate their X.509 certificates are unaffected. This issue affects MongoDB Enterprise Kubernetes Operator version 1.0, MongoDB Enterprise Kubernetes Operator version 1.1, MongoDB Enterprise Kubernetes Operator version 1.2 versions prior to 1.2.4, MongoDB Enterprise Kubernetes Operator version 1.3 versions prior to 1.3.1, 1.2, 1.4 versions prior to 1.4.4.",
    "publishedDate": "2020-04-09T18:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-7922",
    "technology": "kubernetes",
    "version": "1.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "X.509 certificates generated by the MongoDB Enterprise Kubernetes Operator may allow an attacker with access to the Kubernetes cluster improper access to MongoDB instances. Customers who do not use X.509 authentication, and those who do not use the Operator to generate their X.509 certificates are unaffected. This issue affects MongoDB Enterprise Kubernetes Operator version 1.0, MongoDB Enterprise Kubernetes Operator version 1.1, MongoDB Enterprise Kubernetes Operator version 1.2 versions prior to 1.2.4, MongoDB Enterprise Kubernetes Operator version 1.3 versions prior to 1.3.1, 1.2, 1.4 versions prior to 1.4.4.",
    "publishedDate": "2020-04-09T18:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-7922",
    "technology": "kubernetes",
    "version": "1.2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "X.509 certificates generated by the MongoDB Enterprise Kubernetes Operator may allow an attacker with access to the Kubernetes cluster improper access to MongoDB instances. Customers who do not use X.509 authentication, and those who do not use the Operator to generate their X.509 certificates are unaffected. This issue affects MongoDB Enterprise Kubernetes Operator version 1.0, MongoDB Enterprise Kubernetes Operator version 1.1, MongoDB Enterprise Kubernetes Operator version 1.2 versions prior to 1.2.4, MongoDB Enterprise Kubernetes Operator version 1.3 versions prior to 1.3.1, 1.2, 1.4 versions prior to 1.4.4.",
    "publishedDate": "2020-04-09T18:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-7922",
    "technology": "kubernetes",
    "version": "1.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "X.509 certificates generated by the MongoDB Enterprise Kubernetes Operator may allow an attacker with access to the Kubernetes cluster improper access to MongoDB instances. Customers who do not use X.509 authentication, and those who do not use the Operator to generate their X.509 certificates are unaffected. This issue affects MongoDB Enterprise Kubernetes Operator version 1.0, MongoDB Enterprise Kubernetes Operator version 1.1, MongoDB Enterprise Kubernetes Operator version 1.2 versions prior to 1.2.4, MongoDB Enterprise Kubernetes Operator version 1.3 versions prior to 1.3.1, 1.2, 1.4 versions prior to 1.4.4.",
    "publishedDate": "2020-04-09T18:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-7922",
    "technology": "kubernetes",
    "version": "1.1",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:mongodb:mongodb_enterprise_kubernetes_operator:1.1:*:*:*:*:*:*:*",
    "description": "X.509 certificates generated by the MongoDB Enterprise Kubernetes Operator may allow an attacker with access to the Kubernetes cluster improper access to MongoDB instances. Customers who do not use X.509 authentication, and those who do not use the Operator to generate their X.509 certificates are unaffected. This issue affects MongoDB Enterprise Kubernetes Operator version 1.0, MongoDB Enterprise Kubernetes Operator version 1.1, MongoDB Enterprise Kubernetes Operator version 1.2 versions prior to 1.2.4, MongoDB Enterprise Kubernetes Operator version 1.3 versions prior to 1.3.1, 1.2, 1.4 versions prior to 1.4.4.",
    "publishedDate": "2020-04-09T18:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.1",
      "startExcluding": "1.1"
    }
  },
  {
    "cveId": "CVE-2020-7922",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:mongodb:mongodb_enterprise_kubernetes_operator:*:*:*:*:*:*:*:*",
    "description": "X.509 certificates generated by the MongoDB Enterprise Kubernetes Operator may allow an attacker with access to the Kubernetes cluster improper access to MongoDB instances. Customers who do not use X.509 authentication, and those who do not use the Operator to generate their X.509 certificates are unaffected. This issue affects MongoDB Enterprise Kubernetes Operator version 1.0, MongoDB Enterprise Kubernetes Operator version 1.1, MongoDB Enterprise Kubernetes Operator version 1.2 versions prior to 1.2.4, MongoDB Enterprise Kubernetes Operator version 1.3 versions prior to 1.3.1, 1.2, 1.4 versions prior to 1.4.4.",
    "publishedDate": "2020-04-09T18:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-7922",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:mongodb:mongodb_enterprise_kubernetes_operator:*:*:*:*:*:*:*:*",
    "description": "X.509 certificates generated by the MongoDB Enterprise Kubernetes Operator may allow an attacker with access to the Kubernetes cluster improper access to MongoDB instances. Customers who do not use X.509 authentication, and those who do not use the Operator to generate their X.509 certificates are unaffected. This issue affects MongoDB Enterprise Kubernetes Operator version 1.0, MongoDB Enterprise Kubernetes Operator version 1.1, MongoDB Enterprise Kubernetes Operator version 1.2 versions prior to 1.2.4, MongoDB Enterprise Kubernetes Operator version 1.3 versions prior to 1.3.1, 1.2, 1.4 versions prior to 1.4.4.",
    "publishedDate": "2020-04-09T18:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-7922",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:mongodb:mongodb_enterprise_kubernetes_operator:*:*:*:*:*:*:*:*",
    "description": "X.509 certificates generated by the MongoDB Enterprise Kubernetes Operator may allow an attacker with access to the Kubernetes cluster improper access to MongoDB instances. Customers who do not use X.509 authentication, and those who do not use the Operator to generate their X.509 certificates are unaffected. This issue affects MongoDB Enterprise Kubernetes Operator version 1.0, MongoDB Enterprise Kubernetes Operator version 1.1, MongoDB Enterprise Kubernetes Operator version 1.2 versions prior to 1.2.4, MongoDB Enterprise Kubernetes Operator version 1.3 versions prior to 1.3.1, 1.2, 1.4 versions prior to 1.4.4.",
    "publishedDate": "2020-04-09T18:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-7922",
    "technology": "kubernetes",
    "version": "1.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:mongodb:mongodb_enterprise_kubernetes_operator:1.0:*:*:*:*:*:*:*",
    "description": "X.509 certificates generated by the MongoDB Enterprise Kubernetes Operator may allow an attacker with access to the Kubernetes cluster improper access to MongoDB instances. Customers who do not use X.509 authentication, and those who do not use the Operator to generate their X.509 certificates are unaffected. This issue affects MongoDB Enterprise Kubernetes Operator version 1.0, MongoDB Enterprise Kubernetes Operator version 1.1, MongoDB Enterprise Kubernetes Operator version 1.2 versions prior to 1.2.4, MongoDB Enterprise Kubernetes Operator version 1.3 versions prior to 1.3.1, 1.2, 1.4 versions prior to 1.4.4.",
    "publishedDate": "2020-04-09T18:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.0",
      "startExcluding": "1.0"
    }
  },
  {
    "cveId": "CVE-2020-8551",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "The Kubelet component in versions 1.15.0-1.15.9, 1.16.0-1.16.6, and 1.17.0-1.17.2 has been found to be vulnerable to a denial of service attack via the kubelet API, including the unauthenticated HTTP read-only API typically served on port 10255, and the authenticated HTTPS API typically served on port 10250.",
    "publishedDate": "2020-03-27T15:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8551",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "The Kubelet component in versions 1.15.0-1.15.9, 1.16.0-1.16.6, and 1.17.0-1.17.2 has been found to be vulnerable to a denial of service attack via the kubelet API, including the unauthenticated HTTP read-only API typically served on port 10255, and the authenticated HTTPS API typically served on port 10250.",
    "publishedDate": "2020-03-27T15:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8551",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "The Kubelet component in versions 1.15.0-1.15.9, 1.16.0-1.16.6, and 1.17.0-1.17.2 has been found to be vulnerable to a denial of service attack via the kubelet API, including the unauthenticated HTTP read-only API typically served on port 10255, and the authenticated HTTPS API typically served on port 10250.",
    "publishedDate": "2020-03-27T15:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8552",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "The Kubernetes API server component in versions prior to 1.15.9, 1.16.0-1.16.6, and 1.17.0-1.17.2 has been found to be vulnerable to a denial of service attack via successful API requests.",
    "publishedDate": "2020-03-27T15:15Z",
    "cvssScore": 4.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8552",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "The Kubernetes API server component in versions prior to 1.15.9, 1.16.0-1.16.6, and 1.17.0-1.17.2 has been found to be vulnerable to a denial of service attack via successful API requests.",
    "publishedDate": "2020-03-27T15:15Z",
    "cvssScore": 4.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8552",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "The Kubernetes API server component in versions prior to 1.15.9, 1.16.0-1.16.6, and 1.17.0-1.17.2 has been found to be vulnerable to a denial of service attack via successful API requests.",
    "publishedDate": "2020-03-27T15:15Z",
    "cvssScore": 4.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8553",
    "technology": "kubernetes",
    "version": "0.28.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The Kubernetes ingress-nginx component prior to version 0.28.0 allows a user with the ability to create namespaces and to read and create ingress objects to overwrite the password file of another ingress which uses nginx.ingress.kubernetes.io/auth-type: basic and which has a hyphenated namespace or secret name.",
    "publishedDate": "2020-07-29T15:15Z",
    "cvssScore": 5.9,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8553",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:ingress-nginx:*:*:*:*:*:*:*:*",
    "description": "The Kubernetes ingress-nginx component prior to version 0.28.0 allows a user with the ability to create namespaces and to read and create ingress objects to overwrite the password file of another ingress which uses nginx.ingress.kubernetes.io/auth-type: basic and which has a hyphenated namespace or secret name.",
    "publishedDate": "2020-07-29T15:15Z",
    "cvssScore": 5.9,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8554",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.",
    "publishedDate": "2021-01-21T17:15Z",
    "cvssScore": 5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8555",
    "technology": "kubernetes",
    "version": "1.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The Kubernetes kube-controller-manager in versions v1.0-1.14, versions prior to v1.15.12, v1.16.9, v1.17.5, and version v1.18.0 are vulnerable to a Server Side Request Forgery (SSRF) that allows certain authorized users to leak up to 500 bytes of arbitrary information from unprotected endpoints within the master's host network (such as link-local or loopback services).",
    "publishedDate": "2020-06-05T17:15Z",
    "cvssScore": 6.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8555",
    "technology": "kubernetes",
    "version": "1.15.12",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The Kubernetes kube-controller-manager in versions v1.0-1.14, versions prior to v1.15.12, v1.16.9, v1.17.5, and version v1.18.0 are vulnerable to a Server Side Request Forgery (SSRF) that allows certain authorized users to leak up to 500 bytes of arbitrary information from unprotected endpoints within the master's host network (such as link-local or loopback services).",
    "publishedDate": "2020-06-05T17:15Z",
    "cvssScore": 6.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8555",
    "technology": "kubernetes",
    "version": "1.16.9",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The Kubernetes kube-controller-manager in versions v1.0-1.14, versions prior to v1.15.12, v1.16.9, v1.17.5, and version v1.18.0 are vulnerable to a Server Side Request Forgery (SSRF) that allows certain authorized users to leak up to 500 bytes of arbitrary information from unprotected endpoints within the master's host network (such as link-local or loopback services).",
    "publishedDate": "2020-06-05T17:15Z",
    "cvssScore": 6.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8555",
    "technology": "kubernetes",
    "version": "1.17.5",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The Kubernetes kube-controller-manager in versions v1.0-1.14, versions prior to v1.15.12, v1.16.9, v1.17.5, and version v1.18.0 are vulnerable to a Server Side Request Forgery (SSRF) that allows certain authorized users to leak up to 500 bytes of arbitrary information from unprotected endpoints within the master's host network (such as link-local or loopback services).",
    "publishedDate": "2020-06-05T17:15Z",
    "cvssScore": 6.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8555",
    "technology": "kubernetes",
    "version": "1.18.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The Kubernetes kube-controller-manager in versions v1.0-1.14, versions prior to v1.15.12, v1.16.9, v1.17.5, and version v1.18.0 are vulnerable to a Server Side Request Forgery (SSRF) that allows certain authorized users to leak up to 500 bytes of arbitrary information from unprotected endpoints within the master's host network (such as link-local or loopback services).",
    "publishedDate": "2020-06-05T17:15Z",
    "cvssScore": 6.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8555",
    "technology": "kubernetes",
    "version": "1.18.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:1.18.0:-:*:*:*:*:*:*",
    "description": "The Kubernetes kube-controller-manager in versions v1.0-1.14, versions prior to v1.15.12, v1.16.9, v1.17.5, and version v1.18.0 are vulnerable to a Server Side Request Forgery (SSRF) that allows certain authorized users to leak up to 500 bytes of arbitrary information from unprotected endpoints within the master's host network (such as link-local or loopback services).",
    "publishedDate": "2020-06-05T17:15Z",
    "cvssScore": 6.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.18.0",
      "startExcluding": "1.18.0"
    }
  },
  {
    "cveId": "CVE-2020-8555",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "The Kubernetes kube-controller-manager in versions v1.0-1.14, versions prior to v1.15.12, v1.16.9, v1.17.5, and version v1.18.0 are vulnerable to a Server Side Request Forgery (SSRF) that allows certain authorized users to leak up to 500 bytes of arbitrary information from unprotected endpoints within the master's host network (such as link-local or loopback services).",
    "publishedDate": "2020-06-05T17:15Z",
    "cvssScore": 6.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8555",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "The Kubernetes kube-controller-manager in versions v1.0-1.14, versions prior to v1.15.12, v1.16.9, v1.17.5, and version v1.18.0 are vulnerable to a Server Side Request Forgery (SSRF) that allows certain authorized users to leak up to 500 bytes of arbitrary information from unprotected endpoints within the master's host network (such as link-local or loopback services).",
    "publishedDate": "2020-06-05T17:15Z",
    "cvssScore": 6.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8555",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "The Kubernetes kube-controller-manager in versions v1.0-1.14, versions prior to v1.15.12, v1.16.9, v1.17.5, and version v1.18.0 are vulnerable to a Server Side Request Forgery (SSRF) that allows certain authorized users to leak up to 500 bytes of arbitrary information from unprotected endpoints within the master's host network (such as link-local or loopback services).",
    "publishedDate": "2020-06-05T17:15Z",
    "cvssScore": 6.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8557",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "The Kubernetes kubelet component in versions 1.1-1.16.12, 1.17.0-1.17.8 and 1.18.0-1.18.5 do not account for disk usage by a pod which writes to its own /etc/hosts file. The /etc/hosts file mounted in a pod by kubelet is not included by the kubelet eviction manager when calculating ephemeral storage usage by a pod. If a pod writes a large amount of data to the /etc/hosts file, it could fill the storage space of the node and cause the node to fail.",
    "publishedDate": "2020-07-23T17:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8557",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "The Kubernetes kubelet component in versions 1.1-1.16.12, 1.17.0-1.17.8 and 1.18.0-1.18.5 do not account for disk usage by a pod which writes to its own /etc/hosts file. The /etc/hosts file mounted in a pod by kubelet is not included by the kubelet eviction manager when calculating ephemeral storage usage by a pod. If a pod writes a large amount of data to the /etc/hosts file, it could fill the storage space of the node and cause the node to fail.",
    "publishedDate": "2020-07-23T17:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8557",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "The Kubernetes kubelet component in versions 1.1-1.16.12, 1.17.0-1.17.8 and 1.18.0-1.18.5 do not account for disk usage by a pod which writes to its own /etc/hosts file. The /etc/hosts file mounted in a pod by kubelet is not included by the kubelet eviction manager when calculating ephemeral storage usage by a pod. If a pod writes a large amount of data to the /etc/hosts file, it could fill the storage space of the node and cause the node to fail.",
    "publishedDate": "2020-07-23T17:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8558",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "The Kubelet and kube-proxy components in versions 1.1.0-1.16.10, 1.17.0-1.17.6, and 1.18.0-1.18.3 were found to contain a security issue which allows adjacent hosts to reach TCP and UDP services bound to 127.0.0.1 running on the node or in the node's network namespace. Such a service is generally thought to be reachable only by other processes on the same host, but due to this defeect, could be reachable by other hosts on the same LAN as the node, or by containers running on the same node as the service.",
    "publishedDate": "2020-07-27T20:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8558",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "The Kubelet and kube-proxy components in versions 1.1.0-1.16.10, 1.17.0-1.17.6, and 1.18.0-1.18.3 were found to contain a security issue which allows adjacent hosts to reach TCP and UDP services bound to 127.0.0.1 running on the node or in the node's network namespace. Such a service is generally thought to be reachable only by other processes on the same host, but due to this defeect, could be reachable by other hosts on the same LAN as the node, or by containers running on the same node as the service.",
    "publishedDate": "2020-07-27T20:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8558",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "The Kubelet and kube-proxy components in versions 1.1.0-1.16.10, 1.17.0-1.17.6, and 1.18.0-1.18.3 were found to contain a security issue which allows adjacent hosts to reach TCP and UDP services bound to 127.0.0.1 running on the node or in the node's network namespace. Such a service is generally thought to be reachable only by other processes on the same host, but due to this defeect, could be reachable by other hosts on the same LAN as the node, or by containers running on the same node as the service.",
    "publishedDate": "2020-07-27T20:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8559",
    "technology": "kubernetes",
    "version": "1.6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The Kubernetes kube-apiserver in versions v1.6-v1.15, and versions prior to v1.16.13, v1.17.9 and v1.18.6 are vulnerable to an unvalidated redirect on proxied upgrade requests that could allow an attacker to escalate privileges from a node compromise to a full cluster compromise.",
    "publishedDate": "2020-07-22T14:15Z",
    "cvssScore": 6.8,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8559",
    "technology": "kubernetes",
    "version": "1.15",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The Kubernetes kube-apiserver in versions v1.6-v1.15, and versions prior to v1.16.13, v1.17.9 and v1.18.6 are vulnerable to an unvalidated redirect on proxied upgrade requests that could allow an attacker to escalate privileges from a node compromise to a full cluster compromise.",
    "publishedDate": "2020-07-22T14:15Z",
    "cvssScore": 6.8,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8559",
    "technology": "kubernetes",
    "version": "1.16.13",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The Kubernetes kube-apiserver in versions v1.6-v1.15, and versions prior to v1.16.13, v1.17.9 and v1.18.6 are vulnerable to an unvalidated redirect on proxied upgrade requests that could allow an attacker to escalate privileges from a node compromise to a full cluster compromise.",
    "publishedDate": "2020-07-22T14:15Z",
    "cvssScore": 6.8,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8559",
    "technology": "kubernetes",
    "version": "1.17.9",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The Kubernetes kube-apiserver in versions v1.6-v1.15, and versions prior to v1.16.13, v1.17.9 and v1.18.6 are vulnerable to an unvalidated redirect on proxied upgrade requests that could allow an attacker to escalate privileges from a node compromise to a full cluster compromise.",
    "publishedDate": "2020-07-22T14:15Z",
    "cvssScore": 6.8,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8559",
    "technology": "kubernetes",
    "version": "1.18.6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The Kubernetes kube-apiserver in versions v1.6-v1.15, and versions prior to v1.16.13, v1.17.9 and v1.18.6 are vulnerable to an unvalidated redirect on proxied upgrade requests that could allow an attacker to escalate privileges from a node compromise to a full cluster compromise.",
    "publishedDate": "2020-07-22T14:15Z",
    "cvssScore": 6.8,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8559",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "The Kubernetes kube-apiserver in versions v1.6-v1.15, and versions prior to v1.16.13, v1.17.9 and v1.18.6 are vulnerable to an unvalidated redirect on proxied upgrade requests that could allow an attacker to escalate privileges from a node compromise to a full cluster compromise.",
    "publishedDate": "2020-07-22T14:15Z",
    "cvssScore": 6.8,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8559",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "The Kubernetes kube-apiserver in versions v1.6-v1.15, and versions prior to v1.16.13, v1.17.9 and v1.18.6 are vulnerable to an unvalidated redirect on proxied upgrade requests that could allow an attacker to escalate privileges from a node compromise to a full cluster compromise.",
    "publishedDate": "2020-07-22T14:15Z",
    "cvssScore": 6.8,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8559",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "The Kubernetes kube-apiserver in versions v1.6-v1.15, and versions prior to v1.16.13, v1.17.9 and v1.18.6 are vulnerable to an unvalidated redirect on proxied upgrade requests that could allow an attacker to escalate privileges from a node compromise to a full cluster compromise.",
    "publishedDate": "2020-07-22T14:15Z",
    "cvssScore": 6.8,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8559",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "The Kubernetes kube-apiserver in versions v1.6-v1.15, and versions prior to v1.16.13, v1.17.9 and v1.18.6 are vulnerable to an unvalidated redirect on proxied upgrade requests that could allow an attacker to escalate privileges from a node compromise to a full cluster compromise.",
    "publishedDate": "2020-07-22T14:15Z",
    "cvssScore": 6.8,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8561",
    "technology": "kubernetes",
    "version": "1.20.11",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:1.20.11:-:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where actors that control the responses of MutatingWebhookConfiguration or ValidatingWebhookConfiguration requests are able to redirect kube-apiserver requests to private networks of the apiserver. If that user can view kube-apiserver logs when the log level is set to 10, they can view the redirected responses and headers in the logs.",
    "publishedDate": "2021-09-20T17:15Z",
    "cvssScore": 4.1,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.20.11",
      "startExcluding": "1.20.11"
    }
  },
  {
    "cveId": "CVE-2020-8561",
    "technology": "kubernetes",
    "version": "1.21.5",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:1.21.5:-:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where actors that control the responses of MutatingWebhookConfiguration or ValidatingWebhookConfiguration requests are able to redirect kube-apiserver requests to private networks of the apiserver. If that user can view kube-apiserver logs when the log level is set to 10, they can view the redirected responses and headers in the logs.",
    "publishedDate": "2021-09-20T17:15Z",
    "cvssScore": 4.1,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.21.5",
      "startExcluding": "1.21.5"
    }
  },
  {
    "cveId": "CVE-2020-8561",
    "technology": "kubernetes",
    "version": "1.22.2",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:1.22.2:-:*:*:*:*:*:*",
    "description": "A security issue was discovered in Kubernetes where actors that control the responses of MutatingWebhookConfiguration or ValidatingWebhookConfiguration requests are able to redirect kube-apiserver requests to private networks of the apiserver. If that user can view kube-apiserver logs when the log level is set to 10, they can view the redirected responses and headers in the logs.",
    "publishedDate": "2021-09-20T17:15Z",
    "cvssScore": 4.1,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.22.2",
      "startExcluding": "1.22.2"
    }
  },
  {
    "cveId": "CVE-2020-8562",
    "technology": "kubernetes",
    "version": "1.21.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:1.21.0:*:*:*:*:*:*:*",
    "description": "As mitigations to a report from 2019 and CVE-2020-8555, Kubernetes attempts to prevent proxied connections from accessing link-local or localhost networks when making user-driven connections to Services, Pods, Nodes, or StorageClass service providers. As part of this mitigation Kubernetes does a DNS name resolution check and validates that response IPs are not in the link-local (169.254.0.0/16) or localhost (127.0.0.0/8) range. Kubernetes then performs a second DNS resolution without validation for the actual connection. If a non-standard DNS server returns different non-cached responses, a user may be able to bypass the proxy IP restriction and access private networks on the control plane.",
    "publishedDate": "2022-02-01T11:15Z",
    "cvssScore": 3.1,
    "severity": "LOW",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.21.0",
      "startExcluding": "1.21.0"
    }
  },
  {
    "cveId": "CVE-2020-8562",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "As mitigations to a report from 2019 and CVE-2020-8555, Kubernetes attempts to prevent proxied connections from accessing link-local or localhost networks when making user-driven connections to Services, Pods, Nodes, or StorageClass service providers. As part of this mitigation Kubernetes does a DNS name resolution check and validates that response IPs are not in the link-local (169.254.0.0/16) or localhost (127.0.0.0/8) range. Kubernetes then performs a second DNS resolution without validation for the actual connection. If a non-standard DNS server returns different non-cached responses, a user may be able to bypass the proxy IP restriction and access private networks on the control plane.",
    "publishedDate": "2022-02-01T11:15Z",
    "cvssScore": 3.1,
    "severity": "LOW",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8562",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "As mitigations to a report from 2019 and CVE-2020-8555, Kubernetes attempts to prevent proxied connections from accessing link-local or localhost networks when making user-driven connections to Services, Pods, Nodes, or StorageClass service providers. As part of this mitigation Kubernetes does a DNS name resolution check and validates that response IPs are not in the link-local (169.254.0.0/16) or localhost (127.0.0.0/8) range. Kubernetes then performs a second DNS resolution without validation for the actual connection. If a non-standard DNS server returns different non-cached responses, a user may be able to bypass the proxy IP restriction and access private networks on the control plane.",
    "publishedDate": "2022-02-01T11:15Z",
    "cvssScore": 3.1,
    "severity": "LOW",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8562",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "As mitigations to a report from 2019 and CVE-2020-8555, Kubernetes attempts to prevent proxied connections from accessing link-local or localhost networks when making user-driven connections to Services, Pods, Nodes, or StorageClass service providers. As part of this mitigation Kubernetes does a DNS name resolution check and validates that response IPs are not in the link-local (169.254.0.0/16) or localhost (127.0.0.0/8) range. Kubernetes then performs a second DNS resolution without validation for the actual connection. If a non-standard DNS server returns different non-cached responses, a user may be able to bypass the proxy IP restriction and access private networks on the control plane.",
    "publishedDate": "2022-02-01T11:15Z",
    "cvssScore": 3.1,
    "severity": "LOW",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8563",
    "technology": "kubernetes",
    "version": "1.19.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In Kubernetes clusters using VSphere as a cloud provider, with a logging level set to 4 or above, VSphere cloud credentials will be leaked in the cloud controller manager's log. This affects \u003c v1.19.3.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8563",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "In Kubernetes clusters using VSphere as a cloud provider, with a logging level set to 4 or above, VSphere cloud credentials will be leaked in the cloud controller manager's log. This affects \u003c v1.19.3.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8564",
    "technology": "kubernetes",
    "version": "1.19.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In Kubernetes clusters using a logging level of at least 4, processing a malformed docker config file will result in the contents of the docker config file being leaked, which can include pull secrets or other registry credentials. This affects \u003c v1.19.3, \u003c v1.18.10, \u003c v1.17.13.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8564",
    "technology": "kubernetes",
    "version": "1.18.10",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In Kubernetes clusters using a logging level of at least 4, processing a malformed docker config file will result in the contents of the docker config file being leaked, which can include pull secrets or other registry credentials. This affects \u003c v1.19.3, \u003c v1.18.10, \u003c v1.17.13.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8564",
    "technology": "kubernetes",
    "version": "1.17.13",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In Kubernetes clusters using a logging level of at least 4, processing a malformed docker config file will result in the contents of the docker config file being leaked, which can include pull secrets or other registry credentials. This affects \u003c v1.19.3, \u003c v1.18.10, \u003c v1.17.13.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8564",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "In Kubernetes clusters using a logging level of at least 4, processing a malformed docker config file will result in the contents of the docker config file being leaked, which can include pull secrets or other registry credentials. This affects \u003c v1.19.3, \u003c v1.18.10, \u003c v1.17.13.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8564",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "In Kubernetes clusters using a logging level of at least 4, processing a malformed docker config file will result in the contents of the docker config file being leaked, which can include pull secrets or other registry credentials. This affects \u003c v1.19.3, \u003c v1.18.10, \u003c v1.17.13.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8564",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "In Kubernetes clusters using a logging level of at least 4, processing a malformed docker config file will result in the contents of the docker config file being leaked, which can include pull secrets or other registry credentials. This affects \u003c v1.19.3, \u003c v1.18.10, \u003c v1.17.13.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8565",
    "technology": "kubernetes",
    "version": "1.19.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In Kubernetes, if the logging level is set to at least 9, authorization and bearer tokens will be written to log files. This can occur both in API server logs and client tool output like kubectl. This affects \u003c= v1.19.3, \u003c= v1.18.10, \u003c= v1.17.13, \u003c v1.20.0-alpha2.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8565",
    "technology": "kubernetes",
    "version": "1.18.10",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In Kubernetes, if the logging level is set to at least 9, authorization and bearer tokens will be written to log files. This can occur both in API server logs and client tool output like kubectl. This affects \u003c= v1.19.3, \u003c= v1.18.10, \u003c= v1.17.13, \u003c v1.20.0-alpha2.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8565",
    "technology": "kubernetes",
    "version": "1.17.13",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In Kubernetes, if the logging level is set to at least 9, authorization and bearer tokens will be written to log files. This can occur both in API server logs and client tool output like kubectl. This affects \u003c= v1.19.3, \u003c= v1.18.10, \u003c= v1.17.13, \u003c v1.20.0-alpha2.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8565",
    "technology": "kubernetes",
    "version": "1.20.0-alpha2.",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In Kubernetes, if the logging level is set to at least 9, authorization and bearer tokens will be written to log files. This can occur both in API server logs and client tool output like kubectl. This affects \u003c= v1.19.3, \u003c= v1.18.10, \u003c= v1.17.13, \u003c v1.20.0-alpha2.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8565",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "In Kubernetes, if the logging level is set to at least 9, authorization and bearer tokens will be written to log files. This can occur both in API server logs and client tool output like kubectl. This affects \u003c= v1.19.3, \u003c= v1.18.10, \u003c= v1.17.13, \u003c v1.20.0-alpha2.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8565",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "In Kubernetes, if the logging level is set to at least 9, authorization and bearer tokens will be written to log files. This can occur both in API server logs and client tool output like kubectl. This affects \u003c= v1.19.3, \u003c= v1.18.10, \u003c= v1.17.13, \u003c v1.20.0-alpha2.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8565",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "In Kubernetes, if the logging level is set to at least 9, authorization and bearer tokens will be written to log files. This can occur both in API server logs and client tool output like kubectl. This affects \u003c= v1.19.3, \u003c= v1.18.10, \u003c= v1.17.13, \u003c v1.20.0-alpha2.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8566",
    "technology": "kubernetes",
    "version": "1.19.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In Kubernetes clusters using Ceph RBD as a storage provisioner, with logging level of at least 4, Ceph RBD admin secrets can be written to logs. This occurs in kube-controller-manager's logs during provisioning of Ceph RBD persistent claims. This affects \u003c v1.19.3, \u003c v1.18.10, \u003c v1.17.13.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8566",
    "technology": "kubernetes",
    "version": "1.18.10",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In Kubernetes clusters using Ceph RBD as a storage provisioner, with logging level of at least 4, Ceph RBD admin secrets can be written to logs. This occurs in kube-controller-manager's logs during provisioning of Ceph RBD persistent claims. This affects \u003c v1.19.3, \u003c v1.18.10, \u003c v1.17.13.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8566",
    "technology": "kubernetes",
    "version": "1.17.13",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In Kubernetes clusters using Ceph RBD as a storage provisioner, with logging level of at least 4, Ceph RBD admin secrets can be written to logs. This occurs in kube-controller-manager's logs during provisioning of Ceph RBD persistent claims. This affects \u003c v1.19.3, \u003c v1.18.10, \u003c v1.17.13.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8566",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "In Kubernetes clusters using Ceph RBD as a storage provisioner, with logging level of at least 4, Ceph RBD admin secrets can be written to logs. This occurs in kube-controller-manager's logs during provisioning of Ceph RBD persistent claims. This affects \u003c v1.19.3, \u003c v1.18.10, \u003c v1.17.13.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8566",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "In Kubernetes clusters using Ceph RBD as a storage provisioner, with logging level of at least 4, Ceph RBD admin secrets can be written to logs. This occurs in kube-controller-manager's logs during provisioning of Ceph RBD persistent claims. This affects \u003c v1.19.3, \u003c v1.18.10, \u003c v1.17.13.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8566",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:kubernetes:*:*:*:*:*:*:*:*",
    "description": "In Kubernetes clusters using Ceph RBD as a storage provisioner, with logging level of at least 4, Ceph RBD admin secrets can be written to logs. This occurs in kube-controller-manager's logs during provisioning of Ceph RBD persistent claims. This affects \u003c v1.19.3, \u003c v1.18.10, \u003c v1.17.13.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8567",
    "technology": "kubernetes",
    "version": "0.0.6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Kubernetes Secrets Store CSI Driver Vault Plugin prior to v0.0.6, Azure Plugin prior to v0.0.10, and GCP Plugin prior to v0.2.0 allow an attacker who can create specially-crafted SecretProviderClass objects to write to arbitrary file paths on the host filesystem, including /var/lib/kubelet/pods.",
    "publishedDate": "2021-01-21T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8567",
    "technology": "kubernetes",
    "version": "0.0.10",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Kubernetes Secrets Store CSI Driver Vault Plugin prior to v0.0.6, Azure Plugin prior to v0.0.10, and GCP Plugin prior to v0.2.0 allow an attacker who can create specially-crafted SecretProviderClass objects to write to arbitrary file paths on the host filesystem, including /var/lib/kubelet/pods.",
    "publishedDate": "2021-01-21T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8567",
    "technology": "kubernetes",
    "version": "0.2.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Kubernetes Secrets Store CSI Driver Vault Plugin prior to v0.0.6, Azure Plugin prior to v0.0.10, and GCP Plugin prior to v0.2.0 allow an attacker who can create specially-crafted SecretProviderClass objects to write to arbitrary file paths on the host filesystem, including /var/lib/kubelet/pods.",
    "publishedDate": "2021-01-21T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8567",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:google:secret_manager_provider_for_secret_store_csi_driver:*:*:*:*:*:kubernetes:*:*",
    "description": "Kubernetes Secrets Store CSI Driver Vault Plugin prior to v0.0.6, Azure Plugin prior to v0.0.10, and GCP Plugin prior to v0.2.0 allow an attacker who can create specially-crafted SecretProviderClass objects to write to arbitrary file paths on the host filesystem, including /var/lib/kubelet/pods.",
    "publishedDate": "2021-01-21T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8567",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:hashicorp:vault_provider_for_secrets_store_csi_driver:*:*:*:*:*:kubernetes:*:*",
    "description": "Kubernetes Secrets Store CSI Driver Vault Plugin prior to v0.0.6, Azure Plugin prior to v0.0.10, and GCP Plugin prior to v0.2.0 allow an attacker who can create specially-crafted SecretProviderClass objects to write to arbitrary file paths on the host filesystem, including /var/lib/kubelet/pods.",
    "publishedDate": "2021-01-21T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8567",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:microsoft:azure_key_vault_provider_for_secrets_store_csi_driver:*:*:*:*:*:kubernetes:*:*",
    "description": "Kubernetes Secrets Store CSI Driver Vault Plugin prior to v0.0.6, Azure Plugin prior to v0.0.10, and GCP Plugin prior to v0.2.0 allow an attacker who can create specially-crafted SecretProviderClass objects to write to arbitrary file paths on the host filesystem, including /var/lib/kubelet/pods.",
    "publishedDate": "2021-01-21T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8568",
    "technology": "kubernetes",
    "version": "0.0.15",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Kubernetes Secrets Store CSI Driver versions v0.0.15 and v0.0.16 allow an attacker who can modify a SecretProviderClassPodStatus/Status resource the ability to write content to the host filesystem and sync file contents to Kubernetes Secrets. This includes paths under var/lib/kubelet/pods that contain other Kubernetes Secrets.",
    "publishedDate": "2021-01-21T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8568",
    "technology": "kubernetes",
    "version": "0.0.16",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Kubernetes Secrets Store CSI Driver versions v0.0.15 and v0.0.16 allow an attacker who can modify a SecretProviderClassPodStatus/Status resource the ability to write content to the host filesystem and sync file contents to Kubernetes Secrets. This includes paths under var/lib/kubelet/pods that contain other Kubernetes Secrets.",
    "publishedDate": "2021-01-21T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8568",
    "technology": "kubernetes",
    "version": "0.0.16",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:secrets_store_csi_driver:0.0.16:*:*:*:*:*:*:*",
    "description": "Kubernetes Secrets Store CSI Driver versions v0.0.15 and v0.0.16 allow an attacker who can modify a SecretProviderClassPodStatus/Status resource the ability to write content to the host filesystem and sync file contents to Kubernetes Secrets. This includes paths under var/lib/kubelet/pods that contain other Kubernetes Secrets.",
    "publishedDate": "2021-01-21T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "0.0.16",
      "startExcluding": "0.0.16"
    }
  },
  {
    "cveId": "CVE-2020-8568",
    "technology": "kubernetes",
    "version": "0.0.15",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:secrets_store_csi_driver:0.0.15:*:*:*:*:*:*:*",
    "description": "Kubernetes Secrets Store CSI Driver versions v0.0.15 and v0.0.16 allow an attacker who can modify a SecretProviderClassPodStatus/Status resource the ability to write content to the host filesystem and sync file contents to Kubernetes Secrets. This includes paths under var/lib/kubelet/pods that contain other Kubernetes Secrets.",
    "publishedDate": "2021-01-21T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "0.0.15",
      "startExcluding": "0.0.15"
    }
  },
  {
    "cveId": "CVE-2020-8569",
    "technology": "kubernetes",
    "version": "2.1.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Kubernetes CSI snapshot-controller prior to v2.1.3 and v3.0.2 could panic when processing a VolumeSnapshot custom resource when: - The VolumeSnapshot referenced a non-existing PersistentVolumeClaim and the VolumeSnapshot did not reference any VolumeSnapshotClass. - The snapshot-controller crashes, is automatically restarted by Kubernetes, and processes the same VolumeSnapshot custom resource after the restart, entering an endless crashloop. Only the volume snapshot feature is affected by this vulnerability. When exploited, users can’t take snapshots of their volumes or delete the snapshots. All other Kubernetes functionality is not affected.",
    "publishedDate": "2021-01-21T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8569",
    "technology": "kubernetes",
    "version": "3.0.2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Kubernetes CSI snapshot-controller prior to v2.1.3 and v3.0.2 could panic when processing a VolumeSnapshot custom resource when: - The VolumeSnapshot referenced a non-existing PersistentVolumeClaim and the VolumeSnapshot did not reference any VolumeSnapshotClass. - The snapshot-controller crashes, is automatically restarted by Kubernetes, and processes the same VolumeSnapshot custom resource after the restart, entering an endless crashloop. Only the volume snapshot feature is affected by this vulnerability. When exploited, users can’t take snapshots of their volumes or delete the snapshots. All other Kubernetes functionality is not affected.",
    "publishedDate": "2021-01-21T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8569",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:container_storage_interface_snapshotter:*:*:*:*:*:*:*:*",
    "description": "Kubernetes CSI snapshot-controller prior to v2.1.3 and v3.0.2 could panic when processing a VolumeSnapshot custom resource when: - The VolumeSnapshot referenced a non-existing PersistentVolumeClaim and the VolumeSnapshot did not reference any VolumeSnapshotClass. - The snapshot-controller crashes, is automatically restarted by Kubernetes, and processes the same VolumeSnapshot custom resource after the restart, entering an endless crashloop. Only the volume snapshot feature is affected by this vulnerability. When exploited, users can’t take snapshots of their volumes or delete the snapshots. All other Kubernetes functionality is not affected.",
    "publishedDate": "2021-01-21T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8569",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:container_storage_interface_snapshotter:*:*:*:*:*:*:*:*",
    "description": "Kubernetes CSI snapshot-controller prior to v2.1.3 and v3.0.2 could panic when processing a VolumeSnapshot custom resource when: - The VolumeSnapshot referenced a non-existing PersistentVolumeClaim and the VolumeSnapshot did not reference any VolumeSnapshotClass. - The snapshot-controller crashes, is automatically restarted by Kubernetes, and processes the same VolumeSnapshot custom resource after the restart, entering an endless crashloop. Only the volume snapshot feature is affected by this vulnerability. When exploited, users can’t take snapshots of their volumes or delete the snapshots. All other Kubernetes functionality is not affected.",
    "publishedDate": "2021-01-21T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8570",
    "technology": "kubernetes",
    "version": "10.0.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code.",
    "publishedDate": "2021-01-21T17:15Z",
    "cvssScore": 9.1,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8570",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:java:*:*:*:*:*:*:*:*",
    "description": "Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code.",
    "publishedDate": "2021-01-21T17:15Z",
    "cvssScore": 9.1,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8570",
    "technology": "kubernetes",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kubernetes:java:*:*:*:*:*:*:*:*",
    "description": "Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code.",
    "publishedDate": "2021-01-21T17:15Z",
    "cvssScore": 9.1,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  }
]