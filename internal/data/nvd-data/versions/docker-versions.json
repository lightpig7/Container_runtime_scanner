[
  {
    "cveId": "CVE-2025-1696",
    "technology": "docker",
    "version": "4.39.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "A vulnerability exists in Docker Desktop prior to version 4.39.0 that could lead to the unintentional disclosure of sensitive information via application logs. In affected versions, proxy configuration data—potentially including sensitive details—was written to log files in clear text whenever an HTTP GET request was made through a proxy. An attacker with read access to these logs could obtain the proxy information and leverage it for further attacks or unauthorized access. Starting with version 4.39.0, Docker Desktop no longer logs the proxy string, thereby mitigating this risk.",
    "publishedDate": "2025-03-06T12:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2025-1696",
    "technology": "docker",
    "version": "4.39.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "A vulnerability exists in Docker Desktop prior to version 4.39.0 that could lead to the unintentional disclosure of sensitive information via application logs. In affected versions, proxy configuration data—potentially including sensitive details—was written to log files in clear text whenever an HTTP GET request was made through a proxy. An attacker with read access to these logs could obtain the proxy information and leverage it for further attacks or unauthorized access. Starting with version 4.39.0, Docker Desktop no longer logs the proxy string, thereby mitigating this risk.",
    "publishedDate": "2025-03-06T12:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2025-25196",
    "technology": "docker",
    "version": "1.8.4",
    "vulnerable": false,
    "cpeUri": "",
    "description": "OpenFGA is a high-performance and flexible authorization/permission engine built for developers and inspired by Google Zanzibar. OpenFGA \u003c v1.8.4 (Helm chart \u003c openfga-0.2.22, docker \u003c v.1.8.4) are vulnerable to authorization bypass when certain Check and ListObject calls are executed. Users on OpenFGA v1.8.4 or previous, specifically under the following conditions are affected by this authorization bypass vulnerability: 1. Calling Check API or ListObjects with a model that has a relation directly assignable to both public access AND userset with the same type. 2. A type bound public access tuple is assigned to an object. 3. userset tuple is not assigned to the same object. and 4. Check request's user field is a userset that has the same type as the type bound public access tuple's user type. Users are advised to upgrade to v1.8.5 which is backwards compatible. There are no known workarounds for this vulnerability.",
    "publishedDate": "2025-02-19T21:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2025-25196",
    "technology": "docker",
    "version": "1.8.4",
    "vulnerable": false,
    "cpeUri": "",
    "description": "OpenFGA is a high-performance and flexible authorization/permission engine built for developers and inspired by Google Zanzibar. OpenFGA \u003c v1.8.4 (Helm chart \u003c openfga-0.2.22, docker \u003c v.1.8.4) are vulnerable to authorization bypass when certain Check and ListObject calls are executed. Users on OpenFGA v1.8.4 or previous, specifically under the following conditions are affected by this authorization bypass vulnerability: 1. Calling Check API or ListObjects with a model that has a relation directly assignable to both public access AND userset with the same type. 2. A type bound public access tuple is assigned to an object. 3. userset tuple is not assigned to the same object. and 4. Check request's user field is a userset that has the same type as the type bound public access tuple's user type. Users are advised to upgrade to v1.8.5 which is backwards compatible. There are no known workarounds for this vulnerability.",
    "publishedDate": "2025-02-19T21:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2025-25196",
    "technology": "docker",
    "version": "1.8.5",
    "vulnerable": false,
    "cpeUri": "",
    "description": "OpenFGA is a high-performance and flexible authorization/permission engine built for developers and inspired by Google Zanzibar. OpenFGA \u003c v1.8.4 (Helm chart \u003c openfga-0.2.22, docker \u003c v.1.8.4) are vulnerable to authorization bypass when certain Check and ListObject calls are executed. Users on OpenFGA v1.8.4 or previous, specifically under the following conditions are affected by this authorization bypass vulnerability: 1. Calling Check API or ListObjects with a model that has a relation directly assignable to both public access AND userset with the same type. 2. A type bound public access tuple is assigned to an object. 3. userset tuple is not assigned to the same object. and 4. Check request's user field is a userset that has the same type as the type bound public access tuple's user type. Users are advised to upgrade to v1.8.5 which is backwards compatible. There are no known workarounds for this vulnerability.",
    "publishedDate": "2025-02-19T21:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2025-25198",
    "technology": "docker",
    "version": "2025",
    "vulnerable": false,
    "cpeUri": "",
    "description": "mailcow: dockerized is an open source groupware/email suite based on docker. Prior to version 2025-01a, a vulnerability in mailcow's password reset functionality allows an attacker to manipulate the `Host HTTP` header to generate a password reset link pointing to an attacker-controlled domain. This can lead to account takeover if a user clicks the poisoned link. Version 2025-01a contains a patch. As a workaround, deactivate the password reset functionality by clearing `Notification email sender` and `Notification email subject` under System -\u003e Configuration -\u003e Options -\u003e Password Settings.",
    "publishedDate": "2025-02-12T18:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2025-25198",
    "technology": "docker",
    "version": "2025",
    "vulnerable": false,
    "cpeUri": "",
    "description": "mailcow: dockerized is an open source groupware/email suite based on docker. Prior to version 2025-01a, a vulnerability in mailcow's password reset functionality allows an attacker to manipulate the `Host HTTP` header to generate a password reset link pointing to an attacker-controlled domain. This can lead to account takeover if a user clicks the poisoned link. Version 2025-01a contains a patch. As a workaround, deactivate the password reset functionality by clearing `Notification email sender` and `Notification email subject` under System -\u003e Configuration -\u003e Options -\u003e Password Settings.",
    "publishedDate": "2025-02-12T18:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2025-27519",
    "technology": "docker",
    "version": "1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Cognita is a RAG (Retrieval Augmented Generation) Framework for building modular, open source applications for production by TrueFoundry. A path traversal issue exists at /v1/internal/upload-to-local-directory which is enabled when the Local env variable is set to true, such as when Cognita is setup using Docker. Because the docker environment sets up the backend uvicorn server with auto reload enabled, when an attacker overwrites the /app/backend/__init__.py file, the file will automatically be reloaded and executed. This allows an attacker to get remote code execution in the context of the Docker container. This vulnerability is fixed in commit a78bd065e05a1b30a53a3386cc02e08c317d2243.",
    "publishedDate": "2025-03-07T16:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2025-3047",
    "technology": "docker",
    "version": "1.133.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "When running the AWS Serverless Application Model Command Line Interface (SAM CLI) build process with Docker and symlinks are included in the build files, the container environment allows a user to access privileged files on the host by leveraging the elevated permissions granted to the tool. A user could leverage the elevated permissions to access restricted files via symlinks and copy them to a more permissive location on the container. \n\nUsers should upgrade to v1.133.0 or newer and ensure any forked or derivative code is patched to incorporate the new fixes.",
    "publishedDate": "2025-03-31T16:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2025-3048",
    "technology": "docker",
    "version": "1.134.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "After completing a build with AWS Serverless Application Model Command Line Interface (SAM CLI) which include symlinks, the content of those symlinks are copied to the cache of the local workspace as regular files or directories. As a result, a user who does not have access to those symlinks outside of the Docker container would now have access via the local workspace.\n\nUsers should upgrade to version 1.134.0 and ensure any forked or derivative code is patched to incorporate the new fixes. After upgrading, users must re-build their applications using the sam build --use-container to update the symlinks.",
    "publishedDate": "2025-03-31T16:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-10846",
    "technology": "docker",
    "version": "2.10",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The compose-go library component in versions v2.10-v2.4.0 allows an authorized user who sends malicious YAML payloads to cause the compose-go to consume excessive amount of Memory and CPU cycles while parsing YAML, such as used by Docker Compose from versions  v2.27.0 to v2.29.7 included",
    "publishedDate": "2025-01-23T16:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-10846",
    "technology": "docker",
    "version": "2.4.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The compose-go library component in versions v2.10-v2.4.0 allows an authorized user who sends malicious YAML payloads to cause the compose-go to consume excessive amount of Memory and CPU cycles while parsing YAML, such as used by Docker Compose from versions  v2.27.0 to v2.29.7 included",
    "publishedDate": "2025-01-23T16:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-10846",
    "technology": "docker",
    "version": "2.27.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The compose-go library component in versions v2.10-v2.4.0 allows an authorized user who sends malicious YAML payloads to cause the compose-go to consume excessive amount of Memory and CPU cycles while parsing YAML, such as used by Docker Compose from versions  v2.27.0 to v2.29.7 included",
    "publishedDate": "2025-01-23T16:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-10846",
    "technology": "docker",
    "version": "2.29.7",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The compose-go library component in versions v2.10-v2.4.0 allows an authorized user who sends malicious YAML payloads to cause the compose-go to consume excessive amount of Memory and CPU cycles while parsing YAML, such as used by Docker Compose from versions  v2.27.0 to v2.29.7 included",
    "publishedDate": "2025-01-23T16:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-13060",
    "technology": "docker",
    "version": "1.3.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "A vulnerability in AnythingLLM Docker version 1.3.1 allows users with 'Default' permission to access other users' profile pictures by changing the 'id' parameter in the user cookie. This issue is present in versions prior to 1.3.1.",
    "publishedDate": "2025-03-20T10:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-21653",
    "technology": "docker",
    "version": "4.2.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The vantage6 technology enables to manage and deploy privacy enhancing technologies like Federated Learning (FL) and Multi-Party Computation (MPC).  Nodes and servers get a ssh config by default that permits root login with password authentication. In a proper deployment, the SSH service is not exposed so there is no risk, but not all deployments are ideal. The default should therefore be less permissive.  The vulnerability can be mitigated by removing the ssh part from the docker file and rebuilding the docker image.  Version 4.2.0 patches the vulnerability.",
    "publishedDate": "2024-01-30T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-2240",
    "technology": "docker",
    "version": "2.3.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Docker daemon in Brocade SANnav before SANnav 2.3.1b runs without auditing. The vulnerability could allow a remote authenticated attacker to execute various attacks.",
    "publishedDate": "2025-02-14T05:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-23054",
    "technology": "docker",
    "version": "5.2.13",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:plone:plone_docker_official_image:5.2.13:*:*:*:*:*:*:*",
    "description": "An issue in Plone Docker Official Image 5.2.13 (5221) open-source software that could allow for remote code execution due to a package listed in ++plone++static/components not existing in the public package index (npm).",
    "publishedDate": "2024-02-05T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "5.2.13",
      "startExcluding": "5.2.13"
    }
  },
  {
    "cveId": "CVE-2024-23055",
    "technology": "docker",
    "version": "5.2.13",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:plone:plone_docker_official_image:5.2.13:*:*:*:*:*:*:*",
    "description": "An issue in Plone Docker Official Image 5.2.13 (5221) open-source software allows for remote code execution via improper validation of input by the HOST headers.",
    "publishedDate": "2024-01-25T22:15Z",
    "cvssScore": 6.1,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "5.2.13",
      "startExcluding": "5.2.13"
    }
  },
  {
    "cveId": "CVE-2024-23756",
    "technology": "docker",
    "version": "5.2.13",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The HTTP PUT and DELETE methods are enabled in the Plone official Docker version 5.2.13 (5221), allowing unauthenticated attackers to execute dangerous actions such as uploading files to the server or deleting them.",
    "publishedDate": "2024-02-08T21:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-23824",
    "technology": "docker",
    "version": "_dockerized",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:mailcow:mailcow\\:_dockerized:*:*:*:*:*:*:*:*",
    "description": "mailcow is a dockerized email package, with multiple containers linked in one bridged network. The application is vulnerable to pixel flood attack, once the payload has been successfully uploaded in the logo the application goes slow and doesn't respond in the admin page. It is tested on the versions 2023-12a and prior and patched in version 2024-01.",
    "publishedDate": "2024-02-02T16:15Z",
    "cvssScore": 2.7,
    "severity": "LOW",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "_dockerized",
      "startExcluding": "_dockerized"
    }
  },
  {
    "cveId": "CVE-2024-24760",
    "technology": "docker",
    "version": "_dockerized",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:mailcow:mailcow\\:_dockerized:*:*:*:*:*:*:*:*",
    "description": "mailcow is a dockerized email package, with multiple containers linked in one bridged network. A security vulnerability has been identified in mailcow affecting versions \u003c 2024-01c. This vulnerability potentially allows attackers on the same subnet to connect to exposed ports of a Docker container, even when the port is bound to 127.0.0.1. The vulnerability has been addressed by implementing additional iptables/nftables rules. These rules drop packets for Docker containers on ports 3306, 6379, 8983, and 12345, where the input interface is not `br-mailcow` and the output interface is `br-mailcow`.",
    "publishedDate": "2024-02-02T16:15Z",
    "cvssScore": 7.3,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "_dockerized",
      "startExcluding": "_dockerized"
    }
  },
  {
    "cveId": "CVE-2024-28236",
    "technology": "docker",
    "version": "0.23.2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Vela is a Pipeline Automation (CI/CD) framework built on Linux container technology written in Golang. Vela pipelines can use variable substitution combined with insensitive fields like `parameters`, `image` and `entrypoint` to inject secrets into a plugin/image and — by using common substitution string manipulation — can bypass log masking and expose secrets without the use of the commands block. This unexpected behavior primarily impacts secrets restricted by the \"no commands\" option. This can lead to unintended use of the secret value, and increased risk of exposing the secret during image execution bypassing log masking. **To exploit this** the pipeline author must be supplying the secrets to a plugin that is designed in such a way that will print those parameters in logs. Plugin parameters are not designed for sensitive values and are often intentionally printed throughout execution for informational/debugging purposes. Parameters should therefore be treated as insensitive. While Vela provides secrets masking, secrets exposure is not entirely solved by the masking process. A docker image (plugin) can easily expose secrets if they are not handled properly, or altered in some way. There is a responsibility on the end-user to understand how values injected into a plugin are used. This is a risk that exists for many CICD systems (like GitHub Actions) that handle sensitive runtime variables. Rather, the greater risk is that users who restrict a secret to the \"no commands\" option and use image restriction can still have their secret value exposed via substitution tinkering, which turns the image and command restrictions into a false sense of security. This issue has been addressed in version 0.23.2. Users are advised to upgrade. Users unable to upgrade should not provide sensitive values to plugins that can potentially expose them, especially in `parameters` that are not intended to be used for sensitive values, ensure plugins (especially those that utilize shared secrets) follow best practices to avoid logging parameters that are expected to be sensitive, minimize secrets with `pull_request` events enabled, as this allows users to change pipeline configurations and pull in secrets to steps not typically part of the CI process, make use of the build approval setting, restricting builds from untrusted users, and limit use of shared secrets, as they are less restrictive to access by nature.",
    "publishedDate": "2024-03-12T21:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-29963",
    "technology": "docker",
    "version": "2.3.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "\nBrocade SANnav OVA before v2.3.1, and v2.3.0a, contain hardcoded TLS keys used by Docker. Note: Brocade SANnav doesn't have access to remote Docker registries.\n\n",
    "publishedDate": "2024-04-19T04:15Z",
    "cvssScore": 3.8,
    "severity": "LOW",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-29963",
    "technology": "docker",
    "version": "2.3.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "\nBrocade SANnav OVA before v2.3.1, and v2.3.0a, contain hardcoded TLS keys used by Docker. Note: Brocade SANnav doesn't have access to remote Docker registries.\n\n",
    "publishedDate": "2024-04-19T04:15Z",
    "cvssScore": 3.8,
    "severity": "LOW",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-29964",
    "technology": "docker",
    "version": "2.3.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Brocade SANnav versions before v2.3.0a do not correctly set permissions on files, including docker files. An unprivileged attacker who gains access to the server can read sensitive information from these files.",
    "publishedDate": "2024-04-19T05:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-29967",
    "technology": "docker",
    "version": "2.31",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In Brocade SANnav before Brocade SANnav v2.31 and v2.3.0a, it was observed that Docker instances inside the appliance have insecure mount points, allowing reading and writing access to sensitive files. The vulnerability could allow a sudo privileged user on the host OS to read and write access to these files. \n\n",
    "publishedDate": "2024-04-19T05:15Z",
    "cvssScore": 6,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-29967",
    "technology": "docker",
    "version": "2.3.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In Brocade SANnav before Brocade SANnav v2.31 and v2.3.0a, it was observed that Docker instances inside the appliance have insecure mount points, allowing reading and writing access to sensitive files. The vulnerability could allow a sudo privileged user on the host OS to read and write access to these files. \n\n",
    "publishedDate": "2024-04-19T05:15Z",
    "cvssScore": 6,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-30270",
    "technology": "docker",
    "version": "2024",
    "vulnerable": false,
    "cpeUri": "",
    "description": "mailcow: dockerized is an open source groupware/email suite based on docker. A security vulnerability has been identified in mailcow affecting versions prior to 2024-04. This vulnerability is a combination of path traversal and arbitrary code execution, specifically targeting the `rspamd_maps()` function. It allows authenticated admin users to overwrite any file writable by the www-data user by exploiting improper path validation. The exploit chain can lead to the execution of arbitrary commands on the server. Version 2024-04 contains a patch for the issue.",
    "publishedDate": "2024-04-04T21:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-31204",
    "technology": "docker",
    "version": "2024",
    "vulnerable": false,
    "cpeUri": "",
    "description": "mailcow: dockerized is an open source groupware/email suite based on docker. A security vulnerability has been identified in mailcow affecting versions prior to 2024-04. This vulnerability resides in the exception handling mechanism, specifically when not operating in DEV_MODE. The system saves exception details into a session array without proper sanitization or encoding. These details are later rendered into HTML and executed in a JavaScript block within the user's browser, without adequate escaping of HTML entities. This flaw allows for Cross-Site Scripting (XSS) attacks, where attackers can inject malicious scripts into the admin panel by triggering exceptions with controlled input. The exploitation method involves using any function that might throw an exception with user-controllable argument. This issue can lead to session hijacking and unauthorized administrative actions, posing a significant security risk. Version 2024-04 contains a fix for the issue.",
    "publishedDate": "2024-04-04T21:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-32473",
    "technology": "docker",
    "version": "6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Moby is an open source container framework that is a key component of Docker Engine, Docker Desktop, and other distributions of container tooling or runtimes. In 26.0.0, IPv6 is not disabled on network interfaces, including those belonging to networks where `--ipv6=false`. An container with an `ipvlan` or `macvlan` interface will normally be configured to share an external network link with the host machine. Because of this direct access, (1) Containers may be able to communicate with other hosts on the local network over link-local IPv6 addresses, (2) if router advertisements are being broadcast over the local network, containers may get SLAAC-assigned addresses, and (3) the interface  will be a member of IPv6 multicast groups. This means interfaces in IPv4-only networks present an unexpectedly and unnecessarily increased attack surface. The issue is patched in 26.0.2. To completely disable IPv6 in a container, use `--sysctl=net.ipv6.conf.all.disable_ipv6=1` in the `docker create` or `docker run` command. Or, in the service configuration of a `compose` file.",
    "publishedDate": "2024-04-18T22:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-32473",
    "technology": "docker",
    "version": "6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Moby is an open source container framework that is a key component of Docker Engine, Docker Desktop, and other distributions of container tooling or runtimes. In 26.0.0, IPv6 is not disabled on network interfaces, including those belonging to networks where `--ipv6=false`. An container with an `ipvlan` or `macvlan` interface will normally be configured to share an external network link with the host machine. Because of this direct access, (1) Containers may be able to communicate with other hosts on the local network over link-local IPv6 addresses, (2) if router advertisements are being broadcast over the local network, containers may get SLAAC-assigned addresses, and (3) the interface  will be a member of IPv6 multicast groups. This means interfaces in IPv4-only networks present an unexpectedly and unnecessarily increased attack surface. The issue is patched in 26.0.2. To completely disable IPv6 in a container, use `--sysctl=net.ipv6.conf.all.disable_ipv6=1` in the `docker create` or `docker run` command. Or, in the service configuration of a `compose` file.",
    "publishedDate": "2024-04-18T22:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-32473",
    "technology": "docker",
    "version": "6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Moby is an open source container framework that is a key component of Docker Engine, Docker Desktop, and other distributions of container tooling or runtimes. In 26.0.0, IPv6 is not disabled on network interfaces, including those belonging to networks where `--ipv6=false`. An container with an `ipvlan` or `macvlan` interface will normally be configured to share an external network link with the host machine. Because of this direct access, (1) Containers may be able to communicate with other hosts on the local network over link-local IPv6 addresses, (2) if router advertisements are being broadcast over the local network, containers may get SLAAC-assigned addresses, and (3) the interface  will be a member of IPv6 multicast groups. This means interfaces in IPv4-only networks present an unexpectedly and unnecessarily increased attack surface. The issue is patched in 26.0.2. To completely disable IPv6 in a container, use `--sysctl=net.ipv6.conf.all.disable_ipv6=1` in the `docker create` or `docker run` command. Or, in the service configuration of a `compose` file.",
    "publishedDate": "2024-04-18T22:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-32473",
    "technology": "docker",
    "version": "6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Moby is an open source container framework that is a key component of Docker Engine, Docker Desktop, and other distributions of container tooling or runtimes. In 26.0.0, IPv6 is not disabled on network interfaces, including those belonging to networks where `--ipv6=false`. An container with an `ipvlan` or `macvlan` interface will normally be configured to share an external network link with the host machine. Because of this direct access, (1) Containers may be able to communicate with other hosts on the local network over link-local IPv6 addresses, (2) if router advertisements are being broadcast over the local network, containers may get SLAAC-assigned addresses, and (3) the interface  will be a member of IPv6 multicast groups. This means interfaces in IPv4-only networks present an unexpectedly and unnecessarily increased attack surface. The issue is patched in 26.0.2. To completely disable IPv6 in a container, use `--sysctl=net.ipv6.conf.all.disable_ipv6=1` in the `docker create` or `docker run` command. Or, in the service configuration of a `compose` file.",
    "publishedDate": "2024-04-18T22:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-32473",
    "technology": "docker",
    "version": "4",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Moby is an open source container framework that is a key component of Docker Engine, Docker Desktop, and other distributions of container tooling or runtimes. In 26.0.0, IPv6 is not disabled on network interfaces, including those belonging to networks where `--ipv6=false`. An container with an `ipvlan` or `macvlan` interface will normally be configured to share an external network link with the host machine. Because of this direct access, (1) Containers may be able to communicate with other hosts on the local network over link-local IPv6 addresses, (2) if router advertisements are being broadcast over the local network, containers may get SLAAC-assigned addresses, and (3) the interface  will be a member of IPv6 multicast groups. This means interfaces in IPv4-only networks present an unexpectedly and unnecessarily increased attack surface. The issue is patched in 26.0.2. To completely disable IPv6 in a container, use `--sysctl=net.ipv6.conf.all.disable_ipv6=1` in the `docker create` or `docker run` command. Or, in the service configuration of a `compose` file.",
    "publishedDate": "2024-04-18T22:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-32473",
    "technology": "docker",
    "version": "6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Moby is an open source container framework that is a key component of Docker Engine, Docker Desktop, and other distributions of container tooling or runtimes. In 26.0.0, IPv6 is not disabled on network interfaces, including those belonging to networks where `--ipv6=false`. An container with an `ipvlan` or `macvlan` interface will normally be configured to share an external network link with the host machine. Because of this direct access, (1) Containers may be able to communicate with other hosts on the local network over link-local IPv6 addresses, (2) if router advertisements are being broadcast over the local network, containers may get SLAAC-assigned addresses, and (3) the interface  will be a member of IPv6 multicast groups. This means interfaces in IPv4-only networks present an unexpectedly and unnecessarily increased attack surface. The issue is patched in 26.0.2. To completely disable IPv6 in a container, use `--sysctl=net.ipv6.conf.all.disable_ipv6=1` in the `docker create` or `docker run` command. Or, in the service configuration of a `compose` file.",
    "publishedDate": "2024-04-18T22:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-32473",
    "technology": "docker",
    "version": "6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Moby is an open source container framework that is a key component of Docker Engine, Docker Desktop, and other distributions of container tooling or runtimes. In 26.0.0, IPv6 is not disabled on network interfaces, including those belonging to networks where `--ipv6=false`. An container with an `ipvlan` or `macvlan` interface will normally be configured to share an external network link with the host machine. Because of this direct access, (1) Containers may be able to communicate with other hosts on the local network over link-local IPv6 addresses, (2) if router advertisements are being broadcast over the local network, containers may get SLAAC-assigned addresses, and (3) the interface  will be a member of IPv6 multicast groups. This means interfaces in IPv4-only networks present an unexpectedly and unnecessarily increased attack surface. The issue is patched in 26.0.2. To completely disable IPv6 in a container, use `--sysctl=net.ipv6.conf.all.disable_ipv6=1` in the `docker create` or `docker run` command. Or, in the service configuration of a `compose` file.",
    "publishedDate": "2024-04-18T22:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-32473",
    "technology": "docker",
    "version": "6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Moby is an open source container framework that is a key component of Docker Engine, Docker Desktop, and other distributions of container tooling or runtimes. In 26.0.0, IPv6 is not disabled on network interfaces, including those belonging to networks where `--ipv6=false`. An container with an `ipvlan` or `macvlan` interface will normally be configured to share an external network link with the host machine. Because of this direct access, (1) Containers may be able to communicate with other hosts on the local network over link-local IPv6 addresses, (2) if router advertisements are being broadcast over the local network, containers may get SLAAC-assigned addresses, and (3) the interface  will be a member of IPv6 multicast groups. This means interfaces in IPv4-only networks present an unexpectedly and unnecessarily increased attack surface. The issue is patched in 26.0.2. To completely disable IPv6 in a container, use `--sysctl=net.ipv6.conf.all.disable_ipv6=1` in the `docker create` or `docker run` command. Or, in the service configuration of a `compose` file.",
    "publishedDate": "2024-04-18T22:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-34067",
    "technology": "docker",
    "version": "1.11.6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Pterodactyl is a free, open-source game server management panel built with PHP, React, and Go. Importing a malicious egg or gaining access to wings instance could lead to cross site scripting (XSS) on the panel, which could be used to gain an administrator account on the panel. Specifically, the following things are impacted: Egg Docker images and Egg variables: Name, Environment variable, Default value, Description, Validation rules. Additionally, certain fields would reflect malicious input, but it would require the user knowingly entering such input to have an impact. To iterate, this would require an administrator to perform actions and can't be triggered by a normal panel user. This issue has has been addressed in version 1.11.6 and users are advised to upgrade. No workaround is available other than updating to the latest version of the panel.",
    "publishedDate": "2024-05-03T18:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-35133",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:security_verify_access_docker:*:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access 10.0.0 through 10.0.8 OIDC Provider could allow a remote authenticated attacker to conduct phishing attacks, using an open redirect attack. By persuading a victim to visit a specially crafted Web site, a remote attacker could exploit this vulnerability to spoof the URL displayed to redirect a user to a malicious Web site that would appear to be trusted. This could allow the attacker to obtain highly sensitive information or conduct further attacks against the victim.",
    "publishedDate": "2024-08-29T17:15Z",
    "cvssScore": 8.2,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2024-35140",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:security_verify_access_docker:*:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access Docker 10.0.0 through 10.0.6 could allow a local user to escalate their privileges due to improper certificate validation.  IBM X-Force ID:  292416.",
    "publishedDate": "2024-05-31T17:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2024-35141",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:security_verify_access_docker:*:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access Docker 10.0.0 through 10.0.6 could allow a local user to escalate their privileges due to execution of unnecessary privileges.",
    "publishedDate": "2024-12-19T02:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2024-35142",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:security_verify_access_docker:*:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access Docker 10.0.0 through 10.0.6 could allow a local user to escalate their privileges due to execution of unnecessary privileges.  IBM X-Force ID:  292418.",
    "publishedDate": "2024-05-31T17:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2024-41110",
    "technology": "docker",
    "version": "18.09.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Moby is an open-source project created by Docker for software containerization. A security vulnerability has been detected in certain versions of Docker Engine, which could allow an attacker to bypass authorization plugins (AuthZ) under specific circumstances. The base likelihood of this being exploited is low.\n\nUsing a specially-crafted API request, an Engine API client could make the daemon forward the request or response to an authorization plugin without the body. In certain circumstances, the authorization plugin may allow a request which it would have otherwise denied if the body had been forwarded to it.\n\nA security issue was discovered In 2018, where an attacker could bypass AuthZ plugins using a specially crafted API request. This could lead to unauthorized actions, including privilege escalation. Although this issue was fixed in Docker Engine v18.09.1 in January 2019, the fix was not carried forward to later major versions, resulting in a regression. Anyone who depends on authorization plugins that introspect the request and/or response body to make access control decisions is potentially impacted.\n\nDocker EE v19.03.x and all versions of Mirantis Container Runtime are not vulnerable.\n\ndocker-ce v27.1.1 containes patches to fix the vulnerability. Patches have also been merged into the master, 19.03, 20.0, 23.0, 24.0, 25.0, 26.0, and 26.1 release branches. If one is unable to upgrade immediately, avoid using AuthZ plugins and/or restrict access to the Docker API to trusted parties, following the principle of least privilege.",
    "publishedDate": "2024-07-24T17:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-41110",
    "technology": "docker",
    "version": "19.03",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Moby is an open-source project created by Docker for software containerization. A security vulnerability has been detected in certain versions of Docker Engine, which could allow an attacker to bypass authorization plugins (AuthZ) under specific circumstances. The base likelihood of this being exploited is low.\n\nUsing a specially-crafted API request, an Engine API client could make the daemon forward the request or response to an authorization plugin without the body. In certain circumstances, the authorization plugin may allow a request which it would have otherwise denied if the body had been forwarded to it.\n\nA security issue was discovered In 2018, where an attacker could bypass AuthZ plugins using a specially crafted API request. This could lead to unauthorized actions, including privilege escalation. Although this issue was fixed in Docker Engine v18.09.1 in January 2019, the fix was not carried forward to later major versions, resulting in a regression. Anyone who depends on authorization plugins that introspect the request and/or response body to make access control decisions is potentially impacted.\n\nDocker EE v19.03.x and all versions of Mirantis Container Runtime are not vulnerable.\n\ndocker-ce v27.1.1 containes patches to fix the vulnerability. Patches have also been merged into the master, 19.03, 20.0, 23.0, 24.0, 25.0, 26.0, and 26.1 release branches. If one is unable to upgrade immediately, avoid using AuthZ plugins and/or restrict access to the Docker API to trusted parties, following the principle of least privilege.",
    "publishedDate": "2024-07-24T17:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-41110",
    "technology": "docker",
    "version": "27.1.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Moby is an open-source project created by Docker for software containerization. A security vulnerability has been detected in certain versions of Docker Engine, which could allow an attacker to bypass authorization plugins (AuthZ) under specific circumstances. The base likelihood of this being exploited is low.\n\nUsing a specially-crafted API request, an Engine API client could make the daemon forward the request or response to an authorization plugin without the body. In certain circumstances, the authorization plugin may allow a request which it would have otherwise denied if the body had been forwarded to it.\n\nA security issue was discovered In 2018, where an attacker could bypass AuthZ plugins using a specially crafted API request. This could lead to unauthorized actions, including privilege escalation. Although this issue was fixed in Docker Engine v18.09.1 in January 2019, the fix was not carried forward to later major versions, resulting in a regression. Anyone who depends on authorization plugins that introspect the request and/or response body to make access control decisions is potentially impacted.\n\nDocker EE v19.03.x and all versions of Mirantis Container Runtime are not vulnerable.\n\ndocker-ce v27.1.1 containes patches to fix the vulnerability. Patches have also been merged into the master, 19.03, 20.0, 23.0, 24.0, 25.0, 26.0, and 26.1 release branches. If one is unable to upgrade immediately, avoid using AuthZ plugins and/or restrict access to the Docker API to trusted parties, following the principle of least privilege.",
    "publishedDate": "2024-07-24T17:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-4159",
    "technology": "docker",
    "version": "2.3.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "\nBrocade SANnav before v2.3.0a lacks protection mechanisms on port 2377/TCP and 7946/TCP, which could allow an unauthenticated attacker to sniff the SANnav Docker information.\n\n",
    "publishedDate": "2024-04-25T06:16Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-41958",
    "technology": "docker",
    "version": "_dockerized",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:mailcow:mailcow\\:_dockerized:*:*:*:*:*:*:*:*",
    "description": "mailcow: dockerized is an open source groupware/email suite based on docker. A vulnerability has been discovered in the two-factor authentication (2FA) mechanism. This flaw allows an authenticated attacker to bypass the 2FA protection, enabling unauthorized access to other accounts that are otherwise secured with 2FA. To exploit this vulnerability, the attacker must first have access to an account within the system and possess the credentials of the target account that has 2FA enabled. By leveraging these credentials, the attacker can circumvent the 2FA process and gain access to the protected account. This issue has been addressed in the `2024-07` release. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "publishedDate": "2024-08-05T20:15Z",
    "cvssScore": 7.2,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "_dockerized",
      "startExcluding": "_dockerized"
    }
  },
  {
    "cveId": "CVE-2024-41959",
    "technology": "docker",
    "version": "_dockerized",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:mailcow:mailcow\\:_dockerized:*:*:*:*:*:*:*:*",
    "description": "mailcow: dockerized is an open source groupware/email suite based on docker. An unauthenticated attacker can inject a JavaScript payload into the API logs. This payload is executed whenever the API logs page is viewed, potentially allowing an attacker to run malicious scripts in the context of the user's browser. This could lead to unauthorized actions, data theft, or further exploitation of the affected system. This issue has been addressed in the `2024-07` release. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "publishedDate": "2024-08-05T20:15Z",
    "cvssScore": 6.1,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "_dockerized",
      "startExcluding": "_dockerized"
    }
  },
  {
    "cveId": "CVE-2024-41960",
    "technology": "docker",
    "version": "_dockerized",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:mailcow:mailcow\\:_dockerized:*:*:*:*:*:*:*:*",
    "description": "mailcow: dockerized is an open source groupware/email suite based on docker. An authenticated admin user can inject a JavaScript payload into the Relay Hosts configuration. The injected payload is executed whenever the configuration page is viewed, enabling the attacker to execute arbitrary scripts in the context of the user's browser. This could lead to data theft, or further exploitation. This issue has been addressed in the `2024-07` release. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "publishedDate": "2024-08-05T20:15Z",
    "cvssScore": 4.8,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "_dockerized",
      "startExcluding": "_dockerized"
    }
  },
  {
    "cveId": "CVE-2024-41997",
    "technology": "docker",
    "version": "0.2024.07",
    "vulnerable": false,
    "cpeUri": "",
    "description": "An issue was discovered in version of Warp Terminal prior to 2024.07.18 (v0.2024.07.16.08.02). A command injection vulnerability exists in the Docker integration functionality. An attacker can create a specially crafted hyperlink using the `warp://action/docker/open_subshell` intent that when clicked by the victim results in command execution on the victim's machine.",
    "publishedDate": "2024-10-14T16:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-45310",
    "technology": "docker",
    "version": "1.1.14",
    "vulnerable": false,
    "cpeUri": "",
    "description": "runc is a CLI tool for spawning and running containers according to the OCI specification. runc 1.1.13 and earlier, as well as 1.2.0-rc2 and earlier, can be tricked into creating empty files or directories in arbitrary locations in the host filesystem by sharing a volume between two containers and exploiting a race with `os.MkdirAll`. While this could be used to create empty files, existing files would not be truncated. An attacker must have the ability to start containers using some kind of custom volume configuration. Containers using user namespaces are still affected, but the scope of places an attacker can create inodes can be significantly reduced. Sufficiently strict LSM policies (SELinux/Apparmor) can also in principle block this attack -- we suspect the industry standard SELinux policy may restrict this attack's scope but the exact scope of protection hasn't been analysed. This is exploitable using runc directly as well as through Docker and Kubernetes. The issue is fixed in runc v1.1.14 and v1.2.0-rc3.\n\nSome workarounds are available. Using user namespaces restricts this attack fairly significantly such that the attacker can only create inodes in directories that the remapped root user/group has write access to. Unless the root user is remapped to an actual\nuser on the host (such as with rootless containers that don't use `/etc/sub[ug]id`), this in practice means that an attacker would only be able to create inodes in world-writable directories. A strict enough SELinux or AppArmor policy could in principle also restrict the scope if a specific label is applied to the runc runtime, though neither the extent to which the standard existing policies block this attack nor what exact policies are needed to sufficiently restrict this attack have been thoroughly tested.",
    "publishedDate": "2024-09-03T19:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-45310",
    "technology": "docker",
    "version": "1.2.0-rc3.",
    "vulnerable": false,
    "cpeUri": "",
    "description": "runc is a CLI tool for spawning and running containers according to the OCI specification. runc 1.1.13 and earlier, as well as 1.2.0-rc2 and earlier, can be tricked into creating empty files or directories in arbitrary locations in the host filesystem by sharing a volume between two containers and exploiting a race with `os.MkdirAll`. While this could be used to create empty files, existing files would not be truncated. An attacker must have the ability to start containers using some kind of custom volume configuration. Containers using user namespaces are still affected, but the scope of places an attacker can create inodes can be significantly reduced. Sufficiently strict LSM policies (SELinux/Apparmor) can also in principle block this attack -- we suspect the industry standard SELinux policy may restrict this attack's scope but the exact scope of protection hasn't been analysed. This is exploitable using runc directly as well as through Docker and Kubernetes. The issue is fixed in runc v1.1.14 and v1.2.0-rc3.\n\nSome workarounds are available. Using user namespaces restricts this attack fairly significantly such that the attacker can only create inodes in directories that the remapped root user/group has write access to. Unless the root user is remapped to an actual\nuser on the host (such as with rootless containers that don't use `/etc/sub[ug]id`), this in practice means that an attacker would only be able to create inodes in world-writable directories. A strict enough SELinux or AppArmor policy could in principle also restrict the scope if a specific label is applied to the runc runtime, though neither the extent to which the standard existing policies block this attack nor what exact policies are needed to sufficiently restrict this attack have been thoroughly tested.",
    "publishedDate": "2024-09-03T19:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-45647",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:security_verify_access_docker:*:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access 10.0.0 through 10.0.8 and IBM Security Verify Access Docker 10.0.0 through 10.0.8 could allow could an unverified user to change the password of an expired user without prior knowledge of that password.",
    "publishedDate": "2025-01-20T15:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2024-4680",
    "technology": "docker",
    "version": "0.56.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "A vulnerability in zenml-io/zenml version 0.56.3 allows attackers to reuse old session credentials or session IDs due to insufficient session expiration. Specifically, the session does not expire after a password change, enabling an attacker to maintain access to a compromised account without the victim's ability to revoke this access. This issue was observed in a self-hosted ZenML deployment via Docker, where after changing the password from one browser, the session remained active and usable in another browser without requiring re-authentication.",
    "publishedDate": "2024-06-08T20:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-47182",
    "technology": "docker",
    "version": "8.5.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Dozzle is a realtime log viewer for docker containers. Before version 8.5.3, the app uses sha-256 as the hash for passwords, which leaves users susceptible to rainbow table attacks. The app switches to bcrypt, a more appropriate hash for passwords, in version 8.5.3.",
    "publishedDate": "2024-09-27T14:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-47182",
    "technology": "docker",
    "version": "8.5.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Dozzle is a realtime log viewer for docker containers. Before version 8.5.3, the app uses sha-256 as the hash for passwords, which leaves users susceptible to rainbow table attacks. The app switches to bcrypt, a more appropriate hash for passwords, in version 8.5.3.",
    "publishedDate": "2024-09-27T14:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-47182",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:amirraminfar:dozzle:*:*:*:*:*:docker:*:*",
    "description": "Dozzle is a realtime log viewer for docker containers. Before version 8.5.3, the app uses sha-256 as the hash for passwords, which leaves users susceptible to rainbow table attacks. The app switches to bcrypt, a more appropriate hash for passwords, in version 8.5.3.",
    "publishedDate": "2024-09-27T14:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2024-53844",
    "technology": "docker",
    "version": "5.4",
    "vulnerable": false,
    "cpeUri": "",
    "description": "E.D.D.I (Enhanced Dialog Driven Interface) is a middleware to connect and manage LLM API bots. A path traversal vulnerability exists in the backup export functionality of EDDI, as implemented in `RestExportService.java`. This vulnerability allows an attacker to access sensitive files on the server by manipulating the `botFilename` parameter in requests. The application fails to sanitize user input, enabling malicious inputs such as `..%2f..%2fetc%2fpasswd` to access arbitrary files. However, the **severity of this vulnerability is significantly limited** because EDDI typically runs within a **Docker container**, which provides additional layers of isolation and restricted permissions. As a result, while this vulnerability exposes files within the container, it does not inherently threaten the underlying host system or other containers. A patch is required to sanitize and validate the botFilename input parameter. Users should ensure they are using version 5.4 which contains this patdch. For temporary mitigation, access to the vulnerable endpoint should be restricted through firewall rules or authentication mechanisms.",
    "publishedDate": "2024-11-26T19:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-56323",
    "technology": "docker",
    "version": "1.3.8",
    "vulnerable": false,
    "cpeUri": "",
    "description": "OpenFGA is an authorization/permission engine. IN OpenFGA v1.3.8 to v1.8.2 (Helm chart openfga-0.1.38 to openfga-0.2.19, docker v1.3.8 to v.1.8.2)  are vulnerable to authorization bypass under the following conditions: 1. calling Check API or ListObjects with a model that uses [conditions](https://openfga.dev/docs/modeling/conditions), and 2. calling Check API or ListObjects API with [contextual tuples](https://openfga.dev/docs/concepts#what-are-contextual-tuples) that include conditions and 3. OpenFGA is configured with caching enabled (`OPENFGA_CHECK_QUERY_CACHE_ENABLED`). Users are advised to upgrade to v1.8.3. There are no known workarounds for this vulnerability.",
    "publishedDate": "2025-01-13T22:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-56323",
    "technology": "docker",
    "version": "1.8.2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "OpenFGA is an authorization/permission engine. IN OpenFGA v1.3.8 to v1.8.2 (Helm chart openfga-0.1.38 to openfga-0.2.19, docker v1.3.8 to v.1.8.2)  are vulnerable to authorization bypass under the following conditions: 1. calling Check API or ListObjects with a model that uses [conditions](https://openfga.dev/docs/modeling/conditions), and 2. calling Check API or ListObjects API with [contextual tuples](https://openfga.dev/docs/concepts#what-are-contextual-tuples) that include conditions and 3. OpenFGA is configured with caching enabled (`OPENFGA_CHECK_QUERY_CACHE_ENABLED`). Users are advised to upgrade to v1.8.3. There are no known workarounds for this vulnerability.",
    "publishedDate": "2025-01-13T22:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-56323",
    "technology": "docker",
    "version": "1.3.8",
    "vulnerable": false,
    "cpeUri": "",
    "description": "OpenFGA is an authorization/permission engine. IN OpenFGA v1.3.8 to v1.8.2 (Helm chart openfga-0.1.38 to openfga-0.2.19, docker v1.3.8 to v.1.8.2)  are vulnerable to authorization bypass under the following conditions: 1. calling Check API or ListObjects with a model that uses [conditions](https://openfga.dev/docs/modeling/conditions), and 2. calling Check API or ListObjects API with [contextual tuples](https://openfga.dev/docs/concepts#what-are-contextual-tuples) that include conditions and 3. OpenFGA is configured with caching enabled (`OPENFGA_CHECK_QUERY_CACHE_ENABLED`). Users are advised to upgrade to v1.8.3. There are no known workarounds for this vulnerability.",
    "publishedDate": "2025-01-13T22:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-56323",
    "technology": "docker",
    "version": "1.8.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "OpenFGA is an authorization/permission engine. IN OpenFGA v1.3.8 to v1.8.2 (Helm chart openfga-0.1.38 to openfga-0.2.19, docker v1.3.8 to v.1.8.2)  are vulnerable to authorization bypass under the following conditions: 1. calling Check API or ListObjects with a model that uses [conditions](https://openfga.dev/docs/modeling/conditions), and 2. calling Check API or ListObjects API with [contextual tuples](https://openfga.dev/docs/concepts#what-are-contextual-tuples) that include conditions and 3. OpenFGA is configured with caching enabled (`OPENFGA_CHECK_QUERY_CACHE_ENABLED`). Users are advised to upgrade to v1.8.3. There are no known workarounds for this vulnerability.",
    "publishedDate": "2025-01-13T22:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-56515",
    "technology": "docker",
    "version": "1.3.8",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Matrix Media Repo (MMR) is a highly configurable multi-homeserver media repository for Matrix. If SVG or JPEGXL thumbnailers are enabled (they are disabled by default), a user may upload a file which claims to be either of these types and request a thumbnail to invoke a different decoder in ImageMagick. In some ImageMagick installations, this includes the capability to run Ghostscript to decode the image/file. If MP4 thumbnailers are enabled (also disabled by default), the same issue as above may occur with the ffmpeg installation instead. MMR uses a number of other decoders for all other file types when preparing thumbnails. Theoretical issues are possible with these decoders, however in testing they were not possible to exploit. This is fixed in MMR v1.3.8. MMR now inspects the mimetype of media prior to thumbnailing, and picks a thumbnailer based on those results instead of relying on user-supplied values. This may lead to fewer thumbnails when obscure file shapes are used. This also helps narrow scope of theoretical issues with all decoders MMR uses for thumbnails. Users are advised to upgrade. Users unable to upgrade may disable the SVG, JPEGXL, and MP4 thumbnail types in the MMR config which prevents the decoders from being invoked. Further disabling uncommon file types on the server is recommended to limit risk surface. Containers and other similar technologies may also be used to limit the impact of vulnerabilities in external decoders, like ImageMagick and ffmpeg. Some installations of ImageMagick may disable \"unsafe\" file types, like PDFs, already. This option can be replicated to other environments as needed. ffmpeg may be compiled with limited decoders/codecs. The Docker image for MMR disables PDFs and similar formats by default.",
    "publishedDate": "2025-01-16T20:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-5652",
    "technology": "docker",
    "version": "4.31.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In Docker Desktop on Windows before v4.31.0 allows a user in the docker-users group to cause a Windows Denial-of-Service through the exec-path Docker daemon config option in Windows containers mode.",
    "publishedDate": "2024-07-09T17:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-5652",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:desktop:*:*:*:*:*:windows:*:*",
    "description": "In Docker Desktop on Windows before v4.31.0 allows a user in the docker-users group to cause a Windows Denial-of-Service through the exec-path Docker daemon config option in Windows containers mode.",
    "publishedDate": "2024-07-09T17:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2024-57782",
    "technology": "docker",
    "version": "18.09.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "An issue in Docker-proxy v18.09.0 allows attackers to cause a denial of service.",
    "publishedDate": "2025-02-13T23:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-6222",
    "technology": "docker",
    "version": "4.29.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In Docker Desktop before v4.29.0, an attacker who has gained access to the Docker Desktop VM through a container breakout can further escape to the host by passing extensions and dashboard related IPC messages.\n\nDocker Desktop  v4.29.0 https://docs.docker.com/desktop/release-notes/#4290  fixes the issue on MacOS, Linux and Windows with Hyper-V backend.\n\nAs exploitation requires \"Allow only extensions distributed through the Docker Marketplace\" to be disabled, Docker Desktop  v4.31.0 https://docs.docker.com/desktop/release-notes/#4310  additionally changes the default configuration to enable this setting by default.",
    "publishedDate": "2024-07-09T18:15Z",
    "cvssScore": 7,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-6222",
    "technology": "docker",
    "version": "4.29.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In Docker Desktop before v4.29.0, an attacker who has gained access to the Docker Desktop VM through a container breakout can further escape to the host by passing extensions and dashboard related IPC messages.\n\nDocker Desktop  v4.29.0 https://docs.docker.com/desktop/release-notes/#4290  fixes the issue on MacOS, Linux and Windows with Hyper-V backend.\n\nAs exploitation requires \"Allow only extensions distributed through the Docker Marketplace\" to be disabled, Docker Desktop  v4.31.0 https://docs.docker.com/desktop/release-notes/#4310  additionally changes the default configuration to enable this setting by default.",
    "publishedDate": "2024-07-09T18:15Z",
    "cvssScore": 7,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-6222",
    "technology": "docker",
    "version": "4.31.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In Docker Desktop before v4.29.0, an attacker who has gained access to the Docker Desktop VM through a container breakout can further escape to the host by passing extensions and dashboard related IPC messages.\n\nDocker Desktop  v4.29.0 https://docs.docker.com/desktop/release-notes/#4290  fixes the issue on MacOS, Linux and Windows with Hyper-V backend.\n\nAs exploitation requires \"Allow only extensions distributed through the Docker Marketplace\" to be disabled, Docker Desktop  v4.31.0 https://docs.docker.com/desktop/release-notes/#4310  additionally changes the default configuration to enable this setting by default.",
    "publishedDate": "2024-07-09T18:15Z",
    "cvssScore": 7,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-6222",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:desktop:*:*:*:*:*:*:*:*",
    "description": "In Docker Desktop before v4.29.0, an attacker who has gained access to the Docker Desktop VM through a container breakout can further escape to the host by passing extensions and dashboard related IPC messages.\n\nDocker Desktop  v4.29.0 https://docs.docker.com/desktop/release-notes/#4290  fixes the issue on MacOS, Linux and Windows with Hyper-V backend.\n\nAs exploitation requires \"Allow only extensions distributed through the Docker Marketplace\" to be disabled, Docker Desktop  v4.31.0 https://docs.docker.com/desktop/release-notes/#4310  additionally changes the default configuration to enable this setting by default.",
    "publishedDate": "2024-07-09T18:15Z",
    "cvssScore": 7,
    "severity": "HIGH",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2024-8060",
    "technology": "docker",
    "version": "0.3.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "OpenWebUI version 0.3.0 contains a vulnerability in the audio API endpoint `/audio/api/v1/transcriptions` that allows for arbitrary file upload. The application performs insufficient validation on the `file.content_type` and allows user-controlled filenames, leading to a path traversal vulnerability. This can be exploited by an authenticated user to overwrite critical files within the Docker container, potentially leading to remote code execution as the root user.",
    "publishedDate": "2025-03-20T10:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-8060",
    "technology": "docker",
    "version": "1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "OpenWebUI version 0.3.0 contains a vulnerability in the audio API endpoint `/audio/api/v1/transcriptions` that allows for arbitrary file upload. The application performs insufficient validation on the `file.content_type` and allows user-controlled filenames, leading to a path traversal vulnerability. This can be exploited by an authenticated user to overwrite critical files within the Docker container, potentially leading to remote code execution as the root user.",
    "publishedDate": "2025-03-20T10:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2024-8695",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:desktop:*:*:*:*:*:*:*:*",
    "description": "A remote code execution (RCE) vulnerability via crafted extension description/changelog could be abused by a malicious extension in Docker Desktop before 4.34.2.",
    "publishedDate": "2024-09-12T18:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2024-8696",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:desktop:*:*:*:*:*:*:*:*",
    "description": "A remote code execution (RCE) vulnerability via crafted extension publisher-url/additional-urls could be abused by a malicious extension in Docker Desktop before 4.34.2.",
    "publishedDate": "2024-09-12T18:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2024-9348",
    "technology": "docker",
    "version": "4.34.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Docker Desktop before v4.34.3 allows RCE via unsanitized GitHub source link in Build view.",
    "publishedDate": "2024-10-16T15:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-0625",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker_desktop:*:*:*:*:*:*:*:*",
    "description": "Docker Desktop before 4.12.0 is vulnerable to RCE via a crafted extension description or changelog.\n\nThis issue affects Docker Desktop: before 4.12.0.\n\n",
    "publishedDate": "2023-09-25T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-0626",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker_desktop:*:*:*:*:*:*:*:*",
    "description": "Docker Desktop before 4.12.0 is vulnerable to RCE via query parameters in message-box route.\n\nThis issue affects Docker Desktop: before 4.12.0.\n\n",
    "publishedDate": "2023-09-25T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-0627",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker_desktop:*:*:*:*:*:*:*:*",
    "description": "Docker Desktop 4.11.x allows --no-windows-containers flag bypass via IPC response spoofing which may lead to Local Privilege Escalation (LPE).This issue affects Docker Desktop: 4.11.X.\n\n",
    "publishedDate": "2023-09-25T16:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-0628",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker_desktop:*:*:*:*:*:*:*:*",
    "description": "Docker Desktop before 4.17.0 allows an attacker to execute an arbitrary command inside a Dev Environments container during initialization by tricking a user to open a crafted malicious docker-desktop:// URL.",
    "publishedDate": "2023-03-13T12:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-0629",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker_desktop:*:*:*:*:*:*:*:*",
    "description": "Docker Desktop before 4.17.0 allows an unprivileged user to bypass Enhanced Container Isolation (ECI) restrictions by setting the Docker host to docker.raw.sock, or npipe:////.pipe/docker_engine_linux on Windows, via the -H (--host) CLI flag or the DOCKER_HOST environment variable and launch containers without the additional hardening features provided by ECI. This would not affect already running containers, nor containers launched through the usual approach (without Docker's raw socket).\n\nThe affected functionality is available for Docker Business customers only and assumes an environment where users are not granted local root or Administrator privileges.\nThis issue has been fixed in Docker Desktop 4.17.0. \n\nAffected Docker Desktop versions: from 4.13.0 before 4.17.0.\n\n",
    "publishedDate": "2023-03-13T12:15Z",
    "cvssScore": 7.1,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-0633",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker_desktop:*:*:*:*:*:*:*:*",
    "description": "In Docker Desktop on Windows before 4.12.0 an argument injection to installer may result in local privilege escalation (LPE).This issue affects Docker Desktop: before 4.12.0.\n\n",
    "publishedDate": "2023-09-25T16:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-1802",
    "technology": "docker",
    "version": "4.17.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:desktop:4.17.0:*:*:*:*:windows:*:*",
    "description": "In Docker Desktop 4.17.x the Artifactory Integration falls back to sending registry credentials over plain HTTP if the HTTPS health check has failed. A targeted network sniffing attack can lead to a disclosure of sensitive information. Only users who have Access Experimental Features enabled and have logged in to a private registry are affected. \n",
    "publishedDate": "2023-04-06T09:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "4.17.0",
      "startExcluding": "4.17.0"
    }
  },
  {
    "cveId": "CVE-2023-1802",
    "technology": "docker",
    "version": "4.17.1",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:desktop:4.17.1:*:*:*:*:windows:*:*",
    "description": "In Docker Desktop 4.17.x the Artifactory Integration falls back to sending registry credentials over plain HTTP if the HTTPS health check has failed. A targeted network sniffing attack can lead to a disclosure of sensitive information. Only users who have Access Experimental Features enabled and have logged in to a private registry are affected. \n",
    "publishedDate": "2023-04-06T09:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "4.17.1",
      "startExcluding": "4.17.1"
    }
  },
  {
    "cveId": "CVE-2023-22495",
    "technology": "docker",
    "version": "1.11.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Izanami is a shared configuration service well-suited for micro-service architecture implementation. Attackers can bypass the authentication in this application when deployed using the official Docker image. Because a hard coded secret is used to sign the authentication token (JWT), an attacker could compromise another instance of Izanami. This issue has been patched in version 1.11.0.\n",
    "publishedDate": "2023-01-14T01:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-22949",
    "technology": "docker",
    "version": "3.7.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:tigergraph:tigergraph_enterprise:3.7.0:*:*:*:free:docker:*:*",
    "description": "An issue was discovered in TigerGraph Enterprise Free Edition 3.x. There is logging of user credentials. All authenticated GSQL access requests are logged by TigerGraph in multiple places. Each request includes both the username and password of the user in an easily decodable base64 form. That could allow a TigerGraph administrator to effectively harvest usernames/passwords.",
    "publishedDate": "2023-04-14T14:15Z",
    "cvssScore": 4.9,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "3.7.0",
      "startExcluding": "3.7.0"
    }
  },
  {
    "cveId": "CVE-2023-22951",
    "technology": "docker",
    "version": "3.7.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:tigergraph:tigergraph_enterprise:3.7.0:*:*:*:free:docker:*:*",
    "description": "An issue was discovered in TigerGraph Enterprise Free Edition 3.x. It creates an authentication token for internal systems use. This token can be read from the configuration file. Using this token on the REST API provides an attacker with anonymous admin-level privileges on all REST API endpoints.",
    "publishedDate": "2023-04-13T20:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "3.7.0",
      "startExcluding": "3.7.0"
    }
  },
  {
    "cveId": "CVE-2023-23933",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:amazon:opensearch:*:*:*:*:*:docker:*:*",
    "description": "OpenSearch Anomaly Detection identifies atypical data and receives automatic notifications. There is an issue with the application of document and field level restrictions in the Anomaly Detection plugin, where users with the Anomaly Detector role can read aggregated numerical data (e.g. averages, sums) of fields that are otherwise restricted to them. This issue only affects authenticated users who were previously granted read access to the indexes containing the restricted fields. This issue has been patched in versions 1.3.8 and 2.6.0. There are no known workarounds for this issue.",
    "publishedDate": "2023-02-03T20:15Z",
    "cvssScore": 4.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-23933",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:amazon:opensearch:*:*:*:*:*:docker:*:*",
    "description": "OpenSearch Anomaly Detection identifies atypical data and receives automatic notifications. There is an issue with the application of document and field level restrictions in the Anomaly Detection plugin, where users with the Anomaly Detector role can read aggregated numerical data (e.g. averages, sums) of fields that are otherwise restricted to them. This issue only affects authenticated users who were previously granted read access to the indexes containing the restricted fields. This issue has been patched in versions 1.3.8 and 2.6.0. There are no known workarounds for this issue.",
    "publishedDate": "2023-02-03T20:15Z",
    "cvssScore": 4.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-25806",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:amazon:opensearch:*:*:*:*:*:docker:*:*",
    "description": "OpenSearch Security is a plugin for OpenSearch that offers encryption, authentication and authorization. There is an observable discrepancy in the authentication response time between calls where the user provided exists and calls where it does not. This issue only affects calls using the internal basic identity provider (IdP), and not other externally configured IdPs. Patches were released in versions 1.3.9 and 2.6.0, there are no workarounds.",
    "publishedDate": "2023-03-02T04:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-25806",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:amazon:opensearch:*:*:*:*:*:docker:*:*",
    "description": "OpenSearch Security is a plugin for OpenSearch that offers encryption, authentication and authorization. There is an observable discrepancy in the authentication response time between calls where the user provided exists and calls where it does not. This issue only affects calls using the internal basic identity provider (IdP), and not other externally configured IdPs. Patches were released in versions 1.3.9 and 2.6.0, there are no workarounds.",
    "publishedDate": "2023-03-02T04:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-25809",
    "technology": "docker",
    "version": "1.1.5",
    "vulnerable": false,
    "cpeUri": "",
    "description": "runc is a CLI tool for spawning and running containers according to the OCI specification. In affected versions it was found that rootless runc makes `/sys/fs/cgroup` writable in following conditons: 1. when runc is executed inside the user namespace, and the `config.json` does not specify the cgroup namespace to be unshared (e.g.., `(docker|podman|nerdctl) run --cgroupns=host`, with Rootless Docker/Podman/nerdctl) or 2. when runc is executed outside the user namespace, and `/sys` is mounted with `rbind, ro` (e.g., `runc spec --rootless`; this condition is very rare). A container may gain the write access to user-owned cgroup hierarchy `/sys/fs/cgroup/user.slice/...` on the host . Other users's cgroup hierarchies are not affected. Users are advised to upgrade to version 1.1.5. Users unable to upgrade may unshare the cgroup namespace (`(docker|podman|nerdctl) run --cgroupns=private)`. This is the default behavior of Docker/Podman/nerdctl on cgroup v2 hosts. or add `/sys/fs/cgroup` to `maskedPaths`.\n",
    "publishedDate": "2023-03-29T19:15Z",
    "cvssScore": 6.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-25809",
    "technology": "docker",
    "version": "2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "runc is a CLI tool for spawning and running containers according to the OCI specification. In affected versions it was found that rootless runc makes `/sys/fs/cgroup` writable in following conditons: 1. when runc is executed inside the user namespace, and the `config.json` does not specify the cgroup namespace to be unshared (e.g.., `(docker|podman|nerdctl) run --cgroupns=host`, with Rootless Docker/Podman/nerdctl) or 2. when runc is executed outside the user namespace, and `/sys` is mounted with `rbind, ro` (e.g., `runc spec --rootless`; this condition is very rare). A container may gain the write access to user-owned cgroup hierarchy `/sys/fs/cgroup/user.slice/...` on the host . Other users's cgroup hierarchies are not affected. Users are advised to upgrade to version 1.1.5. Users unable to upgrade may unshare the cgroup namespace (`(docker|podman|nerdctl) run --cgroupns=private)`. This is the default behavior of Docker/Podman/nerdctl on cgroup v2 hosts. or add `/sys/fs/cgroup` to `maskedPaths`.\n",
    "publishedDate": "2023-03-29T19:15Z",
    "cvssScore": 6.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-26490",
    "technology": "docker",
    "version": "_dockerized",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:mailcow:mailcow\\:_dockerized:*:*:*:*:*:*:*:*",
    "description": "mailcow is a dockerized email package, with multiple containers linked in one bridged network. The Sync Job feature - which can be made available to standard users by assigning them the necessary permission - suffers from a shell command injection. A malicious user can abuse this vulnerability to obtain shell access to the Docker container running dovecot. The imapsync Perl script implements all the necessary functionality for this feature, including the XOAUTH2 authentication mechanism. This code path creates a shell command to call openssl. However, since different parts of the specified user password are included without any validation, one can simply execute additional shell commands. Notably, the default ACL for a newly-created mailcow account does not include the necessary permission. The Issue has been fixed within the 2023-03 Update (March 3rd 2023). As a temporary workaround the Syncjob ACL can be removed from all mailbox users, preventing from creating or changing existing Syncjobs.",
    "publishedDate": "2023-03-04T00:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "_dockerized",
      "startExcluding": "_dockerized"
    }
  },
  {
    "cveId": "CVE-2023-27482",
    "technology": "docker",
    "version": "2023.03.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "homeassistant is an open source home automation tool. A remotely exploitable vulnerability bypassing authentication for accessing the Supervisor API through Home Assistant has been discovered. This impacts all Home Assistant installation types that use the Supervisor 2023.01.1 or older. Installation types, like Home Assistant Container (for example Docker), or Home Assistant Core manually in a Python environment, are not affected. The issue has been mitigated and closed in Supervisor version 2023.03.1, which has been rolled out to all affected installations via the auto-update feature of the Supervisor. This rollout has been completed at the time of publication of this advisory. Home Assistant Core 2023.3.0 included mitigation for this vulnerability. Upgrading to at least that version is thus advised. In case one is not able to upgrade the Home Assistant Supervisor or the Home Assistant Core application at this time, it is advised to not expose your Home Assistant instance to the internet.",
    "publishedDate": "2023-03-08T18:15Z",
    "cvssScore": 10,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-28109",
    "technology": "docker",
    "version": "0.0.1",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:play-with-docker:play_with_docker:0.0.1:*:*:*:*:go:*:*",
    "description": "Play With Docker is a browser-based Docker playground. Versions 0.0.2 and prior are vulnerable to domain hijacking.\nBecause CORS configuration was not correct, an attacker could use `play-with-docker.com` as an example and set the origin header in an http request as `evil-play-with-docker.com`. The domain would echo in response header, which successfully bypassed the CORS policy and retrieved basic user information. This issue has been fixed in commit ed82247c9ab7990ad76ec2bf1498c2b2830b6f1a. There are no known workarounds.",
    "publishedDate": "2023-03-16T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "0.0.1",
      "startExcluding": "0.0.1"
    }
  },
  {
    "cveId": "CVE-2023-28109",
    "technology": "docker",
    "version": "0.0.2",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:play-with-docker:play_with_docker:0.0.2:*:*:*:*:go:*:*",
    "description": "Play With Docker is a browser-based Docker playground. Versions 0.0.2 and prior are vulnerable to domain hijacking.\nBecause CORS configuration was not correct, an attacker could use `play-with-docker.com` as an example and set the origin header in an http request as `evil-play-with-docker.com`. The domain would echo in response header, which successfully bypassed the CORS policy and retrieved basic user information. This issue has been fixed in commit ed82247c9ab7990ad76ec2bf1498c2b2830b6f1a. There are no known workarounds.",
    "publishedDate": "2023-03-16T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "0.0.2",
      "startExcluding": "0.0.2"
    }
  },
  {
    "cveId": "CVE-2023-28444",
    "technology": "docker",
    "version": "15.0.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "angular-server-side-configuration helps configure an angular application at runtime on the server or in a docker container via environment variables. angular-server-side-configuration detects used environment variables in TypeScript (.ts) files during build time of an Angular CLI project. The detected environment variables are written to a ngssc.json file in the output directory.\nDuring deployment of an Angular based app, the environment variables based on the variables from ngssc.json are inserted into the apps index.html (or defined index file). With version 15.0.0 the environment variable detection was widened to the entire project, relative to the angular.json file from the Angular CLI. In a monorepo setup, this could lead to environment variables intended for a backend/service to be detected and written to the ngssc.json, which would then be populated and exposed via index.html. This has NO IMPACT, in a plain Angular project that has no backend component. This vulnerability has been mitigated in version 15.1.0, by adding an option `searchPattern` which restricts the detection file range by default. As a workaround, manually edit or create ngssc.json or run script after ngssc.json generation.\n",
    "publishedDate": "2023-03-24T20:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-28444",
    "technology": "docker",
    "version": "15.1.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "angular-server-side-configuration helps configure an angular application at runtime on the server or in a docker container via environment variables. angular-server-side-configuration detects used environment variables in TypeScript (.ts) files during build time of an Angular CLI project. The detected environment variables are written to a ngssc.json file in the output directory.\nDuring deployment of an Angular based app, the environment variables based on the variables from ngssc.json are inserted into the apps index.html (or defined index file). With version 15.0.0 the environment variable detection was widened to the entire project, relative to the angular.json file from the Angular CLI. In a monorepo setup, this could lead to environment variables intended for a backend/service to be detected and written to the ngssc.json, which would then be populated and exposed via index.html. This has NO IMPACT, in a plain Angular project that has no backend component. This vulnerability has been mitigated in version 15.1.0, by adding an option `searchPattern` which restricts the detection file range by default. As a workaround, manually edit or create ngssc.json or run script after ngssc.json generation.\n",
    "publishedDate": "2023-03-24T20:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-30999",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:security_verify_access_docker:*:*:*:*:*:*:*:*",
    "description": "IBM Security Access Manager Container (IBM Security Verify Access Appliance 10.0.0.0 through 10.0.6.1 and IBM Security Verify Access Docker 10.0.0.0 through 10.0.6.1) could allow an attacker to cause a denial of service due to uncontrolled resource consumption.  IBM X-Force ID:  254651.",
    "publishedDate": "2024-02-03T01:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-31001",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:security_verify_access_docker:*:*:*:*:*:*:*:*",
    "description": "IBM Security Access Manager Container (IBM Security Verify Access Appliance 10.0.0.0 through 10.0.6.1 and IBM Security Verify Access Docker 10.0.6.1) temporarily stores sensitive information in files that could be accessed by a local user.  IBM X-Force ID:  254653.",
    "publishedDate": "2024-01-11T03:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-31003",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:security_verify_access_docker:*:*:*:*:*:*:*:*",
    "description": "IBM Security Access Manager Container (IBM Security Verify Access Appliance 10.0.0.0 through 10.0.6.1 and IBM Security Verify Access Docker 10.0.6.1) could allow a local user to obtain root access due to improper access controls.  IBM X-Force ID:  254658.",
    "publishedDate": "2024-01-11T03:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-31004",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:security_verify_access_docker:*:*:*:*:*:*:*:*",
    "description": "IBM Security Access Manager Container (IBM Security Verify Access Appliance 10.0.0.0 through 10.0.6.1 and IBM Security Verify Access Docker 10.0.0.0 through 10.0.6.1) could allow a remote attacker to gain access to the underlying system using man in the middle techniques.  IBM X-Force ID:  254765.",
    "publishedDate": "2024-02-03T01:15Z",
    "cvssScore": 9,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-31005",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:security_verify_access_docker:*:*:*:*:*:*:*:*",
    "description": "IBM Security Access Manager Container (IBM Security Verify Access Appliance 10.0.0.0 through 10.0.6.1 and IBM Security Verify Access Docker 10.0.0.0 through 10.0.6.1) could allow a local user to escalate their privileges due to an improper security configuration.  IBM X-Force ID:  254767.",
    "publishedDate": "2024-02-03T01:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-31006",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:security_verify_access_docker:*:*:*:*:*:*:*:*",
    "description": "IBM Security Access Manager Container (IBM Security Verify Access Appliance 10.0.0.0 through 10.0.6.1 and IBM Security Verify Access Docker 10.0.0.0 through 10.0.6.1) is vulnerable to a denial of service attacks on the DSC server.  IBM X-Force ID:  254776.",
    "publishedDate": "2024-02-03T01:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-31141",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:amazon:opensearch:*:*:*:*:*:docker:*:*",
    "description": "OpenSearch is open-source software suite for search, analytics, and observability applications. Prior to versions 1.3.10 and 2.7.0, there is an issue with the implementation of fine-grained access control rules (document-level security, field-level security and field masking) where they are not correctly applied to the queries during extremely rare race conditions potentially leading to incorrect access authorization. For this issue to be triggered, two concurrent requests need to land on the same instance exactly when query cache eviction happens, once every four hours. OpenSearch 1.3.10 and 2.7.0 contain a fix for this issue.",
    "publishedDate": "2023-05-08T21:15Z",
    "cvssScore": 5.9,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-31141",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:amazon:opensearch:*:*:*:*:*:docker:*:*",
    "description": "OpenSearch is open-source software suite for search, analytics, and observability applications. Prior to versions 1.3.10 and 2.7.0, there is an issue with the implementation of fine-grained access control rules (document-level security, field-level security and field masking) where they are not correctly applied to the queries during extremely rare race conditions potentially leading to incorrect access authorization. For this issue to be triggered, two concurrent requests need to land on the same instance exactly when query cache eviction happens, once every four hours. OpenSearch 1.3.10 and 2.7.0 contain a fix for this issue.",
    "publishedDate": "2023-05-08T21:15Z",
    "cvssScore": 5.9,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-32077",
    "technology": "docker",
    "version": "0.17.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Netmaker makes networks with WireGuard. Prior to versions 0.17.1 and 0.18.6, hardcoded DNS key usage has been found in Netmaker allowing unauth users to interact with DNS API endpoints. The issue is patched in 0.17.1 and fixed in 0.18.6.  If users are using 0.17.1, they should run `docker pull gravitl/netmaker:v0.17.1` and `docker-compose up -d`. This will switch them to the patched users. If users are using v0.18.0-0.18.5, they should upgrade to v0.18.6 or later. As a workaround, someone who is using version 0.17.1 can pull the latest docker image of the backend and restart the server.",
    "publishedDate": "2023-08-24T22:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-32077",
    "technology": "docker",
    "version": "0.18.0-0.18.5",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Netmaker makes networks with WireGuard. Prior to versions 0.17.1 and 0.18.6, hardcoded DNS key usage has been found in Netmaker allowing unauth users to interact with DNS API endpoints. The issue is patched in 0.17.1 and fixed in 0.18.6.  If users are using 0.17.1, they should run `docker pull gravitl/netmaker:v0.17.1` and `docker-compose up -d`. This will switch them to the patched users. If users are using v0.18.0-0.18.5, they should upgrade to v0.18.6 or later. As a workaround, someone who is using version 0.17.1 can pull the latest docker image of the backend and restart the server.",
    "publishedDate": "2023-08-24T22:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-32077",
    "technology": "docker",
    "version": "0.18.6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Netmaker makes networks with WireGuard. Prior to versions 0.17.1 and 0.18.6, hardcoded DNS key usage has been found in Netmaker allowing unauth users to interact with DNS API endpoints. The issue is patched in 0.17.1 and fixed in 0.18.6.  If users are using 0.17.1, they should run `docker pull gravitl/netmaker:v0.17.1` and `docker-compose up -d`. This will switch them to the patched users. If users are using v0.18.0-0.18.5, they should upgrade to v0.18.6 or later. As a workaround, someone who is using version 0.17.1 can pull the latest docker image of the backend and restart the server.",
    "publishedDate": "2023-08-24T22:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-32077",
    "technology": "docker",
    "version": "0.17.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Netmaker makes networks with WireGuard. Prior to versions 0.17.1 and 0.18.6, hardcoded DNS key usage has been found in Netmaker allowing unauth users to interact with DNS API endpoints. The issue is patched in 0.17.1 and fixed in 0.18.6.  If users are using 0.17.1, they should run `docker pull gravitl/netmaker:v0.17.1` and `docker-compose up -d`. This will switch them to the patched users. If users are using v0.18.0-0.18.5, they should upgrade to v0.18.6 or later. As a workaround, someone who is using version 0.17.1 can pull the latest docker image of the backend and restart the server.",
    "publishedDate": "2023-08-24T22:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-32078",
    "technology": "docker",
    "version": "0.17.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Netmaker makes networks with WireGuard. An Insecure Direct Object Reference (IDOR) vulnerability was found in versions prior to 0.17.1 and 0.18.6 in the user update function. By specifying another user's username, it was possible to update the other user's password. The issue is patched in 0.17.1 and fixed in 0.18.6. If Users are using 0.17.1, they should run `docker pull gravitl/netmaker:v0.17.1` and `docker-compose up -d`. This will switch them to the patched users. If users are using v0.18.0-0.18.5, they should upgrade to v0.18.6 or later. As a workaround, someone using version 0.17.1 can pull the latest docker image of the backend and restart the server.",
    "publishedDate": "2023-08-24T22:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-32078",
    "technology": "docker",
    "version": "0.18.0-0.18.5",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Netmaker makes networks with WireGuard. An Insecure Direct Object Reference (IDOR) vulnerability was found in versions prior to 0.17.1 and 0.18.6 in the user update function. By specifying another user's username, it was possible to update the other user's password. The issue is patched in 0.17.1 and fixed in 0.18.6. If Users are using 0.17.1, they should run `docker pull gravitl/netmaker:v0.17.1` and `docker-compose up -d`. This will switch them to the patched users. If users are using v0.18.0-0.18.5, they should upgrade to v0.18.6 or later. As a workaround, someone using version 0.17.1 can pull the latest docker image of the backend and restart the server.",
    "publishedDate": "2023-08-24T22:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-32078",
    "technology": "docker",
    "version": "0.18.6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Netmaker makes networks with WireGuard. An Insecure Direct Object Reference (IDOR) vulnerability was found in versions prior to 0.17.1 and 0.18.6 in the user update function. By specifying another user's username, it was possible to update the other user's password. The issue is patched in 0.17.1 and fixed in 0.18.6. If Users are using 0.17.1, they should run `docker pull gravitl/netmaker:v0.17.1` and `docker-compose up -d`. This will switch them to the patched users. If users are using v0.18.0-0.18.5, they should upgrade to v0.18.6 or later. As a workaround, someone using version 0.17.1 can pull the latest docker image of the backend and restart the server.",
    "publishedDate": "2023-08-24T22:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-32078",
    "technology": "docker",
    "version": "0.17.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Netmaker makes networks with WireGuard. An Insecure Direct Object Reference (IDOR) vulnerability was found in versions prior to 0.17.1 and 0.18.6 in the user update function. By specifying another user's username, it was possible to update the other user's password. The issue is patched in 0.17.1 and fixed in 0.18.6. If Users are using 0.17.1, they should run `docker pull gravitl/netmaker:v0.17.1` and `docker-compose up -d`. This will switch them to the patched users. If users are using v0.18.0-0.18.5, they should upgrade to v0.18.6 or later. As a workaround, someone using version 0.17.1 can pull the latest docker image of the backend and restart the server.",
    "publishedDate": "2023-08-24T22:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-32079",
    "technology": "docker",
    "version": "0.17.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Netmaker makes networks with WireGuard. A Mass assignment vulnerability was found in versions prior to 0.17.1 and 0.18.6 that allows a non-admin user to escalate privileges to those of an admin user. The issue is patched in 0.17.1 and fixed in 0.18.6. If Users are using 0.17.1, they should run `docker pull gravitl/netmaker:v0.17.1` and `docker-compose up -d`. This will switch them to the patched users If users are using v0.18.0-0.18.5, they should upgrade to v0.18.6 or later. As a workaround, someone using version 0.17.1 can pull the latest docker image of the backend and restart the server.",
    "publishedDate": "2023-08-24T23:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-32079",
    "technology": "docker",
    "version": "0.18.0-0.18.5",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Netmaker makes networks with WireGuard. A Mass assignment vulnerability was found in versions prior to 0.17.1 and 0.18.6 that allows a non-admin user to escalate privileges to those of an admin user. The issue is patched in 0.17.1 and fixed in 0.18.6. If Users are using 0.17.1, they should run `docker pull gravitl/netmaker:v0.17.1` and `docker-compose up -d`. This will switch them to the patched users If users are using v0.18.0-0.18.5, they should upgrade to v0.18.6 or later. As a workaround, someone using version 0.17.1 can pull the latest docker image of the backend and restart the server.",
    "publishedDate": "2023-08-24T23:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-32079",
    "technology": "docker",
    "version": "0.18.6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Netmaker makes networks with WireGuard. A Mass assignment vulnerability was found in versions prior to 0.17.1 and 0.18.6 that allows a non-admin user to escalate privileges to those of an admin user. The issue is patched in 0.17.1 and fixed in 0.18.6. If Users are using 0.17.1, they should run `docker pull gravitl/netmaker:v0.17.1` and `docker-compose up -d`. This will switch them to the patched users If users are using v0.18.0-0.18.5, they should upgrade to v0.18.6 or later. As a workaround, someone using version 0.17.1 can pull the latest docker image of the backend and restart the server.",
    "publishedDate": "2023-08-24T23:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-32079",
    "technology": "docker",
    "version": "0.17.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Netmaker makes networks with WireGuard. A Mass assignment vulnerability was found in versions prior to 0.17.1 and 0.18.6 that allows a non-admin user to escalate privileges to those of an admin user. The issue is patched in 0.17.1 and fixed in 0.18.6. If Users are using 0.17.1, they should run `docker pull gravitl/netmaker:v0.17.1` and `docker-compose up -d`. This will switch them to the patched users If users are using v0.18.0-0.18.5, they should upgrade to v0.18.6 or later. As a workaround, someone using version 0.17.1 can pull the latest docker image of the backend and restart the server.",
    "publishedDate": "2023-08-24T23:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-32327",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:security_verify_access_docker:*:*:*:*:*:*:*:*",
    "description": "IBM Security Access Manager Container (IBM Security Verify Access Appliance 10.0.0.0 through 10.0.6.1 and IBM Security Verify Access Docker 10.0.0.0 through 10.0.6.1) is vulnerable to an XML External Entity Injection (XXE) attack when processing XML data. A remote attacker could exploit this vulnerability to expose sensitive information or consume memory resources.  IBM X-Force ID:  254783.",
    "publishedDate": "2024-02-03T01:15Z",
    "cvssScore": 7.1,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-32329",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:security_verify_access_docker:*:*:*:*:*:*:*:*",
    "description": "IBM Security Access Manager Container (IBM Security Verify Access Appliance 10.0.0.0 through 10.0.6.1 and IBM Security Verify Access Docker 10.0.0.0 through 10.0.6.1) could allow a user to download files from an incorrect repository due to improper file validation.  IBM X-Force ID:  254972.",
    "publishedDate": "2024-02-03T01:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-34108",
    "technology": "docker",
    "version": "_dockerized",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:mailcow:mailcow\\:_dockerized:*:*:*:*:*:*:*:*",
    "description": "mailcow is a mail server suite based on Dovecot, Postfix and other open source software, that provides a modern web UI for user/server administration. A vulnerability has been discovered in mailcow which allows an attacker to manipulate internal Dovecot variables by using specially crafted passwords during the authentication process. The issue arises from the behavior of the `passwd-verify.lua` script, which is responsible for verifying user passwords during login attempts. Upon a successful login, the script returns a response in the format of \"password=\u003cvalid-password\u003e\", indicating the successful authentication. By crafting a password with additional key-value pairs appended to it, an attacker can manipulate the returned string and influence the internal behavior of Dovecot. For example, using the password \"123 mail_crypt_save_version=0\" would cause the `passwd-verify.lua` script to return the string \"password=123 mail_crypt_save_version=0\". Consequently, Dovecot will interpret this string and set the internal variables accordingly, leading to unintended consequences. This vulnerability can be exploited by an authenticated attacker who has the ability to set their own password. Successful exploitation of this vulnerability could result in unauthorized access to user accounts, bypassing security controls, or other malicious activities. This issue has been patched in version `2023-05a`. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "publishedDate": "2023-06-07T18:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "_dockerized",
      "startExcluding": "_dockerized"
    }
  },
  {
    "cveId": "CVE-2023-34844",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:play_with_docker_project:play_with_docker:*:*:*:*:*:*:*:*",
    "description": "Play With Docker \u003c 0.0.2 has an insecure CAP_SYS_ADMIN privileged mode causing the docker container to escape.",
    "publishedDate": "2023-06-29T15:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-36816",
    "technology": "docker",
    "version": "4.0.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "2FA is a Web app to manage Two-Factor Authentication (2FA) accounts and generate their security codes. Cross site scripting (XSS) injection can be done via the account/service field. This was tested in docker-compose environment. This vulnerability has been patched in version 4.0.3.\n",
    "publishedDate": "2023-07-03T17:15Z",
    "cvssScore": 6.1,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-37273",
    "technology": "docker",
    "version": "0.4.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Auto-GPT is an experimental open-source application showcasing the capabilities of the GPT-4 language model. Running Auto-GPT version prior to 0.4.3 by cloning the git repo and executing `docker compose run auto-gpt` in the repo root uses a different docker-compose.yml file from the one suggested in the official docker set up instructions. The docker-compose.yml file located in the repo root mounts itself into the docker container without write protection. This means that if malicious custom python code is executed via the `execute_python_file` and `execute_python_code` commands, it can overwrite the docker-compose.yml file and abuse it to gain control of the host system the next time Auto-GPT is started. The issue has been patched in version 0.4.3.",
    "publishedDate": "2023-07-13T23:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-37274",
    "technology": "docker",
    "version": "0.4.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Auto-GPT is an experimental open-source application showcasing the capabilities of the GPT-4 language model. When Auto-GPT is executed directly on the host system via the provided run.sh or run.bat files, custom Python code execution is sandboxed using a temporary dedicated docker container which should not have access to any files outside of the Auto-GPT workspace directory.\nBefore v0.4.3, the `execute_python_code` command (introduced in v0.4.1) does not sanitize the `basename` arg before writing LLM-supplied code to a file with an LLM-supplied name. This allows for a path traversal attack that can overwrite any .py file outside the workspace directory by specifying a `basename` such as `../../../main.py`. This can further be abused to achieve arbitrary code execution on the host running Auto-GPT by e.g. overwriting autogpt/main.py which will be executed outside of the docker environment meant to sandbox custom python code execution the next time Auto-GPT is started. The issue has been patched in version 0.4.3. As a workaround, the risk introduced by this vulnerability can be remediated by running Auto-GPT in a virtual machine, or another environment in which damage to files or corruption of the program is not a critical problem.",
    "publishedDate": "2023-07-13T23:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-37274",
    "technology": "docker",
    "version": "0.4.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Auto-GPT is an experimental open-source application showcasing the capabilities of the GPT-4 language model. When Auto-GPT is executed directly on the host system via the provided run.sh or run.bat files, custom Python code execution is sandboxed using a temporary dedicated docker container which should not have access to any files outside of the Auto-GPT workspace directory.\nBefore v0.4.3, the `execute_python_code` command (introduced in v0.4.1) does not sanitize the `basename` arg before writing LLM-supplied code to a file with an LLM-supplied name. This allows for a path traversal attack that can overwrite any .py file outside the workspace directory by specifying a `basename` such as `../../../main.py`. This can further be abused to achieve arbitrary code execution on the host running Auto-GPT by e.g. overwriting autogpt/main.py which will be executed outside of the docker environment meant to sandbox custom python code execution the next time Auto-GPT is started. The issue has been patched in version 0.4.3. As a workaround, the risk introduced by this vulnerability can be remediated by running Auto-GPT in a virtual machine, or another environment in which damage to files or corruption of the program is not a critical problem.",
    "publishedDate": "2023-07-13T23:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-37274",
    "technology": "docker",
    "version": "0.4.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Auto-GPT is an experimental open-source application showcasing the capabilities of the GPT-4 language model. When Auto-GPT is executed directly on the host system via the provided run.sh or run.bat files, custom Python code execution is sandboxed using a temporary dedicated docker container which should not have access to any files outside of the Auto-GPT workspace directory.\nBefore v0.4.3, the `execute_python_code` command (introduced in v0.4.1) does not sanitize the `basename` arg before writing LLM-supplied code to a file with an LLM-supplied name. This allows for a path traversal attack that can overwrite any .py file outside the workspace directory by specifying a `basename` such as `../../../main.py`. This can further be abused to achieve arbitrary code execution on the host running Auto-GPT by e.g. overwriting autogpt/main.py which will be executed outside of the docker environment meant to sandbox custom python code execution the next time Auto-GPT is started. The issue has been patched in version 0.4.3. As a workaround, the risk introduced by this vulnerability can be remediated by running Auto-GPT in a virtual machine, or another environment in which damage to files or corruption of the program is not a critical problem.",
    "publishedDate": "2023-07-13T23:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-38267",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:security_verify_access_docker:*:*:*:*:*:*:*:*",
    "description": "IBM Security Access Manager Appliance (IBM Security Verify Access Appliance 10.0.0.0 through 10.0.6.1 and IBM Security Verify Access Docker 10.0.6.1) could allow a local user to possibly elevate their privileges due to sensitive configuration information being exposed.  IBM X-Force ID:  260584.",
    "publishedDate": "2024-01-11T03:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-39523",
    "technology": "docker",
    "version": "32.5.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "ScanCode.io is a server to script and automate software composition analysis with ScanPipe pipelines. Prior to version 32.5.1, the software has a possible command injection vulnerability in the docker fetch process as it allows to append malicious commands in the `docker_reference` parameter.\n\nIn the function `scanpipe/pipes/fetch.py:fetch_docker_image` the parameter `docker_reference` is user controllable. The `docker_reference` variable is then passed to the vulnerable function `get_docker_image_platform`.  However, the `get_docker_image_plaform` function constructs a shell command with the passed `docker_reference`. The `pipes.run_command` then executes the shell command without any prior sanitization, making the function vulnerable to command injections. A malicious user who is able to create or add inputs to a project can inject commands. Although the command injections are blind and the user will not receive direct feedback without logs, it is still possible to cause damage to the server/container. The vulnerability appears for example if a malicious user adds a semicolon after the input of `docker://;`, it would allow appending malicious commands.\n\nVersion 32.5.1 contains a patch for this issue. The `docker_reference` input should be sanitized to avoid command injections and, as a workaround, one may avoid creating commands with user controlled input directly.",
    "publishedDate": "2023-08-07T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-39523",
    "technology": "docker",
    "version": "32.5.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "ScanCode.io is a server to script and automate software composition analysis with ScanPipe pipelines. Prior to version 32.5.1, the software has a possible command injection vulnerability in the docker fetch process as it allows to append malicious commands in the `docker_reference` parameter.\n\nIn the function `scanpipe/pipes/fetch.py:fetch_docker_image` the parameter `docker_reference` is user controllable. The `docker_reference` variable is then passed to the vulnerable function `get_docker_image_platform`.  However, the `get_docker_image_plaform` function constructs a shell command with the passed `docker_reference`. The `pipes.run_command` then executes the shell command without any prior sanitization, making the function vulnerable to command injections. A malicious user who is able to create or add inputs to a project can inject commands. Although the command injections are blind and the user will not receive direct feedback without logs, it is still possible to cause damage to the server/container. The vulnerability appears for example if a malicious user adds a semicolon after the input of `docker://;`, it would allow appending malicious commands.\n\nVersion 32.5.1 contains a patch for this issue. The `docker_reference` input should be sanitized to avoid command injections and, as a workaround, one may avoid creating commands with user controlled input directly.",
    "publishedDate": "2023-08-07T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-40350",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:jenkins:docker_swarm:*:*:*:*:*:jenkins:*:*",
    "description": "Jenkins Docker Swarm Plugin 1.11 and earlier does not escape values returned from Docker before inserting them into the Docker Swarm Dashboard view, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers able to control responses from Docker.",
    "publishedDate": "2023-08-16T15:15Z",
    "cvssScore": 5.4,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-40453",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:machine:*:*:*:*:*:*:*:*",
    "description": "Docker Machine through 0.16.2 allows an attacker, who has control of a worker node, to provide crafted version data, which might potentially trick an administrator into performing an unsafe action (via escape sequence injection), or might have a data size that causes a denial of service to a bastion node. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
    "publishedDate": "2023-11-07T04:20Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-41044",
    "technology": "docker",
    "version": "5.1.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Graylog is a free and open log management platform. A partial path traversal vulnerability exists in Graylog's `Support Bundle` feature. The vulnerability is caused by incorrect user input validation in an HTTP API resource. Graylog's Support Bundle feature allows an attacker with valid Admin role credentials to download or delete files in sibling directories of the support bundle directory. The default `data_dir` in operating system packages (DEB, RPM) is set to `/var/lib/graylog-server`. The data directory for the Support Bundle feature is always `\u003cdata_dir\u003e/support-bundle`. Due to the partial path traversal vulnerability, an attacker with valid Admin role credentials can read or delete files in directories that start with a `/var/lib/graylog-server/support-bundle` directory name. The vulnerability would allow the download or deletion of files in the following example directories: `/var/lib/graylog-server/support-bundle-test` and `/var/lib/graylog-server/support-bundlesdirectory`. For the Graylog Docker images, the `data_dir` is set to `/usr/share/graylog/data` by default. This vulnerability is fixed in Graylog version 5.1.3 and later. Users are advised to upgrade. Users unable to upgrade should block all HTTP requests to the following HTTP API endpoints by using a reverse proxy server in front of Graylog. `GET /api/system/debug/support/bundle/download/{filename}` and `DELETE /api/system/debug/support/bundle/{filename}`.\n",
    "publishedDate": "2023-08-31T18:15Z",
    "cvssScore": 3.8,
    "severity": "LOW",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-41329",
    "technology": "docker",
    "version": "2.35.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "WireMock is a tool for mocking HTTP services. The proxy mode of WireMock, can be protected by the network restrictions configuration, as documented in Preventing proxying to and recording from specific target addresses. These restrictions can be configured using the domain names, and in such a case the configuration is vulnerable to the DNS rebinding attacks. A similar patch was applied in WireMock 3.0.0-beta-15 for the WireMock Webhook Extensions. The root cause of the attack is a defect in the logic which allows for a race condition triggered by a DNS server whose address expires in between the initial validation and the outbound network request that might go to a domain that was supposed to be prohibited. Control over a DNS service is required to exploit this attack, so it has high execution complexity and limited impact. This issue has been addressed in version 2.35.1 of wiremock-jre8 and wiremock-jre8-standalone, version 3.0.3 of wiremock and wiremock-standalone, version 2.6.1 of the python version of wiremock, and versions 2.35.1-1 and 3.0.3-1 of the wiremock/wiremock Docker container. Users are advised to upgrade. Users unable to upgrade should either configure firewall rules to define the list of permitted destinations or to configure WireMock to use IP addresses instead of the domain names.",
    "publishedDate": "2023-09-06T21:15Z",
    "cvssScore": 6.6,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-41329",
    "technology": "docker",
    "version": "3.0.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "WireMock is a tool for mocking HTTP services. The proxy mode of WireMock, can be protected by the network restrictions configuration, as documented in Preventing proxying to and recording from specific target addresses. These restrictions can be configured using the domain names, and in such a case the configuration is vulnerable to the DNS rebinding attacks. A similar patch was applied in WireMock 3.0.0-beta-15 for the WireMock Webhook Extensions. The root cause of the attack is a defect in the logic which allows for a race condition triggered by a DNS server whose address expires in between the initial validation and the outbound network request that might go to a domain that was supposed to be prohibited. Control over a DNS service is required to exploit this attack, so it has high execution complexity and limited impact. This issue has been addressed in version 2.35.1 of wiremock-jre8 and wiremock-jre8-standalone, version 3.0.3 of wiremock and wiremock-standalone, version 2.6.1 of the python version of wiremock, and versions 2.35.1-1 and 3.0.3-1 of the wiremock/wiremock Docker container. Users are advised to upgrade. Users unable to upgrade should either configure firewall rules to define the list of permitted destinations or to configure WireMock to use IP addresses instead of the domain names.",
    "publishedDate": "2023-09-06T21:15Z",
    "cvssScore": 6.6,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-41329",
    "technology": "docker",
    "version": "2.6.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "WireMock is a tool for mocking HTTP services. The proxy mode of WireMock, can be protected by the network restrictions configuration, as documented in Preventing proxying to and recording from specific target addresses. These restrictions can be configured using the domain names, and in such a case the configuration is vulnerable to the DNS rebinding attacks. A similar patch was applied in WireMock 3.0.0-beta-15 for the WireMock Webhook Extensions. The root cause of the attack is a defect in the logic which allows for a race condition triggered by a DNS server whose address expires in between the initial validation and the outbound network request that might go to a domain that was supposed to be prohibited. Control over a DNS service is required to exploit this attack, so it has high execution complexity and limited impact. This issue has been addressed in version 2.35.1 of wiremock-jre8 and wiremock-jre8-standalone, version 3.0.3 of wiremock and wiremock-standalone, version 2.6.1 of the python version of wiremock, and versions 2.35.1-1 and 3.0.3-1 of the wiremock/wiremock Docker container. Users are advised to upgrade. Users unable to upgrade should either configure firewall rules to define the list of permitted destinations or to configure WireMock to use IP addresses instead of the domain names.",
    "publishedDate": "2023-09-06T21:15Z",
    "cvssScore": 6.6,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-41329",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:wiremock:wiremock_docker:*:*:*:*:*:*:*:*",
    "description": "WireMock is a tool for mocking HTTP services. The proxy mode of WireMock, can be protected by the network restrictions configuration, as documented in Preventing proxying to and recording from specific target addresses. These restrictions can be configured using the domain names, and in such a case the configuration is vulnerable to the DNS rebinding attacks. A similar patch was applied in WireMock 3.0.0-beta-15 for the WireMock Webhook Extensions. The root cause of the attack is a defect in the logic which allows for a race condition triggered by a DNS server whose address expires in between the initial validation and the outbound network request that might go to a domain that was supposed to be prohibited. Control over a DNS service is required to exploit this attack, so it has high execution complexity and limited impact. This issue has been addressed in version 2.35.1 of wiremock-jre8 and wiremock-jre8-standalone, version 3.0.3 of wiremock and wiremock-standalone, version 2.6.1 of the python version of wiremock, and versions 2.35.1-1 and 3.0.3-1 of the wiremock/wiremock Docker container. Users are advised to upgrade. Users unable to upgrade should either configure firewall rules to define the list of permitted destinations or to configure WireMock to use IP addresses instead of the domain names.",
    "publishedDate": "2023-09-06T21:15Z",
    "cvssScore": 6.6,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-41329",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:wiremock:wiremock_docker:*:*:*:*:*:*:*:*",
    "description": "WireMock is a tool for mocking HTTP services. The proxy mode of WireMock, can be protected by the network restrictions configuration, as documented in Preventing proxying to and recording from specific target addresses. These restrictions can be configured using the domain names, and in such a case the configuration is vulnerable to the DNS rebinding attacks. A similar patch was applied in WireMock 3.0.0-beta-15 for the WireMock Webhook Extensions. The root cause of the attack is a defect in the logic which allows for a race condition triggered by a DNS server whose address expires in between the initial validation and the outbound network request that might go to a domain that was supposed to be prohibited. Control over a DNS service is required to exploit this attack, so it has high execution complexity and limited impact. This issue has been addressed in version 2.35.1 of wiremock-jre8 and wiremock-jre8-standalone, version 3.0.3 of wiremock and wiremock-standalone, version 2.6.1 of the python version of wiremock, and versions 2.35.1-1 and 3.0.3-1 of the wiremock/wiremock Docker container. Users are advised to upgrade. Users unable to upgrade should either configure firewall rules to define the list of permitted destinations or to configure WireMock to use IP addresses instead of the domain names.",
    "publishedDate": "2023-09-06T21:15Z",
    "cvssScore": 6.6,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-43016",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:security_verify_access_docker:*:*:*:*:*:*:*:*",
    "description": "IBM Security Access Manager Container (IBM Security Verify Access Appliance 10.0.0.0 through 10.0.6.1 and IBM Security Verify Access Docker 10.0.0.0 through 10.0.6.1) could allow a remote user to log into the server due to a user account with an empty password.  IBM X-Force ID:  266154.",
    "publishedDate": "2024-02-03T01:15Z",
    "cvssScore": 7.3,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-43069",
    "technology": "docker",
    "version": "1.4",
    "vulnerable": false,
    "cpeUri": "",
    "description": "\nDell SmartFabric Storage Software v1.4 (and earlier) contain(s) an OS Command Injection Vulnerability in the CLI. An authenticated local attacker could potentially exploit this vulnerability, leading to possible injection of parameters to curl or docker.\n\n",
    "publishedDate": "2023-10-05T18:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-45807",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:amazon:opensearch:*:*:*:*:*:docker:*:*",
    "description": "OpenSearch is a community-driven, open source fork of Elasticsearch and Kibana following the license change in early 2021. There is an issue with the implementation of tenant permissions in OpenSearch Dashboards where authenticated users with read-only access to a tenant can perform create, edit and delete operations on index metadata of dashboards and visualizations in that tenant, potentially rendering them unavailable. This issue does not affect index data, only metadata. Dashboards correctly enforces read-only permissions when indexing and updating documents. This issue does not provide additional read access to data users don’t already have. This issue can be mitigated by disabling the tenants functionality for the cluster. Versions 1.3.14 and 2.11.0 contain a fix for this issue.",
    "publishedDate": "2023-10-16T22:15Z",
    "cvssScore": 5.4,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-45807",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:amazon:opensearch:*:*:*:*:*:docker:*:*",
    "description": "OpenSearch is a community-driven, open source fork of Elasticsearch and Kibana following the license change in early 2021. There is an issue with the implementation of tenant permissions in OpenSearch Dashboards where authenticated users with read-only access to a tenant can perform create, edit and delete operations on index metadata of dashboards and visualizations in that tenant, potentially rendering them unavailable. This issue does not affect index data, only metadata. Dashboards correctly enforces read-only permissions when indexing and updating documents. This issue does not provide additional read access to data users don’t already have. This issue can be mitigated by disabling the tenants functionality for the cluster. Versions 1.3.14 and 2.11.0 contain a fix for this issue.",
    "publishedDate": "2023-10-16T22:15Z",
    "cvssScore": 5.4,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-48311",
    "technology": "docker",
    "version": "13",
    "vulnerable": false,
    "cpeUri": "",
    "description": "dockerspawner is a tool to spawn JupyterHub single user servers in Docker containers. Users of JupyterHub deployments running DockerSpawner starting with 0.11.0 without specifying `DockerSpawner.allowed_images` configuration allow users to launch _any_ pullable docker image, instead of restricting to only the single configured image, as intended. This issue has been addressed in commit `3ba4b665b` which has been included in dockerspawner release version 13. Users are advised to upgrade. Users unable to upgrade should explicitly set `DockerSpawner.allowed_images` to a non-empty list containing only the default image will result in the intended default behavior.",
    "publishedDate": "2023-12-08T20:15Z",
    "cvssScore": 4.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-48311",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:jupyter:dockerspawner:*:*:*:*:*:*:*:*",
    "description": "dockerspawner is a tool to spawn JupyterHub single user servers in Docker containers. Users of JupyterHub deployments running DockerSpawner starting with 0.11.0 without specifying `DockerSpawner.allowed_images` configuration allow users to launch _any_ pullable docker image, instead of restricting to only the single configured image, as intended. This issue has been addressed in commit `3ba4b665b` which has been included in dockerspawner release version 13. Users are advised to upgrade. Users unable to upgrade should explicitly set `DockerSpawner.allowed_images` to a non-empty list containing only the default image will result in the intended default behavior.",
    "publishedDate": "2023-12-08T20:15Z",
    "cvssScore": 4.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-49077",
    "technology": "docker",
    "version": "2023",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Mailcow: dockerized is an open source groupware/email suite based on docker. A Cross-Site Scripting (XSS) vulnerability has been identified within the Quarantine UI of the system. This vulnerability poses a significant threat to administrators who utilize the Quarantine feature. An attacker can send a carefully crafted email containing malicious JavaScript code. This issue has been patched in version 2023-11.",
    "publishedDate": "2023-11-30T07:15Z",
    "cvssScore": 6.1,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-49077",
    "technology": "docker",
    "version": "_dockerized",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:mailcow:mailcow\\:_dockerized:*:*:*:*:*:*:*:*",
    "description": "Mailcow: dockerized is an open source groupware/email suite based on docker. A Cross-Site Scripting (XSS) vulnerability has been identified within the Quarantine UI of the system. This vulnerability poses a significant threat to administrators who utilize the Quarantine feature. An attacker can send a carefully crafted email containing malicious JavaScript code. This issue has been patched in version 2023-11.",
    "publishedDate": "2023-11-30T07:15Z",
    "cvssScore": 6.1,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "_dockerized",
      "startExcluding": "_dockerized"
    }
  },
  {
    "cveId": "CVE-2023-51518",
    "technology": "docker",
    "version": "3.7.5",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Apache James prior to version 3.7.5 and 3.8.0 exposes a JMX endpoint on localhost subject to pre-authentication deserialisation of untrusted data.\nGiven a deserialisation gadjet, this could be leveraged as part of an exploit chain that could result in privilege escalation.\nNote that by default JMX endpoint is only bound locally.\n\nWe recommend users to:\n - Upgrade to a non-vulnerable Apache James version\n\n - Run Apache James isolated from other processes (docker - dedicated virtual machine)\n - If possible turn off JMX\n\n",
    "publishedDate": "2024-02-27T09:15Z",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2023-5165",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker_desktop:*:*:*:*:*:*:*:*",
    "description": "Docker Desktop before 4.23.0 allows an unprivileged user to bypass Enhanced Container Isolation (ECI) restrictions via the debug shell which remains accessible for a short time window after launching Docker Desktop. The affected functionality is available for Docker Business customers only and assumes an environment where users are not granted local root or Administrator privileges. \n\nThis issue has been fixed in Docker Desktop 4.23.0. \n\nAffected Docker Desktop versions: from 4.13.0 before 4.23.0.\n",
    "publishedDate": "2023-09-25T16:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2023-5166",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker_desktop:*:*:*:*:*:*:*:*",
    "description": "Docker Desktop before 4.23.0 allows Access Token theft via a crafted extension icon URL.\n\nThis issue affects Docker Desktop: before 4.23.0.\n\n",
    "publishedDate": "2023-09-25T16:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-0324",
    "technology": "docker",
    "version": "6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "There is a vulnerability in DHCPv6 packet parsing code that could be explored by remote attacker to craft a packet that could cause buffer overflow in a memcpy call, leading to out-of-bounds memory write that would cause dhcp6relay to crash. Dhcp6relay is a critical process and could cause dhcp relay docker to shutdown.\n\nDiscovered by Eugene Lim of GovTech Singapore.\n",
    "publishedDate": "2022-11-14T17:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-20617",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:jenkins:docker_commons:*:*:*:*:*:jenkins:*:*",
    "description": "Jenkins Docker Commons Plugin 1.17 and earlier does not sanitize the name of an image or a tag, resulting in an OS command execution vulnerability exploitable by attackers with Item/Configure permission or able to control the contents of a previously configured job's SCM repository.",
    "publishedDate": "2022-01-12T20:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-22984",
    "technology": "docker",
    "version": "20221130.093605",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The package snyk before 1.1064.0; the package snyk-mvn-plugin before 2.31.3; the package snyk-gradle-plugin before 3.24.5; the package @snyk/snyk-cocoapods-plugin before 2.5.3; the package snyk-sbt-plugin before 2.16.2; the package snyk-python-plugin before 1.24.2; the package snyk-docker-plugin before 5.6.5; the package @snyk/snyk-hex-plugin before 1.1.6 are vulnerable to Command Injection due to an incomplete fix for [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342). A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags. In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline. This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated. The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",
    "publishedDate": "2022-11-30T13:15Z",
    "cvssScore": 6.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-22984",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:snyk:snyk_docker_cli:*:*:*:*:*:snyk:*:*",
    "description": "The package snyk before 1.1064.0; the package snyk-mvn-plugin before 2.31.3; the package snyk-gradle-plugin before 3.24.5; the package @snyk/snyk-cocoapods-plugin before 2.5.3; the package snyk-sbt-plugin before 2.16.2; the package snyk-python-plugin before 1.24.2; the package snyk-docker-plugin before 5.6.5; the package @snyk/snyk-hex-plugin before 1.1.6 are vulnerable to Command Injection due to an incomplete fix for [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342). A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags. In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline. This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated. The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",
    "publishedDate": "2022-11-30T13:15Z",
    "cvssScore": 6.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-23774",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker_desktop:*:*:*:*:*:*:*:*",
    "description": "Docker Desktop before 4.4.4 on Windows allows attackers to move arbitrary files.",
    "publishedDate": "2022-02-01T06:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2022-24769",
    "technology": "docker",
    "version": "20.10.14",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Moby is an open-source project created by Docker to enable and accelerate software containerization. A bug was found in Moby (Docker Engine) prior to version 20.10.14 where containers were incorrectly started with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during `execve(2)`. Normally, when executable programs have specified permitted file capabilities, otherwise unprivileged users and processes can execute those programs and gain the specified file capabilities up to the bounding set. Due to this bug, containers which included executable programs with inheritable file capabilities allowed otherwise unprivileged users and processes to additionally gain these inheritable file capabilities up to the container's bounding set. Containers which use Linux users and groups to perform privilege separation inside the container are most directly impacted. This bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container's bounding set. This bug has been fixed in Moby (Docker Engine) 20.10.14. Running containers should be stopped, deleted, and recreated for the inheritable capabilities to be reset. This fix changes Moby (Docker Engine) behavior such that containers are started with a more typical Linux environment. As a workaround, the entry point of a container can be modified to use a utility like `capsh(1)` to drop inheritable capabilities prior to the primary process starting.",
    "publishedDate": "2022-03-24T20:15Z",
    "cvssScore": 5.9,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-24799",
    "technology": "docker",
    "version": "0.29.2-0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "wire-webapp is the web application interface for the wire messaging service. Insufficient escaping in markdown “code highlighting” in the wire-webapp resulted in the possibility of injecting and executing arbitrary HTML code and thus also JavaScript. If a user receives and views such a malicious message, arbitrary code is injected and executed in the context of the victim. This allows the attacker to fully control the user account. Wire-desktop clients that are connected to a vulnerable wire-webapp version are also vulnerable to this attack. The issue has been fixed in wire-webapp 2022-03-30-production.0 and is already deployed on all Wire managed services. On-premise instances of wire-webapp need to be updated to docker tag 2022-03-30-production.0-v0.29.2-0-d144552 or wire-server 2022-03-30 (chart/4.8.0), so that their applications are no longer affected. There are no known workarounds for this issue. ### Patches * The issue has been fixed in wire-webapp **2022-03-30-production.0** and is already deployed on all Wire managed services. * On-premise instances of wire-webapp need to be updated to docker tag **2022-03-30-production.0-v0.29.2-0-d144552** or wire-server **2022-03-30 (chart/4.8.0)**, so that their applications are no longer affected. ### Workarounds * No workarounds known ### For more information If you have any questions or comments about this advisory feel free to email us at [vulnerability-report@wire.com](mailto:vulnerability-report@wire.com) ### Credits We thank [Posix](https://twitter.com/po6ix) for reporting this vulnerability",
    "publishedDate": "2022-04-20T18:15Z",
    "cvssScore": 6.1,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-24799",
    "technology": "docker",
    "version": "0.29.2-0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "wire-webapp is the web application interface for the wire messaging service. Insufficient escaping in markdown “code highlighting” in the wire-webapp resulted in the possibility of injecting and executing arbitrary HTML code and thus also JavaScript. If a user receives and views such a malicious message, arbitrary code is injected and executed in the context of the victim. This allows the attacker to fully control the user account. Wire-desktop clients that are connected to a vulnerable wire-webapp version are also vulnerable to this attack. The issue has been fixed in wire-webapp 2022-03-30-production.0 and is already deployed on all Wire managed services. On-premise instances of wire-webapp need to be updated to docker tag 2022-03-30-production.0-v0.29.2-0-d144552 or wire-server 2022-03-30 (chart/4.8.0), so that their applications are no longer affected. There are no known workarounds for this issue. ### Patches * The issue has been fixed in wire-webapp **2022-03-30-production.0** and is already deployed on all Wire managed services. * On-premise instances of wire-webapp need to be updated to docker tag **2022-03-30-production.0-v0.29.2-0-d144552** or wire-server **2022-03-30 (chart/4.8.0)**, so that their applications are no longer affected. ### Workarounds * No workarounds known ### For more information If you have any questions or comments about this advisory feel free to email us at [vulnerability-report@wire.com](mailto:vulnerability-report@wire.com) ### Credits We thank [Posix](https://twitter.com/po6ix) for reporting this vulnerability",
    "publishedDate": "2022-04-20T18:15Z",
    "cvssScore": 6.1,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-25365",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker:*:*:*:*:*:*:*:*",
    "description": "Docker Desktop before 4.5.1 on Windows allows attackers to move arbitrary files. NOTE: this issue exists because of an incomplete fix for CVE-2022-23774.",
    "publishedDate": "2022-02-19T02:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2022-26659",
    "technology": "docker",
    "version": "4.6.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Docker Desktop installer on Windows in versions before 4.6.0 allows an attacker to overwrite any administrator writable files by creating a symlink in place of where the installer writes its log file. Starting from version 4.6.0, the Docker Desktop installer, when run elevated, will write its log files to a location not writable by non-administrator users.",
    "publishedDate": "2022-03-25T21:15Z",
    "cvssScore": 7.1,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-26659",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker_desktop:*:*:*:*:*:*:*:*",
    "description": "Docker Desktop installer on Windows in versions before 4.6.0 allows an attacker to overwrite any administrator writable files by creating a symlink in place of where the installer writes its log file. Starting from version 4.6.0, the Docker Desktop installer, when run elevated, will write its log files to a location not writable by non-administrator users.",
    "publishedDate": "2022-03-25T21:15Z",
    "cvssScore": 7.1,
    "severity": "HIGH",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2022-29168",
    "technology": "docker",
    "version": "0.29.7-0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Wire is a secure messaging application. Wire is vulnerable to arbitrary HTML and Javascript execution via insufficient escaping when rendering `@mentions` in the wire-webapp. If a user receives and views a malicious message, arbitrary code is injected and executed in the context of the victim allowing the attacker to fully control the user account. Wire-desktop clients that are connected to a vulnerable wire-webapp version are also vulnerable to this attack. The issue has been fixed in wire-webapp 2022-05-04-production.0 and is already deployed on all Wire managed services. On-premise instances of wire-webapp need to be updated to docker tag 2022-05-04-production.0-v0.29.7-0-a6f2ded or wire-server 2022-05-04 (chart/4.11.0) or later. No known workarounds exist.",
    "publishedDate": "2022-06-25T07:15Z",
    "cvssScore": 6.1,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-29180",
    "technology": "docker",
    "version": "0.12.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "A vulnerability in which attackers could forge HTTP requests to manipulate the `charm` data directory to access or delete anything on the server. This has been patched and is available in release [v0.12.1](https://github.com/charmbracelet/charm/releases/tag/v0.12.1). We recommend that all users running self-hosted `charm` instances update immediately. This vulnerability was found in-house and we haven't been notified of any potential exploiters. ### Additional notes * Encrypted user data uploaded to the Charm server is safe as Charm servers cannot decrypt user data. This includes filenames, paths, and all key-value data. * Users running the official Charm [Docker images](https://github.com/charmbracelet/charm/blob/main/docker.md) are at minimal risk because the exploit is limited to the containerized filesystem.",
    "publishedDate": "2022-05-07T04:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-29180",
    "technology": "docker",
    "version": "0.12.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "A vulnerability in which attackers could forge HTTP requests to manipulate the `charm` data directory to access or delete anything on the server. This has been patched and is available in release [v0.12.1](https://github.com/charmbracelet/charm/releases/tag/v0.12.1). We recommend that all users running self-hosted `charm` instances update immediately. This vulnerability was found in-house and we haven't been notified of any potential exploiters. ### Additional notes * Encrypted user data uploaded to the Charm server is safe as Charm servers cannot decrypt user data. This includes filenames, paths, and all key-value data. * Users running the official Charm [Docker images](https://github.com/charmbracelet/charm/blob/main/docker.md) are at minimal risk because the exploit is limited to the containerized filesystem.",
    "publishedDate": "2022-05-07T04:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-29186",
    "technology": "docker",
    "version": "4.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Rundeck is an open source automation service with a web console, command line tools and a WebAPI. Rundeck community and rundeck-enterprise docker images contained a pre-generated SSH keypair. If the id_rsa.pub public key of the keypair was copied to authorized_keys files on remote host, those hosts would allow access to anyone with the exposed private credentials. This misconfiguration only impacts Rundeck Docker instances of PagerDuty® Process Automation On Prem (formerly Rundeck) version 4.0 and earlier, not Debian, RPM or .WAR. Additionally, the id_rsa.pub file would have to be copied from the Docker image filesystem contents without overwriting it and used to configure SSH access on a host. A patch on Rundeck's `main` branch has removed the pre-generated SSH key pair, but it does not remove exposed keys that have been configured. To patch, users must run a script on hosts in their environment to search for exposed keys and rotate them. Two workarounds are available: Do not use any pre-existing public key file from the rundeck docker images to allow SSH access by adding it to authorized_keys files and, if you have copied the public key file included in the docker image, remove it from any authorized_keys files.",
    "publishedDate": "2022-05-20T21:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-29229",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:cassproject:competency_and_skills_system:*:*:*:*:*:docker:*:*",
    "description": "CaSS is a Competency and Skills System. CaSS Library, (npm:cassproject) has a missing cryptographic step when storing cryptographic keys that can allow a server administrator access to an account’s cryptographic keys. This affects CaSS servers using standalone username/password authentication, which uses a method that expects e2e cryptographic security of authorization credentials. The issue has been patched in 1.5.8, however, the vulnerable accounts are only resecured when the user next logs in using standalone authentication, as the data required to resecure the account is not available to the server. The issue may be mitigated by using SSO or client side certificates to log in. Please note that SSO and client side certificate authentication does not have this expectation of no-knowledge credential access, and cryptographic keys are available to the server administrator.",
    "publishedDate": "2022-05-18T21:15Z",
    "cvssScore": 7.2,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-31066",
    "technology": "docker",
    "version": "2.1.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "EdgeX Foundry is an open source project for building a common open framework for Internet of Things edge computing. Prior to version 2.1.1, the /api/v2/config endpoint exposes message bus credentials to local unauthenticated users. In security-enabled mode, message bus credentials are supposed to be kept in the EdgeX secret store and require authentication to access. This vulnerability bypasses the access controls on message bus credentials when running in security-enabled mode. (No credentials are required when running in security-disabled mode.) As a result, attackers could intercept data or inject fake data into the EdgeX message bus. Users should upgrade to EdgeXFoundry Kamakura release (2.2.0) or to the June 2022 EdgeXFoundry LTS Jakarta release (2.1.1) to receive a patch. More information about which go modules, docker containers, and snaps contain patches is available in the GitHub Security Advisory. There are currently no known workarounds for this issue.",
    "publishedDate": "2022-06-14T22:15Z",
    "cvssScore": 4.4,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31066",
    "technology": "docker",
    "version": "2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "EdgeX Foundry is an open source project for building a common open framework for Internet of Things edge computing. Prior to version 2.1.1, the /api/v2/config endpoint exposes message bus credentials to local unauthenticated users. In security-enabled mode, message bus credentials are supposed to be kept in the EdgeX secret store and require authentication to access. This vulnerability bypasses the access controls on message bus credentials when running in security-enabled mode. (No credentials are required when running in security-disabled mode.) As a result, attackers could intercept data or inject fake data into the EdgeX message bus. Users should upgrade to EdgeXFoundry Kamakura release (2.2.0) or to the June 2022 EdgeXFoundry LTS Jakarta release (2.1.1) to receive a patch. More information about which go modules, docker containers, and snaps contain patches is available in the GitHub Security Advisory. There are currently no known workarounds for this issue.",
    "publishedDate": "2022-06-14T22:15Z",
    "cvssScore": 4.4,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31138",
    "technology": "docker",
    "version": "_dockerized",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:mailcow:mailcow\\:_dockerized:*:*:*:*:*:*:*:*",
    "description": "mailcow is a mailserver suite. Prior to mailcow-dockerized version 2022-06a, an extended privilege vulnerability can be exploited by manipulating the custom parameters regexmess, skipmess, regexflag, delete2foldersonly, delete2foldersbutnot, regextrans2, pipemess, or maxlinelengthcmd to execute arbitrary code. Users should update their mailcow instances with the `update.sh` script in the mailcow root directory to 2022-06a or newer to receive a patch for this issue. As a temporary workaround, the Syncjob ACL can be removed from all mailbox users, preventing changes to those settings.",
    "publishedDate": "2022-07-11T14:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "_dockerized",
      "startExcluding": "_dockerized"
    }
  },
  {
    "cveId": "CVE-2022-31245",
    "technology": "docker",
    "version": "_dockerized",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:mailcow:mailcow\\:_dockerized:*:*:*:*:*:*:*:*",
    "description": "mailcow before 2022-05d allows a remote authenticated user to inject OS commands and escalate privileges to domain admin via the --debug option in conjunction with the ---PIPEMESS option in Sync Jobs.",
    "publishedDate": "2022-05-20T15:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "_dockerized",
      "startExcluding": "_dockerized"
    }
  },
  {
    "cveId": "CVE-2022-31647",
    "technology": "docker",
    "version": "2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Docker Desktop before 4.6.0 on Windows allows attackers to delete any file through the hyperv/destroy dockerBackendV2 API via a symlink in the DataFolder parameter, a different vulnerability than CVE-2022-26659.",
    "publishedDate": "2023-04-27T20:15Z",
    "cvssScore": 7.1,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-31647",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:desktop:*:*:*:*:windows:*:*:*",
    "description": "Docker Desktop before 4.6.0 on Windows allows attackers to delete any file through the hyperv/destroy dockerBackendV2 API via a symlink in the DataFolder parameter, a different vulnerability than CVE-2022-26659.",
    "publishedDate": "2023-04-27T20:15Z",
    "cvssScore": 7.1,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-34292",
    "technology": "docker",
    "version": "2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Docker Desktop for Windows before 4.6.0 allows attackers to overwrite any file through a symlink attack on the hyperv/create dockerBackendV2 API by controlling the DataFolder parameter for DockerDesktop.vhdx, a similar issue to CVE-2022-31647.",
    "publishedDate": "2023-04-27T20:15Z",
    "cvssScore": 7.1,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-34292",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:desktop:*:*:*:*:windows:*:*:*",
    "description": "Docker Desktop for Windows before 4.6.0 allows attackers to overwrite any file through a symlink attack on the hyperv/create dockerBackendV2 API by controlling the DataFolder parameter for DockerDesktop.vhdx, a similar issue to CVE-2022-31647.",
    "publishedDate": "2023-04-27T20:15Z",
    "cvssScore": 7.1,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-34882",
    "technology": "docker",
    "version": "-",
    "vulnerable": false,
    "cpeUri": "cpe:2.3:a:docker:docker:-:*:*:*:*:*:*:*",
    "description": "Information Exposure Through an Error Message vulnerability in Hitachi RAID Manager Storage Replication Adapter allows remote authenticated users to gain sensitive information. This issue affects: Hitachi RAID Manager Storage Replication Adapter 02.01.04 versions prior to 02.03.02 on Windows; 02.05.00 versions prior to 02.05.01 on Windows and Docker.\n\n",
    "publishedDate": "2022-09-06T07:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe_child",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2022-34883",
    "technology": "docker",
    "version": "-",
    "vulnerable": false,
    "cpeUri": "cpe:2.3:a:docker:docker:-:*:*:*:*:*:*:*",
    "description": "OS Command Injection vulnerability in Hitachi RAID Manager Storage Replication Adapter allows remote authenticated users to execute arbitrary OS commands. This issue affects: Hitachi RAID Manager Storage Replication Adapter 02.01.04 versions prior to 02.03.02 on Windows; 02.05.00 versions prior to 02.05.01 on Windows and Docker.\n\n",
    "publishedDate": "2022-09-06T07:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe_child",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2022-35980",
    "technology": "docker",
    "version": "2.0.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:amazon:opensearch:2.0.0:*:*:*:*:docker:*:*",
    "description": "OpenSearch Security is a plugin for OpenSearch that offers encryption, authentication and authorization. Versions 2.0.0.0 and 2.1.0.0 of the security plugin are affected by an information disclosure vulnerability. Requests to an OpenSearch cluster configured with advanced access control features document level security (DLS), field level security (FLS), and/or field masking will not be filtered when the query's search pattern matches an aliased index. OpenSearch Dashboards creates an alias to `.kibana` by default, so filters with the index pattern of `*` to restrict access to documents or fields will not be applied. This issue allows requests to access sensitive information when customer have acted to restrict access that specific information. OpenSearch 2.2.0, which is compatible with OpenSearch Security 2.2.0.0, contains the fix for this issue. There is no recommended work around.",
    "publishedDate": "2022-08-12T18:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.0.0",
      "startExcluding": "2.0.0"
    }
  },
  {
    "cveId": "CVE-2022-35980",
    "technology": "docker",
    "version": "2.1.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:amazon:opensearch:2.1.0:*:*:*:*:docker:*:*",
    "description": "OpenSearch Security is a plugin for OpenSearch that offers encryption, authentication and authorization. Versions 2.0.0.0 and 2.1.0.0 of the security plugin are affected by an information disclosure vulnerability. Requests to an OpenSearch cluster configured with advanced access control features document level security (DLS), field level security (FLS), and/or field masking will not be filtered when the query's search pattern matches an aliased index. OpenSearch Dashboards creates an alias to `.kibana` by default, so filters with the index pattern of `*` to restrict access to documents or fields will not be applied. This issue allows requests to access sensitive information when customer have acted to restrict access that specific information. OpenSearch 2.2.0, which is compatible with OpenSearch Security 2.2.0.0, contains the fix for this issue. There is no recommended work around.",
    "publishedDate": "2022-08-12T18:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.1.0",
      "startExcluding": "2.1.0"
    }
  },
  {
    "cveId": "CVE-2022-36775",
    "technology": "docker",
    "version": "10.0.1.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:security_verify_access_docker:10.0.1.0:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access 10.0.0.0, 10.0.1.0, 10.0.2.0, 10.0.3.0, and10.0.4.0 is vulnerable to HTTP header injection, caused by improper validation of input by the HOST headers.  This could allow an attacker to conduct various attacks against the vulnerable system, including cross-site scripting, cache poisoning or session hijacking.  IBM X-Force ID:  233576.",
    "publishedDate": "2023-02-17T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "10.0.1.0",
      "startExcluding": "10.0.1.0"
    }
  },
  {
    "cveId": "CVE-2022-36775",
    "technology": "docker",
    "version": "10.0.2.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:security_verify_access_docker:10.0.2.0:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access 10.0.0.0, 10.0.1.0, 10.0.2.0, 10.0.3.0, and10.0.4.0 is vulnerable to HTTP header injection, caused by improper validation of input by the HOST headers.  This could allow an attacker to conduct various attacks against the vulnerable system, including cross-site scripting, cache poisoning or session hijacking.  IBM X-Force ID:  233576.",
    "publishedDate": "2023-02-17T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "10.0.2.0",
      "startExcluding": "10.0.2.0"
    }
  },
  {
    "cveId": "CVE-2022-36775",
    "technology": "docker",
    "version": "10.0.4.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:security_verify_access_docker:10.0.4.0:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access 10.0.0.0, 10.0.1.0, 10.0.2.0, 10.0.3.0, and10.0.4.0 is vulnerable to HTTP header injection, caused by improper validation of input by the HOST headers.  This could allow an attacker to conduct various attacks against the vulnerable system, including cross-site scripting, cache poisoning or session hijacking.  IBM X-Force ID:  233576.",
    "publishedDate": "2023-02-17T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "10.0.4.0",
      "startExcluding": "10.0.4.0"
    }
  },
  {
    "cveId": "CVE-2022-36775",
    "technology": "docker",
    "version": "10.0.3.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:security_verify_access_docker:10.0.3.0:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access 10.0.0.0, 10.0.1.0, 10.0.2.0, 10.0.3.0, and10.0.4.0 is vulnerable to HTTP header injection, caused by improper validation of input by the HOST headers.  This could allow an attacker to conduct various attacks against the vulnerable system, including cross-site scripting, cache poisoning or session hijacking.  IBM X-Force ID:  233576.",
    "publishedDate": "2023-02-17T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "10.0.3.0",
      "startExcluding": "10.0.3.0"
    }
  },
  {
    "cveId": "CVE-2022-36775",
    "technology": "docker",
    "version": "10.0.0.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:security_verify_access_docker:10.0.0.0:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access 10.0.0.0, 10.0.1.0, 10.0.2.0, 10.0.3.0, and10.0.4.0 is vulnerable to HTTP header injection, caused by improper validation of input by the HOST headers.  This could allow an attacker to conduct various attacks against the vulnerable system, including cross-site scripting, cache poisoning or session hijacking.  IBM X-Force ID:  233576.",
    "publishedDate": "2023-02-17T17:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "10.0.0.0",
      "startExcluding": "10.0.0.0"
    }
  },
  {
    "cveId": "CVE-2022-37326",
    "technology": "docker",
    "version": "2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Docker Desktop for Windows before 4.6.0 allows attackers to delete (or create) any file through the dockerBackendV2 windowscontainers/start API by controlling the pidfile field inside the DaemonJSON field in the WindowsContainerStartRequest class. This can indirectly lead to privilege escalation.",
    "publishedDate": "2023-04-27T20:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-37326",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:desktop:*:*:*:*:windows:*:*:*",
    "description": "Docker Desktop for Windows before 4.6.0 allows attackers to delete (or create) any file through the dockerBackendV2 windowscontainers/start API by controlling the pidfile field inside the DaemonJSON field in the WindowsContainerStartRequest class. This can indirectly lead to privilege escalation.",
    "publishedDate": "2023-04-27T20:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-38362",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:apache:apache-airflow-providers-docker:*:*:*:*:*:*:*:*",
    "description": "Apache Airflow Docker's Provider prior to 3.0.0 shipped with an example DAG that was vulnerable to (authenticated) remote code exploit of code on the Airflow worker host.",
    "publishedDate": "2022-08-16T14:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-38730",
    "technology": "docker",
    "version": "2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Docker Desktop for Windows before 4.6 allows attackers to overwrite any file through the windowscontainers/start dockerBackendV2 API by controlling the data-root field inside the DaemonJSON field in the WindowsContainerStartRequest class. This allows exploiting a symlink vulnerability in ..\\dataRoot\\network\\files\\local-kv.db because of a TOCTOU race condition.",
    "publishedDate": "2023-04-27T20:15Z",
    "cvssScore": 6.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-38730",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:desktop:*:*:*:*:windows:*:*:*",
    "description": "Docker Desktop for Windows before 4.6 allows attackers to overwrite any file through the windowscontainers/start dockerBackendV2 API by controlling the data-root field inside the DaemonJSON field in the WindowsContainerStartRequest class. This allows exploiting a symlink vulnerability in ..\\dataRoot\\network\\files\\local-kv.db because of a TOCTOU race condition.",
    "publishedDate": "2023-04-27T20:15Z",
    "cvssScore": 6.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-39258",
    "technology": "docker",
    "version": "_dockerized",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:mailcow:mailcow\\:_dockerized:*:*:*:*:*:*:*:*",
    "description": "mailcow is a mailserver suite. A vulnerability innversions prior to 2022-09 allows an attacker to craft a custom Swagger API template to spoof Authorize links. This could redirect a victim to an attacker controller place to steal Swagger authorization credentials or create a phishing page to steal other information. The issue has been fixed with the 2022-09 mailcow Mootember Update. As a workaround, one may delete the Swapper API Documentation from their e-mail server.",
    "publishedDate": "2022-09-27T15:15Z",
    "cvssScore": 8.2,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "_dockerized",
      "startExcluding": "_dockerized"
    }
  },
  {
    "cveId": "CVE-2022-39380",
    "technology": "docker",
    "version": "2022",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Wire web-app is part of Wire communications. Versions prior to 2022-11-02 are subject to Improper Handling of Exceptional Conditions. In the wire-webapp, certain combinations of Markdown formatting can trigger an unhandled error in the conversion to HTML representation. The error makes it impossible to display the affected chat history, other conversations are not affected. The issue has been fixed in version 2022-11-02 and is already deployed on all Wire managed services. On-premise instances of wire-webapp need to be updated to docker tag 2022-11-02-production.0-v0.31.9-0-337e400 or wire-server 2022-11-03 (chart/4.26.0), so that their applications are no longer affected. As a workaround, you may use an iOS or Android client and delete the corresponding message from the history OR write 30 or more messages into the affected conversation to prevent the client from further rendering of the corresponding message. When attempting to retrieve messages from the conversation history, the error will continue to occur once the malformed message is part of the result.",
    "publishedDate": "2023-01-27T21:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-39380",
    "technology": "docker",
    "version": "0.31.9-0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Wire web-app is part of Wire communications. Versions prior to 2022-11-02 are subject to Improper Handling of Exceptional Conditions. In the wire-webapp, certain combinations of Markdown formatting can trigger an unhandled error in the conversion to HTML representation. The error makes it impossible to display the affected chat history, other conversations are not affected. The issue has been fixed in version 2022-11-02 and is already deployed on all Wire managed services. On-premise instances of wire-webapp need to be updated to docker tag 2022-11-02-production.0-v0.31.9-0-337e400 or wire-server 2022-11-03 (chart/4.26.0), so that their applications are no longer affected. As a workaround, you may use an iOS or Android client and delete the corresponding message from the history OR write 30 or more messages into the affected conversation to prevent the client from further rendering of the corresponding message. When attempting to retrieve messages from the conversation history, the error will continue to occur once the malformed message is part of the result.",
    "publishedDate": "2023-01-27T21:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-41906",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:amazon:opensearch_notifications:*:*:*:*:*:docker:*:*",
    "description": "OpenSearch Notifications is a notifications plugin for OpenSearch that enables other plugins to send notifications via Email, Slack, Amazon Chime, Custom web-hook etc channels. A potential SSRF issue in OpenSearch Notifications Plugin starting in 2.0.0 and prior to 2.2.1 could allow an existing privileged user to enumerate listening services or interact with configured resources via HTTP requests exceeding the Notification plugin's intended scope. OpenSearch 2.2.1+ contains the fix for this issue. There are currently no recommended workarounds. \n",
    "publishedDate": "2022-11-11T19:15Z",
    "cvssScore": 8.7,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-41918",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:amazon:opensearch:*:*:*:*:*:docker:*:*",
    "description": "OpenSearch is a community-driven, open source fork of Elasticsearch and Kibana. There is an issue with the implementation of fine-grained access control rules (document-level security, field-level security and field masking) where they are not correctly applied to the indices that back data streams potentially leading to incorrect access authorization. OpenSearch 1.3.7 and 2.4.0 contain a fix for this issue. Users are advised to update. There are no known workarounds for this issue.",
    "publishedDate": "2022-11-15T23:15Z",
    "cvssScore": 6.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-41918",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:amazon:opensearch:*:*:*:*:*:docker:*:*",
    "description": "OpenSearch is a community-driven, open source fork of Elasticsearch and Kibana. There is an issue with the implementation of fine-grained access control rules (document-level security, field-level security and field masking) where they are not correctly applied to the indices that back data streams potentially leading to incorrect access authorization. OpenSearch 1.3.7 and 2.4.0 contain a fix for this issue. Users are advised to update. There are no known workarounds for this issue.",
    "publishedDate": "2022-11-15T23:15Z",
    "cvssScore": 6.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-45385",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:jenkins:cloudbees_docker_hub\\/registry_notification:*:*:*:*:*:jenkins:*:*",
    "description": "A missing permission check in Jenkins CloudBees Docker Hub/Registry Notification Plugin 2.6.2 and earlier allows unauthenticated attackers to trigger builds of jobs corresponding to the attacker-specified repository.",
    "publishedDate": "2022-11-15T20:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2022-46157",
    "technology": "docker",
    "version": "5.0.119",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Akeneo PIM is an open source Product Information Management (PIM). Akeneo PIM Community Edition versions before v5.0.119 and v6.0.53 allows remote authenticated users to execute arbitrary PHP code on the server by uploading a crafted image. Akeneo PIM Community Edition after the versions aforementioned provides patched Apache HTTP server configuration file, for docker setup and in documentation sample, to fix this vulnerability.   Community Edition users must change their Apache HTTP server configuration accordingly to be protected. The patch for Cloud Based Akeneo PIM Services customers has been applied since 30th October 2022. Users are advised to upgrade. Users unable to upgrade may  Replace any reference to `\u003cFilesMatch \\.php$\u003e` in their apache httpd configurations with: `\u003cLocation \"/index.php\"\u003e`.",
    "publishedDate": "2022-12-09T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2022-46157",
    "technology": "docker",
    "version": "6.0.53",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Akeneo PIM is an open source Product Information Management (PIM). Akeneo PIM Community Edition versions before v5.0.119 and v6.0.53 allows remote authenticated users to execute arbitrary PHP code on the server by uploading a crafted image. Akeneo PIM Community Edition after the versions aforementioned provides patched Apache HTTP server configuration file, for docker setup and in documentation sample, to fix this vulnerability.   Community Edition users must change their Apache HTTP server configuration accordingly to be protected. The patch for Cloud Based Akeneo PIM Services customers has been applied since 30th October 2022. Users are advised to upgrade. Users unable to upgrade may  Replace any reference to `\u003cFilesMatch \\.php$\u003e` in their apache httpd configurations with: `\u003cLocation \"/index.php\"\u003e`.",
    "publishedDate": "2022-12-09T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-20191",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:redhat:docker_community_collection:*:*:*:*:*:ansible:*:*",
    "description": "A flaw was found in ansible. Credentials, such as secrets, are being disclosed in console log by default and not protected by no_log feature when using those modules. An attacker can take advantage of this information to steal those credentials. The highest threat from this vulnerability is to data confidentiality. Versions before ansible 2.9.18 are affected.",
    "publishedDate": "2021-05-26T21:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-20496",
    "technology": "docker",
    "version": "-",
    "vulnerable": false,
    "cpeUri": "cpe:2.3:a:docker:docker:-:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access Docker 10.0.0 could allow an authenticated user to bypass input due to improper input validation. IBM X-Force ID: 197966.",
    "publishedDate": "2021-07-15T18:15Z",
    "cvssScore": 4.9,
    "severity": "MEDIUM",
    "matchingSource": "cpe_child",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2021-20497",
    "technology": "docker",
    "version": "-",
    "vulnerable": false,
    "cpeUri": "cpe:2.3:a:docker:docker:-:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access Docker 10.0.0 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 197969",
    "publishedDate": "2021-07-15T18:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe_child",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2021-20498",
    "technology": "docker",
    "version": "-",
    "vulnerable": false,
    "cpeUri": "cpe:2.3:a:docker:docker:-:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access Docker 10.0.0 reveals version information in HTTP requests that could be used in further attacks against the system. IBM X-Force ID: 197972.",
    "publishedDate": "2021-07-15T18:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe_child",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2021-20499",
    "technology": "docker",
    "version": "-",
    "vulnerable": false,
    "cpeUri": "cpe:2.3:a:docker:docker:-:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access Docker 10.0.0 could allow a remote attacker to obtain sensitive information when a detailed technical error message is returned in the browser. This information could be used in further attacks against the system. IBM X-Force ID: 197973",
    "publishedDate": "2021-07-15T18:15Z",
    "cvssScore": 2.7,
    "severity": "LOW",
    "matchingSource": "cpe_child",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2021-20500",
    "technology": "docker",
    "version": "-",
    "vulnerable": false,
    "cpeUri": "cpe:2.3:a:docker:docker:-:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access Docker 10.0.0 could reveal highly sensitive information to a local privileged user. IBM X-Force ID: 197980.",
    "publishedDate": "2021-07-15T18:15Z",
    "cvssScore": 4.4,
    "severity": "MEDIUM",
    "matchingSource": "cpe_child",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2021-20510",
    "technology": "docker",
    "version": "-",
    "vulnerable": false,
    "cpeUri": "cpe:2.3:a:docker:docker:-:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access Docker 10.0.0 stores user credentials in plain clear text which can be read by a local user. IBM X-Force ID: 198299",
    "publishedDate": "2021-07-15T18:15Z",
    "cvssScore": 4.4,
    "severity": "MEDIUM",
    "matchingSource": "cpe_child",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2021-20511",
    "technology": "docker",
    "version": "-",
    "vulnerable": false,
    "cpeUri": "cpe:2.3:a:docker:docker:-:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access Docker 10.0.0 could allow a remote attacker to traverse directories on the system. An attacker could send a specially-crafted URL request containing \"dot dot\" sequences (/../) to view arbitrary files on the system. IBM X-Force ID: 198300.",
    "publishedDate": "2021-07-15T18:15Z",
    "cvssScore": 4.9,
    "severity": "MEDIUM",
    "matchingSource": "cpe_child",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2021-20523",
    "technology": "docker",
    "version": "-",
    "vulnerable": false,
    "cpeUri": "cpe:2.3:a:docker:docker:-:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access Docker 10.0.0 could allow a remote attacker to obtain sensitive information when a detailed technical error message is returned in the browser. This information could be used in further attacks against the system. IBM X-Force ID: 198660",
    "publishedDate": "2021-07-15T18:15Z",
    "cvssScore": 2.7,
    "severity": "LOW",
    "matchingSource": "cpe_child",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2021-20524",
    "technology": "docker",
    "version": "-",
    "vulnerable": false,
    "cpeUri": "cpe:2.3:a:docker:docker:-:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access Docker 10.0.0 is vulnerable to cross-site scripting. This vulnerability allows users to embed arbitrary JavaScript code in the Web UI thus altering the intended functionality potentially leading to credentials disclosure within a trusted session. IBM X-Force ID: 198661.",
    "publishedDate": "2021-07-15T18:15Z",
    "cvssScore": 4.8,
    "severity": "MEDIUM",
    "matchingSource": "cpe_child",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2021-20533",
    "technology": "docker",
    "version": "-",
    "vulnerable": false,
    "cpeUri": "cpe:2.3:a:docker:docker:-:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access Docker 10.0.0 could allow a remote authenticated attacker to execute arbitrary commands on the system by sending a specially crafted request. IBM X-Force ID: 198813",
    "publishedDate": "2021-07-15T18:15Z",
    "cvssScore": 7.2,
    "severity": "HIGH",
    "matchingSource": "cpe_child",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2021-20534",
    "technology": "docker",
    "version": "-",
    "vulnerable": false,
    "cpeUri": "cpe:2.3:a:docker:docker:-:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access Docker 10.0.0 could allow a remote attacker to conduct phishing attacks, using an open redirect attack. By persuading a victim to visit a specially crafted Web site, a remote attacker could exploit this vulnerability to spoof the URL displayed to redirect a user to a malicious Web site that would appear to be trusted. This could allow the attacker to obtain highly sensitive information or conduct further attacks against the victim. IBM X-Force ID: 198814",
    "publishedDate": "2021-07-15T18:15Z",
    "cvssScore": 3.5,
    "severity": "LOW",
    "matchingSource": "cpe_child",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2021-20537",
    "technology": "docker",
    "version": "-",
    "vulnerable": false,
    "cpeUri": "cpe:2.3:a:docker:docker:-:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access Docker 10.0.0 contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. IBM X-Force ID:198918",
    "publishedDate": "2021-07-15T18:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe_child",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2021-21284",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker:*:*:*:*:*:*:*:*",
    "description": "In Docker before versions 9.03.15, 20.10.3 there is a vulnerability involving the --userns-remap option in which access to remapped root allows privilege escalation to real root. When using \"--userns-remap\", if the root user in the remapped namespace has access to the host filesystem they can modify files under \"/var/lib/docker/\u003cremapping\u003e\" that cause writing files with extended privileges. Versions 20.10.3 and 19.03.15 contain patches that prevent privilege escalation from remapped user.",
    "publishedDate": "2021-02-02T18:15Z",
    "cvssScore": 6.8,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-21284",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker:*:*:*:*:*:*:*:*",
    "description": "In Docker before versions 9.03.15, 20.10.3 there is a vulnerability involving the --userns-remap option in which access to remapped root allows privilege escalation to real root. When using \"--userns-remap\", if the root user in the remapped namespace has access to the host filesystem they can modify files under \"/var/lib/docker/\u003cremapping\u003e\" that cause writing files with extended privileges. Versions 20.10.3 and 19.03.15 contain patches that prevent privilege escalation from remapped user.",
    "publishedDate": "2021-02-02T18:15Z",
    "cvssScore": 6.8,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-21285",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker:*:*:*:*:*:*:*:*",
    "description": "In Docker before versions 9.03.15, 20.10.3 there is a vulnerability in which pulling an intentionally malformed Docker image manifest crashes the dockerd daemon. Versions 20.10.3 and 19.03.15 contain patches that prevent the daemon from crashing.",
    "publishedDate": "2021-02-02T18:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-21285",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker:*:*:*:*:*:*:*:*",
    "description": "In Docker before versions 9.03.15, 20.10.3 there is a vulnerability in which pulling an intentionally malformed Docker image manifest crashes the dockerd daemon. Versions 20.10.3 and 19.03.15 contain patches that prevent the daemon from crashing.",
    "publishedDate": "2021-02-02T18:15Z",
    "cvssScore": 6.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-23732",
    "technology": "docker",
    "version": "-",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:quobject:docker-cli-js:-:*:*:*:*:node.js:*:*",
    "description": "This affects all versions of package docker-cli-js. If the command parameter of the Docker.command method can at least be partially controlled by a user, they will be in a position to execute any arbitrary OS commands on the host system.",
    "publishedDate": "2021-11-22T17:15Z",
    "cvssScore": 9,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2021-27886",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker_dashboard_project:docker_dashboard:*:*:*:*:*:*:*:*",
    "description": "rakibtg Docker Dashboard before 2021-02-28 allows command injection in backend/utilities/terminal.js via shell metacharacters in the command parameter of an API request. NOTE: this is NOT a Docker, Inc. product.",
    "publishedDate": "2021-03-02T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-29475",
    "technology": "docker",
    "version": "1.5.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "HedgeDoc (formerly known as CodiMD) is an open-source collaborative markdown editor. An attacker is able to receive arbitrary files from the file system when exporting a note to PDF. Since the code injection has to take place as note content, there fore this exploit requires the attackers ability to modify a note. This will affect all instances, which have pdf export enabled. This issue has been fixed by https://github.com/hedgedoc/hedgedoc/commit/c1789474020a6d668d616464cb2da5e90e123f65 and is available in version 1.5.0. Starting the CodiMD/HedgeDoc instance with `CMD_ALLOW_PDF_EXPORT=false` or set `\"allowPDFExport\": false` in config.json can mitigate this issue for those who cannot upgrade. This exploit works because while PhantomJS doesn't actually render the `file:///` references to the PDF file itself, it still uses them internally, and exfiltration is possible, and easy through JavaScript rendering. The impact is pretty bad, as the attacker is able to read the CodiMD/HedgeDoc `config.json` file as well any other files on the filesystem. Even though the suggested Docker deploy option doesn't have many interesting files itself, the `config.json` still often contains sensitive information, database credentials, and maybe OAuth secrets among other things.",
    "publishedDate": "2021-04-26T19:15Z",
    "cvssScore": 10,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-29699",
    "technology": "docker",
    "version": "-",
    "vulnerable": false,
    "cpeUri": "cpe:2.3:a:docker:docker:-:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access Docker 10.0.0 could allow a remote priviled user to upload arbitrary files with a dangerous file type that could be excuted by an user. IBM X-Force ID: 200600.",
    "publishedDate": "2021-07-15T18:15Z",
    "cvssScore": 6.8,
    "severity": "MEDIUM",
    "matchingSource": "cpe_child",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2021-29742",
    "technology": "docker",
    "version": "-",
    "vulnerable": false,
    "cpeUri": "cpe:2.3:a:docker:docker:-:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access Docker 10.0.0 could allow a user to impersonate another user on the system. IBM X-Force ID: 201483.",
    "publishedDate": "2021-07-15T18:15Z",
    "cvssScore": 8,
    "severity": "HIGH",
    "matchingSource": "cpe_child",
    "versionRange": {
      "startIncluding": "-",
      "startExcluding": "-"
    }
  },
  {
    "cveId": "CVE-2021-3162",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker:*:*:*:*:community:*:*:*",
    "description": "Docker Desktop Community before 2.5.0.0 on macOS mishandles certificate checking, leading to local privilege escalation.",
    "publishedDate": "2021-01-15T22:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2021-33183",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:synology:docker:*:*:*:*:*:*:*:*",
    "description": "Improper limitation of a pathname to a restricted directory ('Path Traversal') vulnerability container volume management component in Synology Docker before 18.09.0-0515 allows local users to read or write arbitrary files via unspecified vectors.",
    "publishedDate": "2021-06-01T14:15Z",
    "cvssScore": 7.9,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-34079",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker-tester_project:docker-tester:*:*:*:*:*:node.js:*:*",
    "description": "OS Command injection vulnerability in Mintzo Docker-Tester through 1.2.1 allows attackers to execute arbitrary commands via shell metacharacters in the 'ports' entry of a crafted docker-compose.yml file.",
    "publishedDate": "2022-06-02T14:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-37353",
    "technology": "docker",
    "version": "1.1.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Nagios XI Docker Wizard before version 1.1.3 is vulnerable to SSRF due to improper sanitation in table_population.php.",
    "publishedDate": "2021-08-13T12:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-37353",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:nagios:nagios_xi_docker_wizard:*:*:*:*:*:*:*:*",
    "description": "Nagios XI Docker Wizard before version 1.1.3 is vulnerable to SSRF due to improper sanitation in table_population.php.",
    "publishedDate": "2021-08-13T12:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-37841",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:desktop:*:*:*:*:windows:*:*:*",
    "description": "Docker Desktop before 3.6.0 suffers from incorrect access control. If a low-privileged account is able to access the server running the Windows containers, it can lead to a full container compromise in both process isolation and Hyper-V isolation modes. This security issue leads an attacker with low privilege to read, write and possibly even execute code inside the containers.",
    "publishedDate": "2021-08-12T14:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-39070",
    "technology": "docker",
    "version": "10.0.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:security_verify_access_docker:10.0.0:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access 10.0.0.0, 10.0.1.0 and 10.0.2.0 with the advanced access control authentication service enabled could allow an attacker to authenticate as any user on the system. IBM X-Force ID: 215353.",
    "publishedDate": "2022-02-02T12:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "10.0.0",
      "startExcluding": "10.0.0"
    }
  },
  {
    "cveId": "CVE-2021-39070",
    "technology": "docker",
    "version": "10.0.1.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:security_verify_access_docker:10.0.1.0:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access 10.0.0.0, 10.0.1.0 and 10.0.2.0 with the advanced access control authentication service enabled could allow an attacker to authenticate as any user on the system. IBM X-Force ID: 215353.",
    "publishedDate": "2022-02-02T12:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "10.0.1.0",
      "startExcluding": "10.0.1.0"
    }
  },
  {
    "cveId": "CVE-2021-39070",
    "technology": "docker",
    "version": "10.0.2.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:security_verify_access_docker:10.0.2.0:*:*:*:*:*:*:*",
    "description": "IBM Security Verify Access 10.0.0.0, 10.0.1.0 and 10.0.2.0 with the advanced access control authentication service enabled could allow an attacker to authenticate as any user on the system. IBM X-Force ID: 215353.",
    "publishedDate": "2022-02-02T12:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "10.0.2.0",
      "startExcluding": "10.0.2.0"
    }
  },
  {
    "cveId": "CVE-2021-39159",
    "technology": "docker",
    "version": "0.2.0-n653.",
    "vulnerable": false,
    "cpeUri": "",
    "description": "BinderHub is a kubernetes-based cloud service that allows users to share reproducible interactive computing environments from code repositories. In affected versions a remote code execution vulnerability has been identified in BinderHub, where providing BinderHub with maliciously crafted input could execute code in the BinderHub context, with the potential to egress credentials of the BinderHub deployment, including JupyterHub API tokens, kubernetes service accounts, and docker registry credentials. This may provide the ability to manipulate images and other user created pods in the deployment, with the potential to escalate to the host depending on the underlying kubernetes configuration. Users are advised to update to version 0.2.0-n653. If users are unable to update they may disable the git repo provider by specifying the `BinderHub.repo_providers` as a workaround.",
    "publishedDate": "2021-08-25T19:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-41092",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:command_line_interface:*:*:*:*:*:*:*:*",
    "description": "Docker CLI is the command line interface for the docker container runtime. A bug was found in the Docker CLI where running `docker login my-private-registry.example.com` with a misconfigured configuration file (typically `~/.docker/config.json`) listing a `credsStore` or `credHelpers` that could not be executed would result in any provided credentials being sent to `registry-1.docker.io` rather than the intended private registry. This bug has been fixed in Docker CLI 20.10.9. Users should update to this version as soon as possible. For users unable to update ensure that any configured credsStore or credHelpers entries in the configuration file reference an installed credential helper that is executable and on the PATH.",
    "publishedDate": "2021-10-04T20:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2021-41130",
    "technology": "docker",
    "version": "1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Extensible Service Proxy, a.k.a. ESP is a proxy which enables API management capabilities for JSON/REST or gRPC API services. ESPv1 can be configured to authenticate a JWT token. Its verified JWT claim is passed to the application by HTTP header \"X-Endpoint-API-UserInfo\", the application can use it to do authorization. But if there are two \"X-Endpoint-API-UserInfo\" headers from the client, ESPv1 only replaces the first one, the 2nd one will be passed to the application. An attacker can send two \"X-Endpoint-API-UserInfo\" headers, the second one with a fake JWT claim. Application may use the fake JWT claim to do the authorization. This impacts following ESPv1 usages: 1) Users have configured ESPv1 to do JWT authentication with Google ID Token as described in the referenced google endpoint document. 2) Users backend application is using the info in the \"X-Endpoint-API-UserInfo\" header to do the authorization. It has been fixed by v1.58.0. You need to patch it in the following ways: * If your docker image is using tag \":1\", needs to re-start the container to pick up the new version. The tag \":1\" will automatically point to the latest version. * If your docker image tag pings to a specific minor version, e.g. \":1.57\". You need to update it to \":1.58\" and re-start the container. There are no workaround for this issue.",
    "publishedDate": "2021-10-07T19:15Z",
    "cvssScore": 5.4,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-41130",
    "technology": "docker",
    "version": "1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Extensible Service Proxy, a.k.a. ESP is a proxy which enables API management capabilities for JSON/REST or gRPC API services. ESPv1 can be configured to authenticate a JWT token. Its verified JWT claim is passed to the application by HTTP header \"X-Endpoint-API-UserInfo\", the application can use it to do authorization. But if there are two \"X-Endpoint-API-UserInfo\" headers from the client, ESPv1 only replaces the first one, the 2nd one will be passed to the application. An attacker can send two \"X-Endpoint-API-UserInfo\" headers, the second one with a fake JWT claim. Application may use the fake JWT claim to do the authorization. This impacts following ESPv1 usages: 1) Users have configured ESPv1 to do JWT authentication with Google ID Token as described in the referenced google endpoint document. 2) Users backend application is using the info in the \"X-Endpoint-API-UserInfo\" header to do the authorization. It has been fixed by v1.58.0. You need to patch it in the following ways: * If your docker image is using tag \":1\", needs to re-start the container to pick up the new version. The tag \":1\" will automatically point to the latest version. * If your docker image tag pings to a specific minor version, e.g. \":1.57\". You need to update it to \":1.58\" and re-start the container. There are no workaround for this issue.",
    "publishedDate": "2021-10-07T19:15Z",
    "cvssScore": 5.4,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-41130",
    "technology": "docker",
    "version": "1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Extensible Service Proxy, a.k.a. ESP is a proxy which enables API management capabilities for JSON/REST or gRPC API services. ESPv1 can be configured to authenticate a JWT token. Its verified JWT claim is passed to the application by HTTP header \"X-Endpoint-API-UserInfo\", the application can use it to do authorization. But if there are two \"X-Endpoint-API-UserInfo\" headers from the client, ESPv1 only replaces the first one, the 2nd one will be passed to the application. An attacker can send two \"X-Endpoint-API-UserInfo\" headers, the second one with a fake JWT claim. Application may use the fake JWT claim to do the authorization. This impacts following ESPv1 usages: 1) Users have configured ESPv1 to do JWT authentication with Google ID Token as described in the referenced google endpoint document. 2) Users backend application is using the info in the \"X-Endpoint-API-UserInfo\" header to do the authorization. It has been fixed by v1.58.0. You need to patch it in the following ways: * If your docker image is using tag \":1\", needs to re-start the container to pick up the new version. The tag \":1\" will automatically point to the latest version. * If your docker image tag pings to a specific minor version, e.g. \":1.57\". You need to update it to \":1.58\" and re-start the container. There are no workaround for this issue.",
    "publishedDate": "2021-10-07T19:15Z",
    "cvssScore": 5.4,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-41130",
    "technology": "docker",
    "version": "1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Extensible Service Proxy, a.k.a. ESP is a proxy which enables API management capabilities for JSON/REST or gRPC API services. ESPv1 can be configured to authenticate a JWT token. Its verified JWT claim is passed to the application by HTTP header \"X-Endpoint-API-UserInfo\", the application can use it to do authorization. But if there are two \"X-Endpoint-API-UserInfo\" headers from the client, ESPv1 only replaces the first one, the 2nd one will be passed to the application. An attacker can send two \"X-Endpoint-API-UserInfo\" headers, the second one with a fake JWT claim. Application may use the fake JWT claim to do the authorization. This impacts following ESPv1 usages: 1) Users have configured ESPv1 to do JWT authentication with Google ID Token as described in the referenced google endpoint document. 2) Users backend application is using the info in the \"X-Endpoint-API-UserInfo\" header to do the authorization. It has been fixed by v1.58.0. You need to patch it in the following ways: * If your docker image is using tag \":1\", needs to re-start the container to pick up the new version. The tag \":1\" will automatically point to the latest version. * If your docker image tag pings to a specific minor version, e.g. \":1.57\". You need to update it to \":1.58\" and re-start the container. There are no workaround for this issue.",
    "publishedDate": "2021-10-07T19:15Z",
    "cvssScore": 5.4,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-41130",
    "technology": "docker",
    "version": "1.58.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Extensible Service Proxy, a.k.a. ESP is a proxy which enables API management capabilities for JSON/REST or gRPC API services. ESPv1 can be configured to authenticate a JWT token. Its verified JWT claim is passed to the application by HTTP header \"X-Endpoint-API-UserInfo\", the application can use it to do authorization. But if there are two \"X-Endpoint-API-UserInfo\" headers from the client, ESPv1 only replaces the first one, the 2nd one will be passed to the application. An attacker can send two \"X-Endpoint-API-UserInfo\" headers, the second one with a fake JWT claim. Application may use the fake JWT claim to do the authorization. This impacts following ESPv1 usages: 1) Users have configured ESPv1 to do JWT authentication with Google ID Token as described in the referenced google endpoint document. 2) Users backend application is using the info in the \"X-Endpoint-API-UserInfo\" header to do the authorization. It has been fixed by v1.58.0. You need to patch it in the following ways: * If your docker image is using tag \":1\", needs to re-start the container to pick up the new version. The tag \":1\" will automatically point to the latest version. * If your docker image tag pings to a specific minor version, e.g. \":1.57\". You need to update it to \":1.58\" and re-start the container. There are no workaround for this issue.",
    "publishedDate": "2021-10-07T19:15Z",
    "cvssScore": 5.4,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-43842",
    "technology": "docker",
    "version": "2.5.260",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Wiki.js is a wiki app built on Node.js. Wiki.js versions 2.5.257 and earlier are vulnerable to stored cross-site scripting through a SVG file upload. By creating a crafted SVG file, a malicious Wiki.js user may stage a stored cross-site scripting attack. This allows the attacker to execute malicious JavaScript when the SVG is viewed directly by other users. Scripts do not execute when loaded inside a page via normal `\u003cimg\u003e` tags. Commit 5d3e81496fba1f0fbd64eeb855f30f69a9040718 fixes this vulnerability by adding an optional (enabled by default) SVG sanitization step to all file uploads that match the SVG mime type. As a workaround, disable file upload for all non-trusted users. Wiki.js version 2.5.260 is the first production version to contain a patch. Version 2.5.258 is the first development build to contain a patch and is available only as a Docker image as requarks/wiki:canary-2.5.258.",
    "publishedDate": "2021-12-20T23:15Z",
    "cvssScore": 3.5,
    "severity": "LOW",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-43842",
    "technology": "docker",
    "version": "2.5.258",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Wiki.js is a wiki app built on Node.js. Wiki.js versions 2.5.257 and earlier are vulnerable to stored cross-site scripting through a SVG file upload. By creating a crafted SVG file, a malicious Wiki.js user may stage a stored cross-site scripting attack. This allows the attacker to execute malicious JavaScript when the SVG is viewed directly by other users. Scripts do not execute when loaded inside a page via normal `\u003cimg\u003e` tags. Commit 5d3e81496fba1f0fbd64eeb855f30f69a9040718 fixes this vulnerability by adding an optional (enabled by default) SVG sanitization step to all file uploads that match the SVG mime type. As a workaround, disable file upload for all non-trusted users. Wiki.js version 2.5.260 is the first production version to contain a patch. Version 2.5.258 is the first development build to contain a patch and is available only as a Docker image as requarks/wiki:canary-2.5.258.",
    "publishedDate": "2021-12-20T23:15Z",
    "cvssScore": 3.5,
    "severity": "LOW",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-44719",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker_desktop:*:*:*:*:*:*:*:*",
    "description": "Docker Desktop 4.3.0 has Incorrect Access Control.",
    "publishedDate": "2022-05-25T16:15Z",
    "cvssScore": 8.4,
    "severity": "HIGH",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2021-45449",
    "technology": "docker",
    "version": "4.3.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Docker Desktop version 4.3.0 and 4.3.1 has a bug that may log sensitive information (access token or password) on the user's machine during login. This only affects users if they are on Docker Desktop 4.3.0, 4.3.1 and the user has logged in while on 4.3.0, 4.3.1. Gaining access to this data would require having access to the user’s local files.",
    "publishedDate": "2022-01-12T20:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2021-45449",
    "technology": "docker",
    "version": "4.3.1",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker_desktop:4.3.1:*:*:*:*:*:*:*",
    "description": "Docker Desktop version 4.3.0 and 4.3.1 has a bug that may log sensitive information (access token or password) on the user's machine during login. This only affects users if they are on Docker Desktop 4.3.0, 4.3.1 and the user has logged in while on 4.3.0, 4.3.1. Gaining access to this data would require having access to the user’s local files.",
    "publishedDate": "2022-01-12T20:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "4.3.1",
      "startExcluding": "4.3.1"
    }
  },
  {
    "cveId": "CVE-2021-45449",
    "technology": "docker",
    "version": "4.3.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker_desktop:4.3.0:*:*:*:*:*:*:*",
    "description": "Docker Desktop version 4.3.0 and 4.3.1 has a bug that may log sensitive information (access token or password) on the user's machine during login. This only affects users if they are on Docker Desktop 4.3.0, 4.3.1 and the user has logged in while on 4.3.0, 4.3.1. Gaining access to this data would require having access to the user’s local files.",
    "publishedDate": "2022-01-12T20:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "4.3.0",
      "startExcluding": "4.3.0"
    }
  },
  {
    "cveId": "CVE-2020-10665",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:desktop:*:*:*:*:enterprise:*:*:*",
    "description": "Docker Desktop allows local privilege escalation to NT AUTHORITY\\SYSTEM because it mishandles the collection of diagnostics with Administrator privileges, leading to arbitrary DACL permissions overwrites and arbitrary file writes. This affects Docker Desktop Enterprise before 2.1.0.9, Docker Desktop for Windows Stable before 2.2.0.4, and Docker Desktop for Windows Edge before 2.2.2.0.",
    "publishedDate": "2020-03-18T19:15Z",
    "cvssScore": 6.7,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-10665",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:desktop:*:*:*:*:edge:*:*:*",
    "description": "Docker Desktop allows local privilege escalation to NT AUTHORITY\\SYSTEM because it mishandles the collection of diagnostics with Administrator privileges, leading to arbitrary DACL permissions overwrites and arbitrary file writes. This affects Docker Desktop Enterprise before 2.1.0.9, Docker Desktop for Windows Stable before 2.2.0.4, and Docker Desktop for Windows Edge before 2.2.2.0.",
    "publishedDate": "2020-03-18T19:15Z",
    "cvssScore": 6.7,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-10665",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:desktop:*:*:*:*:windows:*:*:*",
    "description": "Docker Desktop allows local privilege escalation to NT AUTHORITY\\SYSTEM because it mishandles the collection of diagnostics with Administrator privileges, leading to arbitrary DACL permissions overwrites and arbitrary file writes. This affects Docker Desktop Enterprise before 2.1.0.9, Docker Desktop for Windows Stable before 2.2.0.4, and Docker Desktop for Windows Edge before 2.2.2.0.",
    "publishedDate": "2020-03-18T19:15Z",
    "cvssScore": 6.7,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-11492",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker_desktop:*:*:*:*:*:*:*:*",
    "description": "An issue was discovered in Docker Desktop through 2.2.0.5 on Windows. If a local attacker sets up their own named pipe prior to starting Docker with the same name, this attacker can intercept a connection attempt from Docker Service (which runs as SYSTEM), and then impersonate their privileges.",
    "publishedDate": "2020-06-05T14:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe_child"
  },
  {
    "cveId": "CVE-2020-11710",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:konghq:docker-kong:*:*:*:*:*:kong:*:*",
    "description": "An issue was discovered in docker-kong (for Kong) through 2.0.3. The admin API port may be accessible on interfaces other than 127.0.0.1. NOTE: The vendor argue that this CVE is not a vulnerability because it has an inaccurate bug scope and patch links. “1) Inaccurate Bug Scope - The issue scope was on Kong's docker-compose template, and not Kong's docker image itself. In reality, this issue is not associated with any version of the Kong gateway. As such, the description stating ‘An issue was discovered in docker-kong (for Kong) through 2.0.3.’ is incorrect. This issue only occurs if a user decided to spin up Kong via docker-compose without following the security documentation. The docker-compose template is meant for users to quickly get started with Kong, and is meant for development purposes only. 2) Incorrect Patch Links - The CVE currently points to a documentation improvement as a “Patch” link: https://github.com/Kong/docs.konghq.com/commit/d693827c32144943a2f45abc017c1321b33ff611.This link actually points to an improvement Kong Inc made for fool-proofing. However, instructions for how to protect the admin API were already well-documented here: https://docs.konghq.com/2.0.x/secure-admin-api/#network-layer-access-restrictions , which was first published back in 2017 (as shown in this commit: https://github.com/Kong/docs.konghq.com/commit/e99cf875d875dd84fdb751079ac37882c9972949) Lastly, the hyperlink to https://github.com/Kong/kong (an unrelated Github Repo to this issue) on the Hyperlink list does not include any meaningful information on this topic.",
    "publishedDate": "2020-04-12T17:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-11878",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:jitsi:meet:*:*:*:*:*:docker:*:*",
    "description": "The Jitsi Meet (aka docker-jitsi-meet) stack on Docker before stable-4384-1 uses default passwords (such as passw0rd) for system accounts.",
    "publishedDate": "2020-04-17T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-13401",
    "technology": "docker",
    "version": "6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "An issue was discovered in Docker Engine before 19.03.11. An attacker in a container, with the CAP_NET_RAW capability, can craft IPv6 router advertisements, and consequently spoof external IPv6 hosts, obtain sensitive information, or cause a denial of service.",
    "publishedDate": "2020-06-02T14:15Z",
    "cvssScore": 6,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-13401",
    "technology": "docker",
    "version": "6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "An issue was discovered in Docker Engine before 19.03.11. An attacker in a container, with the CAP_NET_RAW capability, can craft IPv6 router advertisements, and consequently spoof external IPv6 hosts, obtain sensitive information, or cause a denial of service.",
    "publishedDate": "2020-06-02T14:15Z",
    "cvssScore": 6,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-13401",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:engine:*:*:*:*:*:*:*:*",
    "description": "An issue was discovered in Docker Engine before 19.03.11. An attacker in a container, with the CAP_NET_RAW capability, can craft IPv6 router advertisements, and consequently spoof external IPv6 hosts, obtain sensitive information, or cause a denial of service.",
    "publishedDate": "2020-06-02T14:15Z",
    "cvssScore": 6,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-14298",
    "technology": "docker",
    "version": "1.13.1-108.git4ef4b30.el7",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The version of docker as released for Red Hat Enterprise Linux 7 Extras via RHBA-2020:0053 advisory included an incorrect version of runc missing the fix for CVE-2019-5736, which was previously fixed via RHSA-2019:0304. This issue could allow a malicious or compromised container to compromise the container host and other containers running on the same host. This issue only affects docker version 1.13.1-108.git4ef4b30.el7, shipped in Red Hat Enterprise Linux 7 Extras. Both earlier and later versions are not affected.",
    "publishedDate": "2020-07-13T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-14298",
    "technology": "docker",
    "version": "1.13.1",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker:1.13.1:*:*:*:*:*:*:*",
    "description": "The version of docker as released for Red Hat Enterprise Linux 7 Extras via RHBA-2020:0053 advisory included an incorrect version of runc missing the fix for CVE-2019-5736, which was previously fixed via RHSA-2019:0304. This issue could allow a malicious or compromised container to compromise the container host and other containers running on the same host. This issue only affects docker version 1.13.1-108.git4ef4b30.el7, shipped in Red Hat Enterprise Linux 7 Extras. Both earlier and later versions are not affected.",
    "publishedDate": "2020-07-13T21:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.13.1",
      "startExcluding": "1.13.1"
    }
  },
  {
    "cveId": "CVE-2020-14300",
    "technology": "docker",
    "version": "1.13.1",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker:1.13.1:*:*:*:*:*:*:*",
    "description": "The docker packages version docker-1.13.1-108.git4ef4b30.el7 as released for Red Hat Enterprise Linux 7 Extras via RHBA-2020:0053 (https://access.redhat.com/errata/RHBA-2020:0053) included an incorrect version of runc that was missing multiple bug and security fixes. One of the fixes regressed in that update was the fix for CVE-2016-9962, that was previously corrected in the docker packages in Red Hat Enterprise Linux 7 Extras via RHSA-2017:0116 (https://access.redhat.com/errata/RHSA-2017:0116). The CVE-2020-14300 was assigned to this security regression and it is specific to the docker packages produced by Red Hat. The original issue - CVE-2016-9962 - could possibly allow a process inside container to compromise a process entering container namespace and execute arbitrary code outside of the container. This could lead to compromise of the container host or other containers running on the same container host. This issue only affects a single version of Docker, 1.13.1-108.git4ef4b30, shipped in Red Hat Enterprise Linux 7. Both earlier and later versions are not affected.",
    "publishedDate": "2020-07-13T22:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.13.1",
      "startExcluding": "1.13.1"
    }
  },
  {
    "cveId": "CVE-2020-15080",
    "technology": "docker",
    "version": "1.7.4",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In PrestaShop from version 1.7.4.0 and before version 1.7.6.6, some files should not be in the release archive, and others should not be accessible. The problem is fixed in version 1.7.6.6 A possible workaround is to make sure `composer.json` and `docker-compose.yml` are not accessible on your server.",
    "publishedDate": "2020-07-02T17:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-15080",
    "technology": "docker",
    "version": "1.7.6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In PrestaShop from version 1.7.4.0 and before version 1.7.6.6, some files should not be in the release archive, and others should not be accessible. The problem is fixed in version 1.7.6.6 A possible workaround is to make sure `composer.json` and `docker-compose.yml` are not accessible on your server.",
    "publishedDate": "2020-07-02T17:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-15080",
    "technology": "docker",
    "version": "1.7.6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In PrestaShop from version 1.7.4.0 and before version 1.7.6.6, some files should not be in the release archive, and others should not be accessible. The problem is fixed in version 1.7.6.6 A possible workaround is to make sure `composer.json` and `docker-compose.yml` are not accessible on your server.",
    "publishedDate": "2020-07-02T17:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-15157",
    "technology": "docker",
    "version": "1.2.14",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In containerd (an industry-standard container runtime) before version 1.2.14 there is a credential leaking vulnerability. If a container image manifest in the OCI Image format or Docker Image V2 Schema 2 format includes a URL for the location of a specific image layer (otherwise known as a “foreign layer”), the default containerd resolver will follow that URL to attempt to download it. In v1.2.x but not 1.3.0 or later, the default containerd resolver will provide its authentication credentials if the server where the URL is located presents an HTTP 401 status code along with registry-specific HTTP headers. If an attacker publishes a public image with a manifest that directs one of the layers to be fetched from a web server they control and they trick a user or system into pulling the image, they can obtain the credentials used for pulling that image. In some cases, this may be the user's username and password for the registry. In other cases, this may be the credentials attached to the cloud virtual instance which can grant access to other cloud resources in the account. The default containerd resolver is used by the cri-containerd plugin (which can be used by Kubernetes), the ctr development tool, and other client programs that have explicitly linked against it. This vulnerability has been fixed in containerd 1.2.14. containerd 1.3 and later are not affected. If you are using containerd 1.3 or later, you are not affected. If you are using cri-containerd in the 1.2 series or prior, you should ensure you only pull images from trusted sources. Other container runtimes built on top of containerd but not using the default resolver (such as Docker) are not affected.",
    "publishedDate": "2020-10-16T17:15Z",
    "cvssScore": 6.1,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-15157",
    "technology": "docker",
    "version": "2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In containerd (an industry-standard container runtime) before version 1.2.14 there is a credential leaking vulnerability. If a container image manifest in the OCI Image format or Docker Image V2 Schema 2 format includes a URL for the location of a specific image layer (otherwise known as a “foreign layer”), the default containerd resolver will follow that URL to attempt to download it. In v1.2.x but not 1.3.0 or later, the default containerd resolver will provide its authentication credentials if the server where the URL is located presents an HTTP 401 status code along with registry-specific HTTP headers. If an attacker publishes a public image with a manifest that directs one of the layers to be fetched from a web server they control and they trick a user or system into pulling the image, they can obtain the credentials used for pulling that image. In some cases, this may be the user's username and password for the registry. In other cases, this may be the credentials attached to the cloud virtual instance which can grant access to other cloud resources in the account. The default containerd resolver is used by the cri-containerd plugin (which can be used by Kubernetes), the ctr development tool, and other client programs that have explicitly linked against it. This vulnerability has been fixed in containerd 1.2.14. containerd 1.3 and later are not affected. If you are using containerd 1.3 or later, you are not affected. If you are using cri-containerd in the 1.2 series or prior, you should ensure you only pull images from trusted sources. Other container runtimes built on top of containerd but not using the default resolver (such as Docker) are not affected.",
    "publishedDate": "2020-10-16T17:15Z",
    "cvssScore": 6.1,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-15157",
    "technology": "docker",
    "version": "1.2",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In containerd (an industry-standard container runtime) before version 1.2.14 there is a credential leaking vulnerability. If a container image manifest in the OCI Image format or Docker Image V2 Schema 2 format includes a URL for the location of a specific image layer (otherwise known as a “foreign layer”), the default containerd resolver will follow that URL to attempt to download it. In v1.2.x but not 1.3.0 or later, the default containerd resolver will provide its authentication credentials if the server where the URL is located presents an HTTP 401 status code along with registry-specific HTTP headers. If an attacker publishes a public image with a manifest that directs one of the layers to be fetched from a web server they control and they trick a user or system into pulling the image, they can obtain the credentials used for pulling that image. In some cases, this may be the user's username and password for the registry. In other cases, this may be the credentials attached to the cloud virtual instance which can grant access to other cloud resources in the account. The default containerd resolver is used by the cri-containerd plugin (which can be used by Kubernetes), the ctr development tool, and other client programs that have explicitly linked against it. This vulnerability has been fixed in containerd 1.2.14. containerd 1.3 and later are not affected. If you are using containerd 1.3 or later, you are not affected. If you are using cri-containerd in the 1.2 series or prior, you should ensure you only pull images from trusted sources. Other container runtimes built on top of containerd but not using the default resolver (such as Docker) are not affected.",
    "publishedDate": "2020-10-16T17:15Z",
    "cvssScore": 6.1,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-15360",
    "technology": "docker",
    "version": "2.3.0.3",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker_desktop:2.3.0.3:*:*:*:*:*:*:*",
    "description": "com.docker.vmnetd in Docker Desktop 2.3.0.3 allows privilege escalation because of a lack of client verification.",
    "publishedDate": "2020-06-27T13:15Z",
    "cvssScore": 7.8,
    "severity": "HIGH",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.3.0.3",
      "startExcluding": "2.3.0.3"
    }
  },
  {
    "cveId": "CVE-2020-15378",
    "technology": "docker",
    "version": "2.1.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The OVA version of Brocade SANnav before version 2.1.1 installation with IPv6 networking exposes the docker container ports to the network, increasing the potential attack surface.",
    "publishedDate": "2021-06-09T16:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-15378",
    "technology": "docker",
    "version": "6",
    "vulnerable": false,
    "cpeUri": "",
    "description": "The OVA version of Brocade SANnav before version 2.1.1 installation with IPv6 networking exposes the docker container ports to the network, increasing the potential attack surface.",
    "publishedDate": "2021-06-09T16:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-15590",
    "technology": "docker",
    "version": "4",
    "vulnerable": false,
    "cpeUri": "",
    "description": "A vulnerability in the Private Internet Access (PIA) VPN Client for Linux 1.5 through 2.3+ allows remote attackers to bypass an intended VPN kill switch mechanism and read sensitive information via intercepting network traffic. Since 1.5, PIA has supported a “split tunnel” OpenVPN bypass option. The PIA killswitch \u0026 associated iptables firewall is designed to protect you while using the Internet. When the kill switch is configured to block all inbound and outbound network traffic, privileged applications can continue sending \u0026 receiving network traffic if net.ipv4.ip_forward has been enabled in the system kernel parameters. For example, a Docker container running on a host with the VPN turned off, and the kill switch turned on, can continue using the internet, leaking the host IP (CWE 200). In PIA 2.4.0+, policy-based routing is enabled by default and is used to direct all forwarded packets to the VPN interface automatically.",
    "publishedDate": "2020-09-14T22:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-26213",
    "technology": "docker",
    "version": "0.0.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In teler before version 0.0.1, if you run teler inside a Docker container and encounter `errors.Exit` function, it will cause denial-of-service (`SIGSEGV`) because it doesn't get process ID and process group ID of teler properly to kills. The issue is patched in teler 0.0.1 and 0.0.1-dev5.1.",
    "publishedDate": "2020-11-06T17:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-26213",
    "technology": "docker",
    "version": "5.1",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In teler before version 0.0.1, if you run teler inside a Docker container and encounter `errors.Exit` function, it will cause denial-of-service (`SIGSEGV`) because it doesn't get process ID and process group ID of teler properly to kills. The issue is patched in teler 0.0.1 and 0.0.1-dev5.1.",
    "publishedDate": "2020-11-06T17:15Z",
    "cvssScore": 7.5,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-26278",
    "technology": "docker",
    "version": "2.8.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Weave Net is open source software which creates a virtual network that connects Docker containers across multiple hosts and enables their automatic discovery. Weave Net before version 2.8.0 has a vulnerability in which can allow an attacker to take over any host in the cluster. Weave Net is supplied with a manifest that runs pods on every node in a Kubernetes cluster, which are responsible for managing network connections for all other pods in the cluster. This requires a lot of power over the host, and the manifest sets `privileged: true`, which gives it that power. It also set `hostPID: true`, which gave it the ability to access all other processes on the host, and write anywhere in the root filesystem of the host. This setting was not necessary, and is being removed. You are only vulnerable if you have an additional vulnerability (e.g. a bug in Kubernetes) or misconfiguration that allows an attacker to run code inside the Weave Net pod, No such bug is known at the time of release, and there are no known instances of this being exploited. Weave Net 2.8.0 removes the hostPID setting and moves CNI plugin install to an init container. Users who do not update to 2.8.0 can edit the hostPID line in their existing DaemonSet manifest to say false instead of true, arrange some other way to install CNI plugins (e.g. Ansible) and remove those mounts from the DaemonSet manifest.",
    "publishedDate": "2021-01-20T22:15Z",
    "cvssScore": 8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-27534",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docker:*:*:*:*:*:*:*:*",
    "description": "util/binfmt_misc/check.go in Builder in Docker Engine before 19.03.9 calls os.OpenFile with a potentially unsafe qemu-check temporary pathname, constructed with an empty first argument in an ioutil.TempDir call.",
    "publishedDate": "2020-12-30T23:15Z",
    "cvssScore": 5.3,
    "severity": "MEDIUM",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-29389",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:crux_linux_docker_image:*:*:*:*:*:*:*:*",
    "description": "The official Crux Linux Docker images 3.0 through 3.4 contain a blank password for a root user. System using the Crux Linux Docker container deployed by affected versions of the Docker image may allow an attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-02T17:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-29564",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:hashicorp:consul_docker_image:*:*:*:*:*:*:*:*",
    "description": "The official Consul Docker images 0.7.1 through 1.4.2 contain a blank password for a root user. System using the Consul Docker container deployed by affected versions of the Docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-29575",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:elixir_alpine_docker_image:*:*:*:*:*:*:*:*",
    "description": "The official elixir Docker images before 1.8.0-alpine (Alpine specific) contain a blank password for a root user. Systems using the elixir Linux Docker container deployed by affected versions of the Docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-29576",
    "technology": "docker",
    "version": "1.6",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:eggheads:eggdrop_docker_image:1.6:*:*:*:*:*:*:*",
    "description": "The official eggdrop Docker images before 1.8.4rc2 contain a blank password for a root user. Systems using the Eggdrop Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.6",
      "startExcluding": "1.6"
    }
  },
  {
    "cveId": "CVE-2020-29576",
    "technology": "docker",
    "version": "1.6.21",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:eggheads:eggdrop_docker_image:1.6.21:*:*:*:*:*:*:*",
    "description": "The official eggdrop Docker images before 1.8.4rc2 contain a blank password for a root user. Systems using the Eggdrop Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.6.21",
      "startExcluding": "1.6.21"
    }
  },
  {
    "cveId": "CVE-2020-29576",
    "technology": "docker",
    "version": "1.8.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:eggheads:eggdrop_docker_image:1.8.0:*:*:*:*:*:*:*",
    "description": "The official eggdrop Docker images before 1.8.4rc2 contain a blank password for a root user. Systems using the Eggdrop Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.8.0",
      "startExcluding": "1.8.0"
    }
  },
  {
    "cveId": "CVE-2020-29576",
    "technology": "docker",
    "version": "1.8.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:eggheads:eggdrop_docker_image:1.8.0:rc1:*:*:*:*:*:*",
    "description": "The official eggdrop Docker images before 1.8.4rc2 contain a blank password for a root user. Systems using the Eggdrop Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.8.0",
      "startExcluding": "1.8.0"
    }
  },
  {
    "cveId": "CVE-2020-29576",
    "technology": "docker",
    "version": "1.8.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:eggheads:eggdrop_docker_image:1.8.0:rc2:*:*:*:*:*:*",
    "description": "The official eggdrop Docker images before 1.8.4rc2 contain a blank password for a root user. Systems using the Eggdrop Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.8.0",
      "startExcluding": "1.8.0"
    }
  },
  {
    "cveId": "CVE-2020-29576",
    "technology": "docker",
    "version": "1.8.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:eggheads:eggdrop_docker_image:1.8.0:rc3:*:*:*:*:*:*",
    "description": "The official eggdrop Docker images before 1.8.4rc2 contain a blank password for a root user. Systems using the Eggdrop Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.8.0",
      "startExcluding": "1.8.0"
    }
  },
  {
    "cveId": "CVE-2020-29576",
    "technology": "docker",
    "version": "1.8.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:eggheads:eggdrop_docker_image:1.8.0:rc4:*:*:*:*:*:*",
    "description": "The official eggdrop Docker images before 1.8.4rc2 contain a blank password for a root user. Systems using the Eggdrop Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.8.0",
      "startExcluding": "1.8.0"
    }
  },
  {
    "cveId": "CVE-2020-29576",
    "technology": "docker",
    "version": "1.8.1",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:eggheads:eggdrop_docker_image:1.8.1:*:*:*:*:*:*:*",
    "description": "The official eggdrop Docker images before 1.8.4rc2 contain a blank password for a root user. Systems using the Eggdrop Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.8.1",
      "startExcluding": "1.8.1"
    }
  },
  {
    "cveId": "CVE-2020-29576",
    "technology": "docker",
    "version": "1.8.1",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:eggheads:eggdrop_docker_image:1.8.1:rc2:*:*:*:*:*:*",
    "description": "The official eggdrop Docker images before 1.8.4rc2 contain a blank password for a root user. Systems using the Eggdrop Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.8.1",
      "startExcluding": "1.8.1"
    }
  },
  {
    "cveId": "CVE-2020-29576",
    "technology": "docker",
    "version": "1.8.2",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:eggheads:eggdrop_docker_image:1.8.2:*:*:*:*:*:*:*",
    "description": "The official eggdrop Docker images before 1.8.4rc2 contain a blank password for a root user. Systems using the Eggdrop Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.8.2",
      "startExcluding": "1.8.2"
    }
  },
  {
    "cveId": "CVE-2020-29576",
    "technology": "docker",
    "version": "1.8.2",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:eggheads:eggdrop_docker_image:1.8.2:rc1:*:*:*:*:*:*",
    "description": "The official eggdrop Docker images before 1.8.4rc2 contain a blank password for a root user. Systems using the Eggdrop Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.8.2",
      "startExcluding": "1.8.2"
    }
  },
  {
    "cveId": "CVE-2020-29576",
    "technology": "docker",
    "version": "1.8.2",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:eggheads:eggdrop_docker_image:1.8.2:rc2:*:*:*:*:*:*",
    "description": "The official eggdrop Docker images before 1.8.4rc2 contain a blank password for a root user. Systems using the Eggdrop Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.8.2",
      "startExcluding": "1.8.2"
    }
  },
  {
    "cveId": "CVE-2020-29576",
    "technology": "docker",
    "version": "1.8.3",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:eggheads:eggdrop_docker_image:1.8.3:*:*:*:*:*:*:*",
    "description": "The official eggdrop Docker images before 1.8.4rc2 contain a blank password for a root user. Systems using the Eggdrop Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.8.3",
      "startExcluding": "1.8.3"
    }
  },
  {
    "cveId": "CVE-2020-29576",
    "technology": "docker",
    "version": "1.8.3",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:eggheads:eggdrop_docker_image:1.8.3:rc1:*:*:*:*:*:*",
    "description": "The official eggdrop Docker images before 1.8.4rc2 contain a blank password for a root user. Systems using the Eggdrop Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.8.3",
      "startExcluding": "1.8.3"
    }
  },
  {
    "cveId": "CVE-2020-29576",
    "technology": "docker",
    "version": "1.8.4",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:eggheads:eggdrop_docker_image:1.8.4:*:*:*:*:*:*:*",
    "description": "The official eggdrop Docker images before 1.8.4rc2 contain a blank password for a root user. Systems using the Eggdrop Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.8.4",
      "startExcluding": "1.8.4"
    }
  },
  {
    "cveId": "CVE-2020-29576",
    "technology": "docker",
    "version": "1.8.4",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:eggheads:eggdrop_docker_image:1.8.4:rc1:*:*:*:*:*:*",
    "description": "The official eggdrop Docker images before 1.8.4rc2 contain a blank password for a root user. Systems using the Eggdrop Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.8.4",
      "startExcluding": "1.8.4"
    }
  },
  {
    "cveId": "CVE-2020-29576",
    "technology": "docker",
    "version": "1.8.4",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:eggheads:eggdrop_docker_image:1.8.4:rc2:*:*:*:*:*:*",
    "description": "The official eggdrop Docker images before 1.8.4rc2 contain a blank password for a root user. Systems using the Eggdrop Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.8.4",
      "startExcluding": "1.8.4"
    }
  },
  {
    "cveId": "CVE-2020-29576",
    "technology": "docker",
    "version": "1.8.4",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:eggheads:eggdrop_docker_image:1.8.4:rc3:*:*:*:*:*:*",
    "description": "The official eggdrop Docker images before 1.8.4rc2 contain a blank password for a root user. Systems using the Eggdrop Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.8.4",
      "startExcluding": "1.8.4"
    }
  },
  {
    "cveId": "CVE-2020-29577",
    "technology": "docker",
    "version": "1.6",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:znc:znc_docker_image:1.6:*:*:*:*:*:*:*",
    "description": "The official znc docker images before 1.7.1-slim contain a blank password for a root user. Systems using the znc docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.6",
      "startExcluding": "1.6"
    }
  },
  {
    "cveId": "CVE-2020-29577",
    "technology": "docker",
    "version": "1.6-slim",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:znc:znc_docker_image:1.6-slim:*:*:*:*:*:*:*",
    "description": "The official znc docker images before 1.7.1-slim contain a blank password for a root user. Systems using the znc docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.6-slim",
      "startExcluding": "1.6-slim"
    }
  },
  {
    "cveId": "CVE-2020-29577",
    "technology": "docker",
    "version": "1.6.4",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:znc:znc_docker_image:1.6.4:*:*:*:*:*:*:*",
    "description": "The official znc docker images before 1.7.1-slim contain a blank password for a root user. Systems using the znc docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.6.4",
      "startExcluding": "1.6.4"
    }
  },
  {
    "cveId": "CVE-2020-29577",
    "technology": "docker",
    "version": "1.6.4-slim",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:znc:znc_docker_image:1.6.4-slim:*:*:*:*:*:*:*",
    "description": "The official znc docker images before 1.7.1-slim contain a blank password for a root user. Systems using the znc docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.6.4-slim",
      "startExcluding": "1.6.4-slim"
    }
  },
  {
    "cveId": "CVE-2020-29577",
    "technology": "docker",
    "version": "1.6.5",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:znc:znc_docker_image:1.6.5:*:*:*:*:*:*:*",
    "description": "The official znc docker images before 1.7.1-slim contain a blank password for a root user. Systems using the znc docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.6.5",
      "startExcluding": "1.6.5"
    }
  },
  {
    "cveId": "CVE-2020-29577",
    "technology": "docker",
    "version": "1.6.5-slim",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:znc:znc_docker_image:1.6.5-slim:*:*:*:*:*:*:*",
    "description": "The official znc docker images before 1.7.1-slim contain a blank password for a root user. Systems using the znc docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.6.5-slim",
      "startExcluding": "1.6.5-slim"
    }
  },
  {
    "cveId": "CVE-2020-29577",
    "technology": "docker",
    "version": "1.6.6",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:znc:znc_docker_image:1.6.6:*:*:*:*:*:*:*",
    "description": "The official znc docker images before 1.7.1-slim contain a blank password for a root user. Systems using the znc docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.6.6",
      "startExcluding": "1.6.6"
    }
  },
  {
    "cveId": "CVE-2020-29577",
    "technology": "docker",
    "version": "1.6.6-slim",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:znc:znc_docker_image:1.6.6-slim:*:*:*:*:*:*:*",
    "description": "The official znc docker images before 1.7.1-slim contain a blank password for a root user. Systems using the znc docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.6.6-slim",
      "startExcluding": "1.6.6-slim"
    }
  },
  {
    "cveId": "CVE-2020-29577",
    "technology": "docker",
    "version": "1.7.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:znc:znc_docker_image:1.7.0:*:*:*:*:*:*:*",
    "description": "The official znc docker images before 1.7.1-slim contain a blank password for a root user. Systems using the znc docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.7.0",
      "startExcluding": "1.7.0"
    }
  },
  {
    "cveId": "CVE-2020-29577",
    "technology": "docker",
    "version": "1.7.0-slim",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:znc:znc_docker_image:1.7.0-slim:*:*:*:*:*:*:*",
    "description": "The official znc docker images before 1.7.1-slim contain a blank password for a root user. Systems using the znc docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.7.0-slim",
      "startExcluding": "1.7.0-slim"
    }
  },
  {
    "cveId": "CVE-2020-29577",
    "technology": "docker",
    "version": "1.7.1-slim",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:znc:znc_docker_image:1.7.1-slim:*:*:*:*:*:*:*",
    "description": "The official znc docker images before 1.7.1-slim contain a blank password for a root user. Systems using the znc docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "1.7.1-slim",
      "startExcluding": "1.7.1-slim"
    }
  },
  {
    "cveId": "CVE-2020-29578",
    "technology": "docker",
    "version": "3",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:matomo:piwik_fpm-alpine_docker_image:3:*:*:*:*:*:*:*",
    "description": "The official piwik Docker images before fpm-alpine (Alpine specific) contain a blank password for a root user. Systems using the Piwik Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access.",
    "publishedDate": "2020-12-08T15:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "3",
      "startExcluding": "3"
    }
  },
  {
    "cveId": "CVE-2020-29578",
    "technology": "docker",
    "version": "3.5",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:matomo:piwik_fpm-alpine_docker_image:3.5:*:*:*:*:*:*:*",
    "description": "The official piwik Docker images before fpm-alpine (Alpine specific) contain a blank password for a root user. Systems using the Piwik Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access.",
    "publishedDate": "2020-12-08T15:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "3.5",
      "startExcluding": "3.5"
    }
  },
  {
    "cveId": "CVE-2020-29578",
    "technology": "docker",
    "version": "3.5.1",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:matomo:piwik_fpm-alpine_docker_image:3.5.1:*:*:*:*:*:*:*",
    "description": "The official piwik Docker images before fpm-alpine (Alpine specific) contain a blank password for a root user. Systems using the Piwik Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access.",
    "publishedDate": "2020-12-08T15:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "3.5.1",
      "startExcluding": "3.5.1"
    }
  },
  {
    "cveId": "CVE-2020-29578",
    "technology": "docker",
    "version": "3.6",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:matomo:piwik_fpm-alpine_docker_image:3.6:*:*:*:*:*:*:*",
    "description": "The official piwik Docker images before fpm-alpine (Alpine specific) contain a blank password for a root user. Systems using the Piwik Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access.",
    "publishedDate": "2020-12-08T15:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "3.6",
      "startExcluding": "3.6"
    }
  },
  {
    "cveId": "CVE-2020-29578",
    "technology": "docker",
    "version": "3.6.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:matomo:piwik_fpm-alpine_docker_image:3.6.0:*:*:*:*:*:*:*",
    "description": "The official piwik Docker images before fpm-alpine (Alpine specific) contain a blank password for a root user. Systems using the Piwik Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access.",
    "publishedDate": "2020-12-08T15:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "3.6.0",
      "startExcluding": "3.6.0"
    }
  },
  {
    "cveId": "CVE-2020-29579",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:express-gateway:express-gateway_docker_image:*:*:*:*:*:*:*:*",
    "description": "The official Express Gateway Docker images before 1.14.0 contain a blank password for a root user. Systems using the Express Gateway Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-29580",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:storm_docker_image:*:*:*:*:*:*:*:*",
    "description": "The official storm Docker images before 1.2.1 contain a blank password for a root user. Systems using the Storm Docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-29581",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:spiped_alpine_docker_image:*:*:*:*:*:*:*:*",
    "description": "The official spiped docker images before 1.5-alpine contain a blank password for a root user. Systems using the spiped docker container deployed by affected versions of the docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-29591",
    "technology": "docker",
    "version": "2.5",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:registry:2.5:*:*:*:*:*:*:*",
    "description": "Versions of the Official registry Docker images through 2.7.0 contain a blank password for the root user. Systems deployed using affected versions of the registry container may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-11T15:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.5",
      "startExcluding": "2.5"
    }
  },
  {
    "cveId": "CVE-2020-29591",
    "technology": "docker",
    "version": "2.5.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:registry:2.5.0:*:*:*:*:*:*:*",
    "description": "Versions of the Official registry Docker images through 2.7.0 contain a blank password for the root user. Systems deployed using affected versions of the registry container may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-11T15:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.5.0",
      "startExcluding": "2.5.0"
    }
  },
  {
    "cveId": "CVE-2020-29591",
    "technology": "docker",
    "version": "2.5.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:registry:2.5.0:rc:*:*:*:*:*:*",
    "description": "Versions of the Official registry Docker images through 2.7.0 contain a blank password for the root user. Systems deployed using affected versions of the registry container may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-11T15:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.5.0",
      "startExcluding": "2.5.0"
    }
  },
  {
    "cveId": "CVE-2020-29591",
    "technology": "docker",
    "version": "2.5.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:registry:2.5.0:rc2:*:*:*:*:*:*",
    "description": "Versions of the Official registry Docker images through 2.7.0 contain a blank password for the root user. Systems deployed using affected versions of the registry container may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-11T15:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.5.0",
      "startExcluding": "2.5.0"
    }
  },
  {
    "cveId": "CVE-2020-29591",
    "technology": "docker",
    "version": "2.5.1",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:registry:2.5.1:*:*:*:*:*:*:*",
    "description": "Versions of the Official registry Docker images through 2.7.0 contain a blank password for the root user. Systems deployed using affected versions of the registry container may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-11T15:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.5.1",
      "startExcluding": "2.5.1"
    }
  },
  {
    "cveId": "CVE-2020-29591",
    "technology": "docker",
    "version": "2.6.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:registry:2.6.0:*:*:*:*:*:*:*",
    "description": "Versions of the Official registry Docker images through 2.7.0 contain a blank password for the root user. Systems deployed using affected versions of the registry container may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-11T15:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.6.0",
      "startExcluding": "2.6.0"
    }
  },
  {
    "cveId": "CVE-2020-29591",
    "technology": "docker",
    "version": "2.6.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:registry:2.6.0:rc2:*:*:*:*:*:*",
    "description": "Versions of the Official registry Docker images through 2.7.0 contain a blank password for the root user. Systems deployed using affected versions of the registry container may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-11T15:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.6.0",
      "startExcluding": "2.6.0"
    }
  },
  {
    "cveId": "CVE-2020-29591",
    "technology": "docker",
    "version": "2.6.1",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:registry:2.6.1:*:*:*:*:*:*:*",
    "description": "Versions of the Official registry Docker images through 2.7.0 contain a blank password for the root user. Systems deployed using affected versions of the registry container may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-11T15:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.6.1",
      "startExcluding": "2.6.1"
    }
  },
  {
    "cveId": "CVE-2020-29591",
    "technology": "docker",
    "version": "2.6.1",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:registry:2.6.1:rc2:*:*:*:*:*:*",
    "description": "Versions of the Official registry Docker images through 2.7.0 contain a blank password for the root user. Systems deployed using affected versions of the registry container may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-11T15:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.6.1",
      "startExcluding": "2.6.1"
    }
  },
  {
    "cveId": "CVE-2020-29591",
    "technology": "docker",
    "version": "2.7.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:registry:2.7.0:*:*:*:*:*:*:*",
    "description": "Versions of the Official registry Docker images through 2.7.0 contain a blank password for the root user. Systems deployed using affected versions of the registry container may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-11T15:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "2.7.0",
      "startExcluding": "2.7.0"
    }
  },
  {
    "cveId": "CVE-2020-29601",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:notary_docker_image:*:*:*:*:*:*:*:*",
    "description": "The official notary docker images before signer-0.6.1-1 contain a blank password for a root user. System using the notary docker container deployed by affected versions of the docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-29602",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:irssi:docker_image:*:*:*:*:*:*:*:*",
    "description": "The official irssi docker images before 1.1-alpine (Alpine specific) contain a blank password for a root user. System using the irssi docker container deployed by affected versions of the Docker image may allow an remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-08T16:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-35184",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:composer_docker_image:*:*:*:*:*:*:*:*",
    "description": "The official composer docker images before 1.8.3 contain a blank password for a root user. System using the composer docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-17T02:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-35185",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:ghost_alpine_docker_image:*:*:*:*:*:*:*:*",
    "description": "The official ghost docker images before 2.16.1-alpine (Alpine specific) contain a blank password for a root user. System using the ghost docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-17T01:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-35186",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:adminer:*:*:*:*:*:*:*:*",
    "description": "The official adminer docker images before 4.7.0-fastcgi contain a blank password for a root user. System using the adminer docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-17T02:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-35189",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:kong:kong_alpine_docker_image:*:*:*:*:*:*:*:*",
    "description": "The official kong docker images before 1.0.2-alpine (Alpine specific) contain a blank password for a root user. System using the kong docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-17T01:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-35191",
    "technology": "docker",
    "version": "8.3.0-fpm-alpine",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:drupal:drupal_docker_images:8.3.0-fpm-alpine:rc2:*:*:*:*:*:*",
    "description": "The official drupal docker images before 8.5.10-fpm-alpine (Alpine specific) contain a blank password for a root user. System using the drupal docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-17T02:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "8.3.0-fpm-alpine",
      "startExcluding": "8.3.0-fpm-alpine"
    }
  },
  {
    "cveId": "CVE-2020-35191",
    "technology": "docker",
    "version": "8.3.0-fpm-alpine",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:drupal:drupal_docker_images:8.3.0-fpm-alpine:-:*:*:*:*:*:*",
    "description": "The official drupal docker images before 8.5.10-fpm-alpine (Alpine specific) contain a blank password for a root user. System using the drupal docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-17T02:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "8.3.0-fpm-alpine",
      "startExcluding": "8.3.0-fpm-alpine"
    }
  },
  {
    "cveId": "CVE-2020-35191",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:drupal:drupal_docker_images:*:*:*:*:*:*:*:*",
    "description": "The official drupal docker images before 8.5.10-fpm-alpine (Alpine specific) contain a blank password for a root user. System using the drupal docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-17T02:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "4.5.7",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:4.5.7:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "4.5.7",
      "startExcluding": "4.5.7"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "5.5",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:5.5:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "5.5",
      "startExcluding": "5.5"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "5.6",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:5.6:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "5.6",
      "startExcluding": "5.6"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "5.6.1",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:5.6.1:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "5.6.1",
      "startExcluding": "5.6.1"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "5.6.2",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:5.6.2:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "5.6.2",
      "startExcluding": "5.6.2"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "5.6.3",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:5.6.3:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "5.6.3",
      "startExcluding": "5.6.3"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "5.6.4",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:5.6.4:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "5.6.4",
      "startExcluding": "5.6.4"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "5.6.5",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:5.6.5:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "5.6.5",
      "startExcluding": "5.6.5"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "5.6.7",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:5.6.7:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "5.6.7",
      "startExcluding": "5.6.7"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "6.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:6.0:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "6.0",
      "startExcluding": "6.0"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "6.1",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:6.1:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "6.1",
      "startExcluding": "6.1"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "6.2",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:6.2:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "6.2",
      "startExcluding": "6.2"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "6.3",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:6.3:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "6.3",
      "startExcluding": "6.3"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "6.3.1",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:6.3.1:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "6.3.1",
      "startExcluding": "6.3.1"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "6.4",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:6.4:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "6.4",
      "startExcluding": "6.4"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "6.5",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:6.5:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "6.5",
      "startExcluding": "6.5"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "6.6",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:6.6:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "6.6",
      "startExcluding": "6.6"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "6.7",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:6.7:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "6.7",
      "startExcluding": "6.7"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "6.7.1",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:6.7.1:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "6.7.1",
      "startExcluding": "6.7.1"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "6.7.2",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:6.7.2:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "6.7.2",
      "startExcluding": "6.7.2"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "6.7.3",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:6.7.3:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "6.7.3",
      "startExcluding": "6.7.3"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "6.7.4",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:6.7.4:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "6.7.4",
      "startExcluding": "6.7.4"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "6.7.5",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:6.7.5:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "6.7.5",
      "startExcluding": "6.7.5"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "7.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:7.0:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "7.0",
      "startExcluding": "7.0"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "7.1",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:7.1:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "7.1",
      "startExcluding": "7.1"
    }
  },
  {
    "cveId": "CVE-2020-35193",
    "technology": "docker",
    "version": "lts",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:sonarsource:sonarqube_docker_image:lts:*:*:*:*:*:*:*",
    "description": "The official sonarqube docker images before alpine (Alpine specific) contain a blank password for a root user. System using the sonarqube docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-16T00:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "lts",
      "startExcluding": "lts"
    }
  },
  {
    "cveId": "CVE-2020-35195",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:haproxy_docker_image:*:*:*:*:*:*:*:*",
    "description": "The official haproxy docker images before 1.8.18-alpine (Alpine specific) contain a blank password for a root user. System using the haproxy docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-17T02:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-35196",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:rabbitmq_docker_image:*:*:*:*:*:*:*:*",
    "description": "The official rabbitmq docker images before 3.7.13-beta.1-management-alpine (Alpine specific) contain a blank password for a root user. System using the rabbitmq docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-17T02:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-35197",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:memcached_docker_image:*:*:*:*:*:*:*:*",
    "description": "The official memcached docker images before 1.5.11-alpine (Alpine specific) contain a blank password for a root user. System using the memcached docker container deployed by affected versions of the docker image may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-17T02:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-35462",
    "technology": "docker",
    "version": "3.16.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Version 3.16.0 of the CoScale agent Docker image contains a blank password for the root user. Systems deployed using affected versions of the CoScale agent container may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-15T23:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-35463",
    "technology": "docker",
    "version": "1.0.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Version 1.0.0 of the Instana Dynamic APM Docker image contains a blank password for the root user. Systems deployed using affected versions of the Instana Dynamic APM container may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-15T23:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-35464",
    "technology": "docker",
    "version": "1.3.0",
    "vulnerable": false,
    "cpeUri": "",
    "description": "Version 1.3.0 of the Weave Cloud Agent Docker image contains a blank password for the root user. Systems deployed using affected versions of the Weave Cloud Agent container may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-15T23:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-35466",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:blackfire:blackfire_docker_image:*:*:*:*:*:*:*:*",
    "description": "The Blackfire Docker image through 2020-12-14 contains a blank password for the root user. Systems deployed using affected versions of the Blackfire container may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-15T23:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-35467",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker:docs:*:*:*:*:*:*:*:*",
    "description": "The Docker Docs Docker image through 2020-12-14 contains a blank password for the root user. Systems deployed using affected versions of the Docker Docs container may allow a remote attacker to achieve root access with a blank password.",
    "publishedDate": "2020-12-15T23:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-4794",
    "technology": "docker",
    "version": "20.0.0.0",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:ibm:business_automation_workflow:20.0.0.0:*:*:*:docker:*:*:*",
    "description": "IBM Automation Workstream Services 19.0.3, 20.0.1, 20.0.2, IBM Business Automation Workflow 18.0, 19.0, and 20.0 and IBM Business Process Manager 8.6 could allow an authenticated user to obtain sensitive information or cuase a denial of service due to iimproper authorization checking. IBM X-Force ID: 189445.",
    "publishedDate": "2020-12-21T18:15Z",
    "cvssScore": 5.4,
    "severity": "MEDIUM",
    "matchingSource": "cpe",
    "versionRange": {
      "startIncluding": "20.0.0.0",
      "startExcluding": "20.0.0.0"
    }
  },
  {
    "cveId": "CVE-2020-5239",
    "technology": "docker",
    "version": "1.7",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In Mailu before version 1.7, an authenticated user can exploit a vulnerability in Mailu fetchmail script and gain full access to a Mailu instance. Mailu servers that have open registration or untrusted users are most impacted. The master and 1.7 branches are patched on our git repository. All Docker images published on docker.io/mailu for tags 1.5, 1.6, 1.7 and master are patched. For detailed instructions about patching and securing the server afterwards, see https://github.com/Mailu/Mailu/issues/1354",
    "publishedDate": "2020-02-13T01:15Z",
    "cvssScore": 8.8,
    "severity": "HIGH",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-7606",
    "technology": "docker",
    "version": "*",
    "vulnerable": true,
    "cpeUri": "cpe:2.3:a:docker-compose-remote-api_project:docker-compose-remote-api:*:*:*:*:*:node.js:*:*",
    "description": "docker-compose-remote-api through 0.1.4 allows execution of arbitrary commands. Within 'index.js' of the package, the function 'exec(serviceName, cmd, fnStdout, fnStderr, fnExit)' uses the variable 'serviceName' which can be controlled by users without any sanitization.",
    "publishedDate": "2020-03-15T22:15Z",
    "cvssScore": 9.8,
    "severity": "CRITICAL",
    "matchingSource": "cpe"
  },
  {
    "cveId": "CVE-2020-8564",
    "technology": "docker",
    "version": "1.19.3",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In Kubernetes clusters using a logging level of at least 4, processing a malformed docker config file will result in the contents of the docker config file being leaked, which can include pull secrets or other registry credentials. This affects \u003c v1.19.3, \u003c v1.18.10, \u003c v1.17.13.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8564",
    "technology": "docker",
    "version": "1.18.10",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In Kubernetes clusters using a logging level of at least 4, processing a malformed docker config file will result in the contents of the docker config file being leaked, which can include pull secrets or other registry credentials. This affects \u003c v1.19.3, \u003c v1.18.10, \u003c v1.17.13.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  },
  {
    "cveId": "CVE-2020-8564",
    "technology": "docker",
    "version": "1.17.13",
    "vulnerable": false,
    "cpeUri": "",
    "description": "In Kubernetes clusters using a logging level of at least 4, processing a malformed docker config file will result in the contents of the docker config file being leaked, which can include pull secrets or other registry credentials. This affects \u003c v1.19.3, \u003c v1.18.10, \u003c v1.17.13.",
    "publishedDate": "2020-12-07T22:15Z",
    "cvssScore": 5.5,
    "severity": "MEDIUM",
    "matchingSource": "description"
  }
]