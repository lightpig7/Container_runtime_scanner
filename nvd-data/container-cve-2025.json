{
  "CVE_Items": [
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-0113"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "A problem with the network isolation mechanism of the Palo Alto Networks Cortex XDR Broker VM allows attackers unauthorized access to Docker containers from the host network used by Broker VM. This may allow access to read files sent for analysis and logs transmitted by the Cortex XDR Agent to the Cortex XDR server."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-02-12T21:15Z",
      "lastModifiedDate": "2025-02-12T21:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-0426"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "A security issue was discovered in Kubernetes where a large number of container checkpoint requests made to the unauthenticated kubelet read-only HTTP endpoint may cause a Node Denial of Service by filling the Node's disk."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-02-13T16:16Z",
      "lastModifiedDate": "2025-02-13T17:17Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-0495"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "Buildx is a Docker CLI plugin that extends build capabilities using BuildKit.\n\nCache backends support credentials by setting secrets directly as attribute values in cache-to/cache-from configuration. When supplied as user input, these secure values may be inadvertently captured in OpenTelemetry traces as part of the arguments and flags for the traced CLI command. OpenTelemetry traces are also saved in BuildKit daemon's history records.\n\n\nThis vulnerability does not impact secrets passed to the Github cache backend via environment variables or registry authentication."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-03-17T20:15Z",
      "lastModifiedDate": "2025-03-17T20:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-0750"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "A vulnerability was found in CRI-O. A path traversal issue in the log management functions (UnMountPodLogs and LinkContainerLogs) may allow an attacker with permissions to create and delete Pods to unmount arbitrary host paths, leading to node-level denial of service by unmounting critical system directories."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-01-28T10:15Z",
      "lastModifiedDate": "2025-02-11T12:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-0838"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "There exists a heap buffer overflow vulnerable in Abseil-cpp. The sized constructors, reserve(), and rehash() methods of absl::{flat,node}hash{set,map} did not impose an upper bound on their size argument. As a result, it was possible for a caller to pass a very large size that would cause an integer overflow when computing the size of the container's backing store, and a subsequent out-of-bounds memory write. Subsequent accesses to the container might also access out-of-bounds memory. We recommend upgrading past commit 5a0e2cb5e3958dd90bb8569a2766622cb74d90c1"
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-02-21T15:15Z",
      "lastModifiedDate": "2025-02-21T15:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-1146"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "CrowdStrike uses industry-standard TLS (transport layer security) to secure communications from the Falcon sensor to the CrowdStrike cloud. CrowdStrike has identified a validation logic error in the Falcon sensor for Linux, Falcon Kubernetes Admission Controller, and Falcon Container Sensor where our TLS connection routine to the CrowdStrike cloud can incorrectly process server certificate validation. This could allow an attacker with the ability to control network traffic to potentially conduct a man-in-the-middle (MiTM) attack. CrowdStrike identified this issue internally and released a security fix in all Falcon sensor for Linux, Falcon Kubernetes Admission Controller, and Falcon Container Sensor versions 7.06 and above.\n\n \nCrowdStrike identified this issue through our longstanding, rigorous security review process, which has been continually strengthened with deeper source code analysis and ongoing program enhancements as part of our commitment to security resilience. CrowdStrike has no indication of any exploitation of this issue in the wild. CrowdStrike has leveraged its world class threat hunting and intelligence capabilities to actively monitor for signs of abuse or usage of this flaw and will continue to do so. \n\n\nWindows and Mac sensors are not affected by this."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-02-12T19:15Z",
      "lastModifiedDate": "2025-02-12T19:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-1696"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "A vulnerability exists in Docker Desktop prior to version 4.39.0 that could lead to the unintentional disclosure of sensitive information via application logs. In affected versions, proxy configuration data—potentially including sensitive details—was written to log files in clear text whenever an HTTP GET request was made through a proxy. An attacker with read access to these logs could obtain the proxy information and leverage it for further attacks or unauthorized access. Starting with version 4.39.0, Docker Desktop no longer logs the proxy string, thereby mitigating this risk."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-03-06T12:15Z",
      "lastModifiedDate": "2025-03-06T12:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-1767"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "This CVE only affects Kubernetes clusters that utilize the in-tree gitRepo volume to clone git repositories from other pods within the same node. Since the in-tree gitRepo volume feature has been deprecated and will not receive security updates upstream, any cluster still using this feature remains vulnerable."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-03-13T17:15Z",
      "lastModifiedDate": "2025-03-13T21:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-21713"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/pseries/iommu: Don't unset window if it was never set\n\nOn pSeries, when user attempts to use the same vfio container used by\ndifferent iommu group, the spapr_tce_set_window() returns -EPERM\nand the subsequent cleanup leads to the below crash.\n\n   Kernel attempted to read user page (308) - exploit attempt?\n   BUG: Kernel NULL pointer dereference on read at 0x00000308\n   Faulting instruction address: 0xc0000000001ce358\n   Oops: Kernel access of bad area, sig: 11 [#1]\n   NIP:  c0000000001ce358 LR: c0000000001ce05c CTR: c00000000005add0\n   \u003csnip\u003e\n   NIP [c0000000001ce358] spapr_tce_unset_window+0x3b8/0x510\n   LR [c0000000001ce05c] spapr_tce_unset_window+0xbc/0x510\n   Call Trace:\n     spapr_tce_unset_window+0xbc/0x510 (unreliable)\n     tce_iommu_attach_group+0x24c/0x340 [vfio_iommu_spapr_tce]\n     vfio_container_attach_group+0xec/0x240 [vfio]\n     vfio_group_fops_unl_ioctl+0x548/0xb00 [vfio]\n     sys_ioctl+0x754/0x1580\n     system_call_exception+0x13c/0x330\n     system_call_vectored_common+0x15c/0x2ec\n   \u003csnip\u003e\n   --- interrupt: 3000\n\nFix this by having null check for the tbl passed to the\nspapr_tce_unset_window()."
            }
          ]
        }
      },
      "configurations": {
        "nodes": [
          {
            "operator": "OR",
            "cpe_match": [
              {
                "vulnerable": true,
                "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
              },
              {
                "vulnerable": true,
                "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
              }
            ]
          }
        ]
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "3.1",
            "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
            "attackVector": "LOCAL",
            "attackComplexity": "LOW",
            "privilegesRequired": "LOW",
            "userInteraction": "NONE",
            "scope": "UNCHANGED",
            "confidentialityImpact": "NONE",
            "integrityImpact": "NONE",
            "availabilityImpact": "HIGH",
            "baseScore": 5.5,
            "baseSeverity": "MEDIUM"
          },
          "exploitabilityScore": 1.8,
          "impactScore": 3.6
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-02-27T02:15Z",
      "lastModifiedDate": "2025-03-07T12:30Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-21834"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nseccomp: passthrough uretprobe systemcall without filtering\n\nWhen attaching uretprobes to processes running inside docker, the attached\nprocess is segfaulted when encountering the retprobe.\n\nThe reason is that now that uretprobe is a system call the default seccomp\nfilters in docker block it as they only allow a specific set of known\nsyscalls. This is true for other userspace applications which use seccomp\nto control their syscall surface.\n\nSince uretprobe is a \"kernel implementation detail\" system call which is\nnot used by userspace application code directly, it is impractical and\nthere's very little point in forcing all userspace applications to\nexplicitly allow it in order to avoid crashing tracked processes.\n\nPass this systemcall through seccomp without depending on configuration.\n\nNote: uretprobe is currently only x86_64 and isn't expected to ever be\nsupported in i386.\n\n[kees: minimized changes for easier backporting, tweaked commit log]"
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-03-06T17:15Z",
      "lastModifiedDate": "2025-03-06T17:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-2241"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "A flaw was found in Hive, a component of Multicluster Engine (MCE) and Advanced Cluster Management (ACM). This vulnerability causes VCenter credentials to be exposed in the ClusterProvision object after provisioning a VSphere cluster. Users with read access to ClusterProvision objects can extract sensitive credentials even if they do not have direct access to Kubernetes Secrets. This issue can lead to unauthorized VCenter access, cluster management, and privilege escalation."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "3.1",
            "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:N",
            "attackVector": "NETWORK",
            "attackComplexity": "HIGH",
            "privilegesRequired": "LOW",
            "userInteraction": "NONE",
            "scope": "CHANGED",
            "confidentialityImpact": "HIGH",
            "integrityImpact": "HIGH",
            "availabilityImpact": "NONE",
            "baseScore": 8.2,
            "baseSeverity": "HIGH"
          },
          "exploitabilityScore": 1.8,
          "impactScore": 5.8
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-03-17T17:15Z",
      "lastModifiedDate": "2025-03-17T17:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-22605"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "Coolify is an open-source and self-hostable tool for managing servers, applications, and databases. Starting in version 4.0.0-beta.18 and prior to 4.0.0-beta.253, a vulnerability in the execution of commands on remote servers allows an authenticated user to execute arbitrary code on the local Coolify container, gaining access to data and private keys or tokens of other users/teams. The ability to inject malicious commands into the Coolify container gives authenticated attackers the ability to fully retrieve and control the data and availability of the software. Centrally hosted Coolify instances (open registration and/or multiple teams with potentially untrustworthy users) are especially at risk, as sensitive data of all users and connected servers can be leaked by any user. Additionally, attackers are able to modify the running software, potentially deploying malicious images to remote nodes or generally changing its behavior. Version 4.0.0-beta.253 patches this issue."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-01-24T15:15Z",
      "lastModifiedDate": "2025-01-24T15:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-23028"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "Cilium is a networking, observability, and security solution with an eBPF-based dataplane. A denial of service vulnerability affects versions 1.14.0 through 1.14.7, 1.15.0 through 1.15.11, and 1.16.0 through 1.16.4. In a Kubernetes cluster where Cilium is configured to proxy DNS traffic, an attacker can crash Cilium agents by sending a crafted DNS response to workloads from outside the cluster. For traffic that is allowed but without using DNS-based policy, the dataplane will continue to pass traffic as configured at the time of the DoS. For workloads that have DNS-based policy configured, existing connections may continue to operate, and new connections made without relying on DNS resolution may continue to be established, but new connections which rely on DNS resolution may be disrupted. Any configuration changes that affect the impacted agent may not be applied until the agent is able to restart. This issue is fixed in Cilium v1.14.18, v1.15.12, and v1.16.5. No known workarounds are available."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-01-22T17:15Z",
      "lastModifiedDate": "2025-02-18T20:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-23045"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "Computer Vision Annotation Tool (CVAT) is an interactive video and image annotation tool for computer vision. An attacker with an account on an affected CVAT instance is able to run arbitrary code in the context of the Nuclio function container. This vulnerability affects CVAT deployments that run any of the serverless functions of type tracker from the CVAT Git repository, namely TransT and SiamMask. Deployments with custom functions of type tracker may also be affected, depending on how they handle state serialization. If a function uses an unsafe serialization library such as pickle or jsonpickle, it's likely to be vulnerable. Upgrade to CVAT 2.26.0 or later. If you are unable to upgrade, shut down any instances of the TransT or SiamMask functions you're running."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-01-28T16:15Z",
      "lastModifiedDate": "2025-01-28T16:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-23047"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "Cilium is a networking, observability, and security solution with an eBPF-based dataplane. An insecure default `Access-Control-Allow-Origin` header value could lead to sensitive data exposure for users of Cilium versions 1.14.0 through 1.14.7, 1.15.0 through 1.15.11, and 1.16.0 through 1.16.4 who deploy Hubble UI using either Cilium CLI or via the Cilium Helm chart. A user with access to a Hubble UI instance affected by this issue could leak configuration details about the Kubernetes cluster which Hubble UI is monitoring, including node names, IP addresses, and other metadata about workloads and the cluster networking configuration. In order for this vulnerability to be exploited, a victim would have to first visit a malicious page. This issue is fixed in Cilium v1.14.18, v1.15.12, and v1.16.5. As a workaround, users who deploy Hubble UI using the Cilium Helm chart directly can remove the CORS headers from the Helm template as shown in the patch from commit a3489f190ba6e87b5336ee685fb6c80b1270d06d."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-01-22T18:15Z",
      "lastModifiedDate": "2025-01-22T18:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-23208"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "zot is a production-ready vendor-neutral OCI image registry. The group data stored for users in the boltdb database (meta.db) is an append-list so group revocations/removals are ignored in the API. SetUserGroups is alled on login, but instead of replacing the group memberships, they are appended. This may be due to some conflict with the group definitions in the config file, but that wasn't obvious to me if it were the case. Any Zot configuration that relies on group-based authorization will not respect group remove/revocation by an IdP. This issue has been addressed in version 2.1.2. All users are advised to upgrade. There are no known workarounds for this vulnerability."
            }
          ]
        }
      },
      "configurations": {
        "nodes": [
          {
            "operator": "OR",
            "cpe_match": [
              {
                "vulnerable": true,
                "cpe23Uri": "cpe:2.3:a:zotregistry:zot:*:*:*:*:*:*:*:*"
              }
            ]
          }
        ]
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "3.1",
            "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "attackVector": "NETWORK",
            "attackComplexity": "LOW",
            "privilegesRequired": "NONE",
            "userInteraction": "NONE",
            "scope": "UNCHANGED",
            "confidentialityImpact": "NONE",
            "integrityImpact": "LOW",
            "availabilityImpact": "NONE",
            "baseScore": 5.3,
            "baseSeverity": "MEDIUM"
          },
          "exploitabilityScore": 3.9,
          "impactScore": 1.4
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-01-17T23:15Z",
      "lastModifiedDate": "2025-03-04T14:45Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-23211"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "Tandoor Recipes is an application for managing recipes, planning meals, and building shopping lists. A Jinja2 SSTI vulnerability allows any user to execute commands on the server. In the case of the provided Docker Compose file as root. This vulnerability is fixed in 1.5.24."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-01-28T16:15Z",
      "lastModifiedDate": "2025-01-28T17:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-23216"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. A vulnerability was discovered in Argo CD that exposed secret values in error messages and the diff view when an invalid Kubernetes Secret resource was synced from a repository. The vulnerability assumes the user has write access to the repository and can exploit it, either intentionally or unintentionally, by committing an invalid Secret to repository and triggering a Sync. Once exploited, any user with read access to Argo CD can view the exposed secret data. The vulnerability is fixed in v2.13.4, v2.12.10, and v2.11.13."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-01-30T16:15Z",
      "lastModifiedDate": "2025-01-30T16:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-23359"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "NVIDIA Container Toolkit for Linux contains a Time-of-Check Time-of-Use (TOCTOU) vulnerability when used with default configuration, where a crafted container image could gain access to the host file system. A successful exploit of this vulnerability might lead to code execution, denial of service, escalation of privileges, information disclosure, and data tampering."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-02-12T01:15Z",
      "lastModifiedDate": "2025-02-12T01:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-24019"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "YesWiki is a wiki system written in PHP. In versions up to and including 4.4.5, it is possible for any authenticated user, through the use of the filemanager to delete any file owned by the user running the FastCGI Process Manager (FPM) on the host without any limitation on the filesystem's scope. This vulnerability allows any authenticated user to arbitrarily remove content from the Wiki resulting in partial loss of data and defacement/deterioration of the website. In the context of a container installation of YesWiki without any modification, the `yeswiki` files (for example .php) are not owned by the same user (root) as the one running the FPM process (www-data). However in a standard installation, www-data may also be the owner of the PHP files, allowing a malicious user to completely cut the access to the wiki by deleting all important PHP files (like index.php or core files of YesWiki). Version 4.5.0 contains a patch for this issue."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-01-21T18:15Z",
      "lastModifiedDate": "2025-01-21T18:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-24030"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "Envoy Gateway is an open source project for managing Envoy Proxy as a standalone or Kubernetes-based application gateway. A user with access to the Kubernetes cluster can use a path traversal attack to execute Envoy Admin interface commands on proxies managed by any version of Envoy Gateway prior to 1.2.6. The admin interface can be used to terminate the Envoy process and extract the Envoy configuration (possibly containing confidential data). Version 1.2.6 fixes the issue. As a workaround, the `EnvoyProxy` API can be used to apply a bootstrap config patch that restricts access strictly to the prometheus stats endpoint. Find below an example of such a bootstrap patch."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-01-23T04:15Z",
      "lastModifiedDate": "2025-01-23T04:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-24319"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "When BIG-IP Next Central Manager is running, undisclosed requests to the BIG-IP Next Central Manager API can cause the BIG-IP Next Central Manager Node's Kubernetes service to terminate.\n\n\n\n \n\n\nNote: Software versions which have reached End of Technical Support (EoTS) are not evaluated."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-02-05T18:15Z",
      "lastModifiedDate": "2025-02-05T18:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-24376"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "kubewarden-controller is a Kubernetes controller that allows you to dynamically register Kubewarden admission policies. By design, AdmissionPolicy and AdmissionPolicyGroup can evaluate only namespaced resources. The resources to be evaluated are determined by the rules provided by the user when defining the policy. There might be Kubernetes namespaced resources that should not be validated by AdmissionPolicy and by the AdmissionPolicyGroup policies because of their sensitive nature. For example, PolicyReport are namespaced resources that contain the list of non compliant objects found inside of a namespace. An attacker can use either an AdmissionPolicy or an AdmissionPolicyGroup to prevent the creation and update of PolicyReport objects to hide non-compliant resources. Moreover, the same attacker might use a mutating AdmissionPolicy to alter the contents of the PolicyReport created inside of the namespace. Starting from the 1.21.0 release, the validation rules applied to AdmissionPolicy and AdmissionPolicyGroup have been tightened to prevent them from validating sensitive types of namespaced resources."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-01-30T16:15Z",
      "lastModifiedDate": "2025-01-30T16:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-24784"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "kubewarden-controller is a Kubernetes controller that allows you to dynamically register Kubewarden admission policies. The policy group feature, added to by the 1.17.0 release. By being namespaced, the AdmissionPolicyGroup has a well constrained impact on cluster resources. Hence, it’s considered safe to allow non-admin users to create and manage these resources in the namespaces they own. Kubewarden policies can be allowed to query the Kubernetes API at evaluation time; these types of policies are called “context aware“. Context aware policies can perform list and get operations against a Kubernetes cluster. The queries are done using the ServiceAccount of the Policy Server instance that hosts the policy. That means that access to the cluster is determined by the RBAC rules that apply to that ServiceAccount. The AdmissionPolicyGroup CRD allowed the deployment of context aware policies. This could allow an attacker to obtain information about resources that are out of their reach, by leveraging a higher access to the cluster granted to the ServiceAccount token used to run the policy. The impact of this vulnerability depends on the privileges that have been granted to the ServiceAccount used to run the Policy Server and assumes that users are using the recommended best practices of keeping the Policy Server's ServiceAccount least privileged. By default, the Kubewarden helm chart grants access to the following resources (cluster wide) only: Namespace, Pod, Deployment and Ingress. This vulnerability is fixed in 1.21.0."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-01-30T16:15Z",
      "lastModifiedDate": "2025-01-30T16:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-24882"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "regclient is a Docker and OCI Registry Client in Go. A malicious registry could return a different digest for a pinned manifest without detection. This vulnerability is fixed in 0.7.1."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-01-29T18:15Z",
      "lastModifiedDate": "2025-01-29T18:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-24884"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "kube-audit-rest is a simple logger of mutation/creation requests to the k8s api. If the \"full-elastic-stack\" example vector configuration was used for a real cluster, the previous values of kubernetes secrets would have been disclosed in the audit messages. This vulnerability is fixed in 1.0.16."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-01-29T21:15Z",
      "lastModifiedDate": "2025-01-29T21:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-24886"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "pwn.college is an education platform to learn about, and practice, core cybersecurity concepts in a hands-on fashion. Incorrect symlink checks on user specified dojos allows for users (admin not required) to perform an LFI from the CTFd container. When a user clones or updates repositories, a check is performed to see if the repository had contained any symlinks. A malicious user could craft a repository with symlinks pointed to sensitive files and then retrieve them using the CTFd website."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-01-30T23:15Z",
      "lastModifiedDate": "2025-01-30T23:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-24891"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "Dumb Drop is a file upload application. Users with permission to upload to the service are able to exploit a path traversal vulnerability to overwrite arbitrary system files. As the container runs as root by default, there is no limit to what can be overwritten. With this, it's possible to inject malicious payloads into files ran on schedule or upon certain service actions. As the service is not required to run with authentication enabled, this may permit wholly unprivileged users root access. Otherwise, anybody with a PIN."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-01-31T23:15Z",
      "lastModifiedDate": "2025-01-31T23:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-24965"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "crun is an open source OCI Container Runtime fully written in C. In affected versions A malicious container image could trick the krun handler into escaping the root filesystem, allowing file creation or modification on the host. No special permissions are needed, only the ability for the current user to write to the target file. The problem is fixed in crun 1.20 and all users are advised to upgrade. There are no known workarounds for this vulnerability."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-02-19T17:15Z",
      "lastModifiedDate": "2025-02-19T17:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-24976"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "Distribution is a toolkit to pack, ship, store, and deliver container content. Systems running registry versions 3.0.0-beta.1 through 3.0.0-rc.2 with token authentication enabled may be vulnerable to an issue in which token authentication allows an attacker to inject an untrusted signing key in a JSON web token (JWT). The issue lies in how the JSON web key (JWK) verification is performed. When a JWT contains a JWK header without a certificate chain, the code only checks if the KeyID (`kid`) matches one of the trusted keys, but doesn't verify that the actual key material matches. A fix for the issue is available at commit 5ea9aa028db65ca5665f6af2c20ecf9dc34e5fcd and expected to be a part of version 3.0.0-rc.3. There is no way to work around this issue without patching if the system requires token authentication."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-02-11T16:15Z",
      "lastModifiedDate": "2025-02-11T16:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-25196"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "OpenFGA is a high-performance and flexible authorization/permission engine built for developers and inspired by Google Zanzibar. OpenFGA \u003c v1.8.4 (Helm chart \u003c openfga-0.2.22, docker \u003c v.1.8.4) are vulnerable to authorization bypass when certain Check and ListObject calls are executed. Users on OpenFGA v1.8.4 or previous, specifically under the following conditions are affected by this authorization bypass vulnerability: 1. Calling Check API or ListObjects with a model that has a relation directly assignable to both public access AND userset with the same type. 2. A type bound public access tuple is assigned to an object. 3. userset tuple is not assigned to the same object. and 4. Check request's user field is a userset that has the same type as the type bound public access tuple's user type. Users are advised to upgrade to v1.8.5 which is backwards compatible. There are no known workarounds for this vulnerability."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-02-19T21:15Z",
      "lastModifiedDate": "2025-02-19T21:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-25198"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "mailcow: dockerized is an open source groupware/email suite based on docker. Prior to version 2025-01a, a vulnerability in mailcow's password reset functionality allows an attacker to manipulate the `Host HTTP` header to generate a password reset link pointing to an attacker-controlled domain. This can lead to account takeover if a user clicks the poisoned link. Version 2025-01a contains a patch. As a workaround, deactivate the password reset functionality by clearing `Notification email sender` and `Notification email subject` under System -\u003e Configuration -\u003e Options -\u003e Password Settings."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-02-12T18:15Z",
      "lastModifiedDate": "2025-02-12T18:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-25294"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "Envoy Gateway is an open source project for managing Envoy Proxy as a standalone or Kubernetes-based application gateway. In all Envoy Gateway versions prior to 1.2.7 and 1.3.1 a default Envoy Proxy access log configuration is used. This format is vulnerable to log injection attacks. If the attacker uses a specially crafted user-agent which performs json injection, then he could add and overwrite fields to the access log. This vulnerability is fixed in 1.3.1 and 1.2.7. One can overwrite the old text based default format with JSON formatter by modifying the \"EnvoyProxy.spec.telemetry.accessLog\" setting."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-03-06T19:15Z",
      "lastModifiedDate": "2025-03-06T19:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-26492"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "In JetBrains TeamCity before 2024.12.2 improper Kubernetes connection settings could expose sensitive resources"
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-02-11T14:15Z",
      "lastModifiedDate": "2025-02-11T14:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-27403"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "Ratify is a verification engine as a binary executable and on Kubernetes which enables verification of artifact security metadata and admits for deployment only those that comply with policies the user creates. In a Kubernetes environment, Ratify can be configured to authenticate to a private Azure Container Registry (ACR). The Azure workload identity and Azure managed identity authentication providers are configured in this setup. Users that configure a private ACR to be used with the Azure authentication providers may be impacted by a vulnerability that exists in versions prior to 1.2.3 and 1.3.2. Both Azure authentication providers attempt to exchange an Entra ID (EID) token for an ACR refresh token. However, Ratify’s Azure authentication providers did not verify that the target registry is an ACR. This could have led to the EID token being presented to a non-ACR registry during token exchange. EID tokens with ACR access can potentially be extracted and abused if a user workload contains an image reference to a malicious registry. As of versions 1.2.3 and 1.3.2, the Azure workload identity and Azure managed identity authentication providers are updated to add new validation prior to EID token exchange. Validation relies upon registry domain validation against a pre-configured list of well-known ACR endpoints. EID token exchange will be executed only if at least one of the configured well-known domain suffixes (wildcard support included) matches the registry domain of the image reference."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-03-11T15:15Z",
      "lastModifiedDate": "2025-03-11T15:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-27410"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "PwnDoc is a penetration test reporting application. Prior to version 1.2.0, the backup restore functionality is vulnerable to path traversal in the TAR entry's name, allowing an attacker to overwrite any file on the system with their content. By overwriting an included `.js` file and restarting the container, this allows for Remote Code Execution as an administrator. The remote code execution occurs because any user with the `backups:create` and `backups:update` (only administrators by default) is able to overwrite any file on the system. Version 1.2.0 fixes the issue."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-02-28T21:15Z",
      "lastModifiedDate": "2025-03-04T21:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-27510"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "conda-forge-metadata provides programatic access to conda-forge's metadata. conda-forge-metadata uses an optional dependency - \"conda-oci-mirror\" which was neither present on the PyPi repository nor registered by any entity. If conda-oci-mirror is taken over by a threat actor, it can result in remote code execution."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-03-04T22:15Z",
      "lastModifiedDate": "2025-03-05T17:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-27519"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "Cognita is a RAG (Retrieval Augmented Generation) Framework for building modular, open source applications for production by TrueFoundry. A path traversal issue exists at /v1/internal/upload-to-local-directory which is enabled when the Local env variable is set to true, such as when Cognita is setup using Docker. Because the docker environment sets up the backend uvicorn server with auto reload enabled, when an attacker overwrites the /app/backend/__init__.py file, the file will automatically be reloaded and executed. This allows an attacker to get remote code execution in the context of the Docker container. This vulnerability is fixed in commit a78bd065e05a1b30a53a3386cc02e08c317d2243."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-03-07T16:15Z",
      "lastModifiedDate": "2025-03-07T16:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-27615"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "umatiGateway is software for connecting OPC Unified Architecture servers with an MQTT broker utilizing JSON messages. The user interface may possibly be publicly accessible with umatiGateway's provided docker-compose file. With this access, the configuration can be viewed and altered. Commit 5d81a3412bc0051754a3095d89a06d6d743f2b16 uses `127.0.0.1:8080:8080` to limit access to the local network. For those who are unable to use this proposed patch, a firewall on Port 8080 may block remote access, but the workaround may not be perfect because Docker may also bypass a firewall by its iptable based rules for port forwarding."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-03-10T19:15Z",
      "lastModifiedDate": "2025-03-10T19:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-27616"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "Vela is a Pipeline Automation (CI/CD) framework built on Linux container technology written in Golang. Prior to versions 0.25.3 and 0.26.3, by spoofing a webhook payload with a specific set of headers and body data, an attacker could transfer ownership of a repository and its repo level secrets to a separate repository. These secrets could be exfiltrated by follow up builds to the repository. Users with an enabled repository with access to repo level CI secrets in Vela are vulnerable to the exploit, and any user with access to the CI instance and the linked source control manager can perform the exploit. Versions 0.25.3 and 0.26.3 fix the issue. No known workarounds are available."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-03-10T19:15Z",
      "lastModifiedDate": "2025-03-10T19:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-27650"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "Vasion Print (formerly PrinterLogic) before Virtual Appliance Host 22.0.862 Application 20.0.2014 allows Private Keys in Docker Overlay V-2023-013."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-03-05T06:15Z",
      "lastModifiedDate": "2025-03-05T21:15Z"
    },
    {
      "cve": {
        "CVE_data_meta": {
          "ID": "CVE-2025-29781"
        },
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "The Bare Metal Operator (BMO) implements a Kubernetes API for managing bare metal hosts in Metal3. Baremetal Operator enables users to load Secret from arbitrary namespaces upon deployment of the namespace scoped Custom Resource `BMCEventSubscription`. Prior to versions 0.8.1 and 0.9.1, an adversary Kubernetes account with only namespace level roles (e.g. a tenant controlling a namespace) may create a `BMCEventSubscription` in his authorized namespace and then load Secrets from his unauthorized namespaces to his authorized namespace via the Baremetal Operator, causing Secret Leakage. The patch makes BMO refuse to read Secrets from other namespace than where the corresponding BMH resource is. The patch does not change the `BMCEventSubscription` API in BMO, but stricter validation will fail the request at admission time. It will also prevent the controller reading such Secrets, in case the BMCES CR has already been deployed. The issue exists for all versions of BMO, and is patched in BMO releases v0.9.1 and v0.8.1. Prior upgrading to patched BMO version, duplicate any existing Secret pointed to by `BMCEventSubscription`'s `httpHeadersRef` to the same namespace where the corresponding BMH exists. After upgrade, remove the old Secrets. As a workaround, the operator can configure BMO RBAC to be namespace scoped, instead of cluster scoped, to prevent BMO from accessing Secrets from other namespaces, and/or use `WATCH_NAMESPACE` configuration option to limit BMO to single namespace."
            }
          ]
        }
      },
      "configurations": {
        "nodes": []
      },
      "impact": {
        "baseMetricV3": {
          "cvssV3": {
            "version": "",
            "vectorString": "",
            "attackVector": "",
            "attackComplexity": "",
            "privilegesRequired": "",
            "userInteraction": "",
            "scope": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0,
            "baseSeverity": ""
          },
          "exploitabilityScore": 0,
          "impactScore": 0
        },
        "baseMetricV2": {
          "cvssV2": {
            "version": "",
            "vectorString": "",
            "accessVector": "",
            "accessComplexity": "",
            "authentication": "",
            "confidentialityImpact": "",
            "integrityImpact": "",
            "availabilityImpact": "",
            "baseScore": 0
          },
          "severity": "",
          "exploitabilityScore": 0,
          "impactScore": 0,
          "obtainAllPrivilege": false,
          "obtainUserPrivilege": false,
          "obtainOtherPrivilege": false
        }
      },
      "publishedDate": "2025-03-17T22:15Z",
      "lastModifiedDate": "2025-03-18T15:16Z"
    }
  ],
  "dataFormat": "MITRE",
  "dataType": "CVE-Container-Related",
  "dataVersion": "",
  "numberOfCVEs": 42,
  "timestamp": "2025-03-20T17:00:16+08:00"
}